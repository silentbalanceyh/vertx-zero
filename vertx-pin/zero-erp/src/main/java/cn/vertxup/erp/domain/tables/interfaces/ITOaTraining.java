/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.erp.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ITOaTraining extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.T_OA_TRAINING.KEY</code>. 「key」- Ticket
     * Primary Key
     */
    public ITOaTraining setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.T_OA_TRAINING.KEY</code>. 「key」- Ticket
     * Primary Key
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.T_OA_TRAINING.COMMENT_EXTENSION</code>.
     * 「commentExtension」- Extension Comment
     */
    public ITOaTraining setCommentExtension(String value);

    /**
     * Getter for <code>DB_ETERNAL.T_OA_TRAINING.COMMENT_EXTENSION</code>.
     * 「commentExtension」- Extension Comment
     */
    public String getCommentExtension();

    /**
     * Setter for <code>DB_ETERNAL.T_OA_TRAINING.START_AT</code>. 「startAt」-
     * From
     */
    public ITOaTraining setStartAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.T_OA_TRAINING.START_AT</code>. 「startAt」-
     * From
     */
    public LocalDateTime getStartAt();

    /**
     * Setter for <code>DB_ETERNAL.T_OA_TRAINING.END_AT</code>. 「endAt」- To
     */
    public ITOaTraining setEndAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.T_OA_TRAINING.END_AT</code>. 「endAt」- To
     */
    public LocalDateTime getEndAt();

    /**
     * Setter for <code>DB_ETERNAL.T_OA_TRAINING.TRAIN_LOCATION</code>.
     * 「trainLocation」- The location for training
     */
    public ITOaTraining setTrainLocation(String value);

    /**
     * Getter for <code>DB_ETERNAL.T_OA_TRAINING.TRAIN_LOCATION</code>.
     * 「trainLocation」- The location for training
     */
    public String getTrainLocation();

    /**
     * Setter for <code>DB_ETERNAL.T_OA_TRAINING.TRAIN_MODE</code>. 「trainMode」-
     * The mode of training
     */
    public ITOaTraining setTrainMode(String value);

    /**
     * Getter for <code>DB_ETERNAL.T_OA_TRAINING.TRAIN_MODE</code>. 「trainMode」-
     * The mode of training
     */
    public String getTrainMode();

    /**
     * Setter for <code>DB_ETERNAL.T_OA_TRAINING.LEADER</code>. 「leader」- The
     * training leader
     */
    public ITOaTraining setLeader(String value);

    /**
     * Getter for <code>DB_ETERNAL.T_OA_TRAINING.LEADER</code>. 「leader」- The
     * training leader
     */
    public String getLeader();

    /**
     * Setter for <code>DB_ETERNAL.T_OA_TRAINING.LEADER_COMMENT</code>.
     * 「leaderComment」- Comment from leader
     */
    public ITOaTraining setLeaderComment(String value);

    /**
     * Getter for <code>DB_ETERNAL.T_OA_TRAINING.LEADER_COMMENT</code>.
     * 「leaderComment」- Comment from leader
     */
    public String getLeaderComment();

    /**
     * Setter for <code>DB_ETERNAL.T_OA_TRAINING.REVIEWER</code>. 「reviewer」-
     * The training reviewer
     */
    public ITOaTraining setReviewer(String value);

    /**
     * Getter for <code>DB_ETERNAL.T_OA_TRAINING.REVIEWER</code>. 「reviewer」-
     * The training reviewer
     */
    public String getReviewer();

    /**
     * Setter for <code>DB_ETERNAL.T_OA_TRAINING.REVIEWER_COMMENT</code>.
     * 「reviewerComment」- Comment from reviewer
     */
    public ITOaTraining setReviewerComment(String value);

    /**
     * Getter for <code>DB_ETERNAL.T_OA_TRAINING.REVIEWER_COMMENT</code>.
     * 「reviewerComment」- Comment from reviewer
     */
    public String getReviewerComment();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface ITOaTraining
     */
    public void from(ITOaTraining from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface ITOaTraining
     */
    public <E extends ITOaTraining> E into(E into);

        @Override
        public default ITOaTraining fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setCommentExtension,json::getString,"COMMENT_EXTENSION","java.lang.String");
                setOrThrow(this::setStartAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"START_AT","java.time.LocalDateTime");
                setOrThrow(this::setEndAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"END_AT","java.time.LocalDateTime");
                setOrThrow(this::setTrainLocation,json::getString,"TRAIN_LOCATION","java.lang.String");
                setOrThrow(this::setTrainMode,json::getString,"TRAIN_MODE","java.lang.String");
                setOrThrow(this::setLeader,json::getString,"LEADER","java.lang.String");
                setOrThrow(this::setLeaderComment,json::getString,"LEADER_COMMENT","java.lang.String");
                setOrThrow(this::setReviewer,json::getString,"REVIEWER","java.lang.String");
                setOrThrow(this::setReviewerComment,json::getString,"REVIEWER_COMMENT","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("COMMENT_EXTENSION",getCommentExtension());
                json.put("START_AT",getStartAt()==null?null:getStartAt().toString());
                json.put("END_AT",getEndAt()==null?null:getEndAt().toString());
                json.put("TRAIN_LOCATION",getTrainLocation());
                json.put("TRAIN_MODE",getTrainMode());
                json.put("LEADER",getLeader());
                json.put("LEADER_COMMENT",getLeaderComment());
                json.put("REVIEWER",getReviewer());
                json.put("REVIEWER_COMMENT",getReviewerComment());
                return json;
        }

}
