/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.erp.domain.tables.pojos;


import cn.vertxup.erp.domain.tables.interfaces.ITVendorCheckOut;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TVendorCheckOut implements VertxPojo, ITVendorCheckOut {

    private static final long serialVersionUID = 1L;

    private String key;
    private String commentExtension;
    private String classification;
    private LocalDateTime startAt;
    private LocalDateTime endAt;
    private Integer days;
    private LocalDateTime leaveAt;
    private String reason;

    public TVendorCheckOut() {}

    public TVendorCheckOut(ITVendorCheckOut value) {
        this.key = value.getKey();
        this.commentExtension = value.getCommentExtension();
        this.classification = value.getClassification();
        this.startAt = value.getStartAt();
        this.endAt = value.getEndAt();
        this.days = value.getDays();
        this.leaveAt = value.getLeaveAt();
        this.reason = value.getReason();
    }

    public TVendorCheckOut(
        String key,
        String commentExtension,
        String classification,
        LocalDateTime startAt,
        LocalDateTime endAt,
        Integer days,
        LocalDateTime leaveAt,
        String reason
    ) {
        this.key = key;
        this.commentExtension = commentExtension;
        this.classification = classification;
        this.startAt = startAt;
        this.endAt = endAt;
        this.days = days;
        this.leaveAt = leaveAt;
        this.reason = reason;
    }

        public TVendorCheckOut(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.KEY</code>. 「key」- Ticket
     * Primary Key
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.KEY</code>. 「key」- Ticket
     * Primary Key
     */
    @Override
    public TVendorCheckOut setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.COMMENT_EXTENSION</code>.
     * 「commentExtension」- Extension Comment
     */
    @Override
    public String getCommentExtension() {
        return this.commentExtension;
    }

    /**
     * Setter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.COMMENT_EXTENSION</code>.
     * 「commentExtension」- Extension Comment
     */
    @Override
    public TVendorCheckOut setCommentExtension(String commentExtension) {
        this.commentExtension = commentExtension;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.CLASSIFICATION</code>.
     * 「classification」- The ticket related business type
     */
    @Override
    public String getClassification() {
        return this.classification;
    }

    /**
     * Setter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.CLASSIFICATION</code>.
     * 「classification」- The ticket related business type
     */
    @Override
    public TVendorCheckOut setClassification(String classification) {
        this.classification = classification;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.START_AT</code>.
     * 「startAt」- From
     */
    @Override
    public LocalDateTime getStartAt() {
        return this.startAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.START_AT</code>.
     * 「startAt」- From
     */
    @Override
    public TVendorCheckOut setStartAt(LocalDateTime startAt) {
        this.startAt = startAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.END_AT</code>. 「endAt」- To
     */
    @Override
    public LocalDateTime getEndAt() {
        return this.endAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.END_AT</code>. 「endAt」- To
     */
    @Override
    public TVendorCheckOut setEndAt(LocalDateTime endAt) {
        this.endAt = endAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.DAYS</code>. 「days」-
     * Duration
     */
    @Override
    public Integer getDays() {
        return this.days;
    }

    /**
     * Setter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.DAYS</code>. 「days」-
     * Duration
     */
    @Override
    public TVendorCheckOut setDays(Integer days) {
        this.days = days;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.LEAVE_AT</code>.
     * 「leaveAt」- To
     */
    @Override
    public LocalDateTime getLeaveAt() {
        return this.leaveAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.LEAVE_AT</code>.
     * 「leaveAt」- To
     */
    @Override
    public TVendorCheckOut setLeaveAt(LocalDateTime leaveAt) {
        this.leaveAt = leaveAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.REASON</code>. 「reason」-
     * The reason to be done
     */
    @Override
    public String getReason() {
        return this.reason;
    }

    /**
     * Setter for <code>DB_ETERNAL.T_VENDOR_CHECK_OUT.REASON</code>. 「reason」-
     * The reason to be done
     */
    @Override
    public TVendorCheckOut setReason(String reason) {
        this.reason = reason;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TVendorCheckOut other = (TVendorCheckOut) obj;
        if (this.key == null) {
            if (other.key != null)
                return false;
        }
        else if (!this.key.equals(other.key))
            return false;
        if (this.commentExtension == null) {
            if (other.commentExtension != null)
                return false;
        }
        else if (!this.commentExtension.equals(other.commentExtension))
            return false;
        if (this.classification == null) {
            if (other.classification != null)
                return false;
        }
        else if (!this.classification.equals(other.classification))
            return false;
        if (this.startAt == null) {
            if (other.startAt != null)
                return false;
        }
        else if (!this.startAt.equals(other.startAt))
            return false;
        if (this.endAt == null) {
            if (other.endAt != null)
                return false;
        }
        else if (!this.endAt.equals(other.endAt))
            return false;
        if (this.days == null) {
            if (other.days != null)
                return false;
        }
        else if (!this.days.equals(other.days))
            return false;
        if (this.leaveAt == null) {
            if (other.leaveAt != null)
                return false;
        }
        else if (!this.leaveAt.equals(other.leaveAt))
            return false;
        if (this.reason == null) {
            if (other.reason != null)
                return false;
        }
        else if (!this.reason.equals(other.reason))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.key == null) ? 0 : this.key.hashCode());
        result = prime * result + ((this.commentExtension == null) ? 0 : this.commentExtension.hashCode());
        result = prime * result + ((this.classification == null) ? 0 : this.classification.hashCode());
        result = prime * result + ((this.startAt == null) ? 0 : this.startAt.hashCode());
        result = prime * result + ((this.endAt == null) ? 0 : this.endAt.hashCode());
        result = prime * result + ((this.days == null) ? 0 : this.days.hashCode());
        result = prime * result + ((this.leaveAt == null) ? 0 : this.leaveAt.hashCode());
        result = prime * result + ((this.reason == null) ? 0 : this.reason.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TVendorCheckOut (");

        sb.append(key);
        sb.append(", ").append(commentExtension);
        sb.append(", ").append(classification);
        sb.append(", ").append(startAt);
        sb.append(", ").append(endAt);
        sb.append(", ").append(days);
        sb.append(", ").append(leaveAt);
        sb.append(", ").append(reason);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITVendorCheckOut from) {
        setKey(from.getKey());
        setCommentExtension(from.getCommentExtension());
        setClassification(from.getClassification());
        setStartAt(from.getStartAt());
        setEndAt(from.getEndAt());
        setDays(from.getDays());
        setLeaveAt(from.getLeaveAt());
        setReason(from.getReason());
    }

    @Override
    public <E extends ITVendorCheckOut> E into(E into) {
        into.from(this);
        return into;
    }
}
