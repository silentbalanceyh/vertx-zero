/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.erp.domain.tables.pojos;


import cn.vertxup.erp.domain.tables.interfaces.IRTeamEmployee;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RTeamEmployee implements VertxPojo, IRTeamEmployee {

    private static final long serialVersionUID = 1L;

    private String teamId;
    private String employeeId;
    private String comment;

    public RTeamEmployee() {}

    public RTeamEmployee(IRTeamEmployee value) {
        this.teamId = value.getTeamId();
        this.employeeId = value.getEmployeeId();
        this.comment = value.getComment();
    }

    public RTeamEmployee(
        String teamId,
        String employeeId,
        String comment
    ) {
        this.teamId = teamId;
        this.employeeId = employeeId;
        this.comment = comment;
    }

        public RTeamEmployee(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_HOTEL.R_TEAM_EMPLOYEE.TEAM_ID</code>. 「teamId」- 组的ID
     */
    @Override
    public String getTeamId() {
        return this.teamId;
    }

    /**
     * Setter for <code>DB_HOTEL.R_TEAM_EMPLOYEE.TEAM_ID</code>. 「teamId」- 组的ID
     */
    @Override
    public RTeamEmployee setTeamId(String teamId) {
        this.teamId = teamId;
        return this;
    }

    /**
     * Getter for <code>DB_HOTEL.R_TEAM_EMPLOYEE.EMPLOYEE_ID</code>.
     * 「employeeId」- 员工ID
     */
    @Override
    public String getEmployeeId() {
        return this.employeeId;
    }

    /**
     * Setter for <code>DB_HOTEL.R_TEAM_EMPLOYEE.EMPLOYEE_ID</code>.
     * 「employeeId」- 员工ID
     */
    @Override
    public RTeamEmployee setEmployeeId(String employeeId) {
        this.employeeId = employeeId;
        return this;
    }

    /**
     * Getter for <code>DB_HOTEL.R_TEAM_EMPLOYEE.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public String getComment() {
        return this.comment;
    }

    /**
     * Setter for <code>DB_HOTEL.R_TEAM_EMPLOYEE.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public RTeamEmployee setComment(String comment) {
        this.comment = comment;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RTeamEmployee other = (RTeamEmployee) obj;
        if (this.teamId == null) {
            if (other.teamId != null)
                return false;
        }
        else if (!this.teamId.equals(other.teamId))
            return false;
        if (this.employeeId == null) {
            if (other.employeeId != null)
                return false;
        }
        else if (!this.employeeId.equals(other.employeeId))
            return false;
        if (this.comment == null) {
            if (other.comment != null)
                return false;
        }
        else if (!this.comment.equals(other.comment))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.teamId == null) ? 0 : this.teamId.hashCode());
        result = prime * result + ((this.employeeId == null) ? 0 : this.employeeId.hashCode());
        result = prime * result + ((this.comment == null) ? 0 : this.comment.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RTeamEmployee (");

        sb.append(teamId);
        sb.append(", ").append(employeeId);
        sb.append(", ").append(comment);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRTeamEmployee from) {
        setTeamId(from.getTeamId());
        setEmployeeId(from.getEmployeeId());
        setComment(from.getComment());
    }

    @Override
    public <E extends IRTeamEmployee> E into(E into) {
        into.from(this);
        return into;
    }
}
