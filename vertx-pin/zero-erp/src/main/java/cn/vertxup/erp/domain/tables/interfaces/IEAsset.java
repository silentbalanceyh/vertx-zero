/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.erp.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IEAsset extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.KEY</code>. 「key」- 资产主键
     */
    public IEAsset setKey(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.KEY</code>. 「key」- 资产主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.NAME</code>. 「name」- 资产名称
     */
    public IEAsset setName(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.NAME</code>. 「name」- 资产名称
     */
    public String getName();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.CODE</code>. 「code」- 资产编号
     */
    public IEAsset setCode(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.CODE</code>. 「code」- 资产编号
     */
    public String getCode();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.TYPE</code>. 「type」- 资产类型
     */
    public IEAsset setType(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.TYPE</code>. 「type」- 资产类型
     */
    public String getType();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.STATUS</code>. 「status」- 资产状态
     */
    public IEAsset setStatus(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.STATUS</code>. 「status」- 资产状态
     */
    public String getStatus();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.MODEL_NUMBER</code>. 「modelNumber」-
     * 规格型号
     */
    public IEAsset setModelNumber(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.MODEL_NUMBER</code>. 「modelNumber」-
     * 规格型号
     */
    public String getModelNumber();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.UNIT</code>. 「unit」- 计量单位
     */
    public IEAsset setUnit(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.UNIT</code>. 「unit」- 计量单位
     */
    public String getUnit();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.NUM</code>. 「num」- 资产数量
     */
    public IEAsset setNum(Long value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.NUM</code>. 「num」- 资产数量
     */
    public Long getNum();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.NUM_DEPRECATING</code>.
     * 「numDeprecating」- 预计折旧数量
     */
    public IEAsset setNumDeprecating(Long value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.NUM_DEPRECATING</code>.
     * 「numDeprecating」- 预计折旧数量
     */
    public Long getNumDeprecating();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.NUM_DEPRECATED</code>. 「numDeprecated」-
     * 已折旧数量
     */
    public IEAsset setNumDeprecated(Long value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.NUM_DEPRECATED</code>. 「numDeprecated」-
     * 已折旧数量
     */
    public Long getNumDeprecated();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.NUM_USING</code>. 「numUsing」- 预计使用数量
     */
    public IEAsset setNumUsing(Long value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.NUM_USING</code>. 「numUsing」- 预计使用数量
     */
    public Long getNumUsing();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.NUM_USED</code>. 「numUsed」- 已使用数量
     */
    public IEAsset setNumUsed(Long value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.NUM_USED</code>. 「numUsed」- 已使用数量
     */
    public Long getNumUsed();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.WAY_CHANGE</code>. 「wayChange」- 变动方式
     */
    public IEAsset setWayChange(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.WAY_CHANGE</code>. 「wayChange」- 变动方式
     */
    public String getWayChange();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.WAY_DEPRECATE</code>. 「wayDeprecate」-
     * 折旧方式
     */
    public IEAsset setWayDeprecate(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.WAY_DEPRECATE</code>. 「wayDeprecate」-
     * 折旧方式
     */
    public String getWayDeprecate();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.WAY_ACCORDING</code>. 「wayAccording」-
     * 折旧依据
     */
    public IEAsset setWayAccording(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.WAY_ACCORDING</code>. 「wayAccording」-
     * 折旧依据
     */
    public String getWayAccording();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.USED_AT</code>. 「usedAt」- 开始使用时间
     */
    public IEAsset setUsedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.USED_AT</code>. 「usedAt」- 开始使用时间
     */
    public LocalDateTime getUsedAt();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.USED_BY</code>. 「usedBy」- 使用者
     */
    public IEAsset setUsedBy(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.USED_BY</code>. 「usedBy」- 使用者
     */
    public String getUsedBy();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.USED_STATUS</code>. 「usedStatus」- 使用状态
     */
    public IEAsset setUsedStatus(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.USED_STATUS</code>. 「usedStatus」- 使用状态
     */
    public String getUsedStatus();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.V_ORIGINAL</code>. 「vOriginal」- 原价值
     */
    public IEAsset setVOriginal(BigDecimal value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.V_ORIGINAL</code>. 「vOriginal」- 原价值
     */
    public BigDecimal getVOriginal();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.V_TAX</code>. 「vTax」- 税额
     */
    public IEAsset setVTax(BigDecimal value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.V_TAX</code>. 「vTax」- 税额
     */
    public BigDecimal getVTax();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.V_DE_READY</code>. 「vDeReady」- 减值准备
     */
    public IEAsset setVDeReady(BigDecimal value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.V_DE_READY</code>. 「vDeReady」- 减值准备
     */
    public BigDecimal getVDeReady();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.V_NET_JUNK</code>. 「vNetJunk」- 净残值
     */
    public IEAsset setVNetJunk(BigDecimal value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.V_NET_JUNK</code>. 「vNetJunk」- 净残值
     */
    public BigDecimal getVNetJunk();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.V_NET</code>. 「vNet」- 净值
     */
    public IEAsset setVNet(BigDecimal value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.V_NET</code>. 「vNet」- 净值
     */
    public BigDecimal getVNet();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.V_NET_AMOUNT</code>. 「vNetAmount」- 净额
     */
    public IEAsset setVNetAmount(BigDecimal value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.V_NET_AMOUNT</code>. 「vNetAmount」- 净额
     */
    public BigDecimal getVNetAmount();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.V_DEPRECATED_M</code>. 「vDeprecatedM」-
     * 月折旧
     */
    public IEAsset setVDeprecatedM(BigDecimal value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.V_DEPRECATED_M</code>. 「vDeprecatedM」-
     * 月折旧
     */
    public BigDecimal getVDeprecatedM();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.V_DEPRECATED_A</code>. 「vDeprecatedA」-
     * 累积折旧
     */
    public IEAsset setVDeprecatedA(BigDecimal value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.V_DEPRECATED_A</code>. 「vDeprecatedA」-
     * 累积折旧
     */
    public BigDecimal getVDeprecatedA();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.K_FIXED</code>. 「kFixed」- 固定资产科目
     */
    public IEAsset setKFixed(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.K_FIXED</code>. 「kFixed」- 固定资产科目
     */
    public String getKFixed();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.K_DEPRECATED</code>. 「kDeprecated」-
     * 累积折旧科目
     */
    public IEAsset setKDeprecated(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.K_DEPRECATED</code>. 「kDeprecated」-
     * 累积折旧科目
     */
    public String getKDeprecated();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.K_ASSIGNMENT</code>. 「kAssignment」-
     * 折旧费用分配科目
     */
    public IEAsset setKAssignment(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.K_ASSIGNMENT</code>. 「kAssignment」-
     * 折旧费用分配科目
     */
    public String getKAssignment();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.K_TAX</code>. 「kTax」- 税金科目
     */
    public IEAsset setKTax(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.K_TAX</code>. 「kTax」- 税金科目
     */
    public String getKTax();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.K_DEVALUE</code>. 「kDevalue」- 减值准备科目
     */
    public IEAsset setKDevalue(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.K_DEVALUE</code>. 「kDevalue」- 减值准备科目
     */
    public String getKDevalue();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.K_CHANGE</code>. 「kChange」- 资产变动对方科目
     */
    public IEAsset setKChange(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.K_CHANGE</code>. 「kChange」- 资产变动对方科目
     */
    public String getKChange();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.CUSTOMER_ID</code>. 「customerId」- 供应商ID
     */
    public IEAsset setCustomerId(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.CUSTOMER_ID</code>. 「customerId」- 供应商ID
     */
    public String getCustomerId();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.EXPIRED_AT</code>. 「expiredAt」- 到期时间
     */
    public IEAsset setExpiredAt(LocalDateTime value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.EXPIRED_AT</code>. 「expiredAt」- 到期时间
     */
    public LocalDateTime getExpiredAt();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.EXPIRED_COMMENT</code>.
     * 「expiredComment」- 到期说明
     */
    public IEAsset setExpiredComment(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.EXPIRED_COMMENT</code>.
     * 「expiredComment」- 到期说明
     */
    public String getExpiredComment();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.USER_ID</code>. 「userId」- 资产管理者
     */
    public IEAsset setUserId(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.USER_ID</code>. 「userId」- 资产管理者
     */
    public String getUserId();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.STORE_ID</code>. 「storeId」- 所属仓库ID
     */
    public IEAsset setStoreId(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.STORE_ID</code>. 「storeId」- 所属仓库ID
     */
    public String getStoreId();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.DEPT_ID</code>. 「deptId」- 所属部门
     */
    public IEAsset setDeptId(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.DEPT_ID</code>. 「deptId」- 所属部门
     */
    public String getDeptId();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.COMPANY_ID</code>. 「companyId」- 所属公司
     */
    public IEAsset setCompanyId(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.COMPANY_ID</code>. 「companyId」- 所属公司
     */
    public String getCompanyId();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.PARENT_ID</code>. 「parentId」- 上级资产
     */
    public IEAsset setParentId(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.PARENT_ID</code>. 「parentId」- 上级资产
     */
    public String getParentId();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.COMMENT</code>. 「comment」- 资产备注
     */
    public IEAsset setComment(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.COMMENT</code>. 「comment」- 资产备注
     */
    public String getComment();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.SIGMA</code>. 「sigma」- 统一标识
     */
    public IEAsset setSigma(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IEAsset setLanguage(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.ACTIVE</code>. 「active」- 是否启用
     */
    public IEAsset setActive(Boolean value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.METADATA</code>. 「metadata」- 附加配置数据
     */
    public IEAsset setMetadata(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.METADATA</code>. 「metadata」- 附加配置数据
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.ENTER_AT</code>. 「enterAt」- 入库时间
     */
    public IEAsset setEnterAt(LocalDateTime value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.ENTER_AT</code>. 「enterAt」- 入库时间
     */
    public LocalDateTime getEnterAt();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.ENTER_BY</code>. 「enterBy」- 入库人
     */
    public IEAsset setEnterBy(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.ENTER_BY</code>. 「enterBy」- 入库人
     */
    public String getEnterBy();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.ACCOUNT_AT</code>. 「accountAt」- 入账时间
     */
    public IEAsset setAccountAt(LocalDateTime value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.ACCOUNT_AT</code>. 「accountAt」- 入账时间
     */
    public LocalDateTime getAccountAt();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.ACCOUNT_BY</code>. 「accountBy」- 入账人
     */
    public IEAsset setAccountBy(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.ACCOUNT_BY</code>. 「accountBy」- 入账人
     */
    public String getAccountBy();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.SCRAP_AT</code>. 「scrapAt」- 报废时间
     */
    public IEAsset setScrapAt(LocalDateTime value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.SCRAP_AT</code>. 「scrapAt」- 报废时间
     */
    public LocalDateTime getScrapAt();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.SCRAP_BY</code>. 「scrapBy」- 报废人
     */
    public IEAsset setScrapBy(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.SCRAP_BY</code>. 「scrapBy」- 报废人
     */
    public String getScrapBy();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IEAsset setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IEAsset setCreatedBy(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IEAsset setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_HOTEL.E_ASSET.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IEAsset setUpdatedBy(String value);

    /**
     * Getter for <code>DB_HOTEL.E_ASSET.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IEAsset
     */
    public void from(IEAsset from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IEAsset
     */
    public <E extends IEAsset> E into(E into);

        @Override
        public default IEAsset fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setType,json::getString,"TYPE","java.lang.String");
                setOrThrow(this::setStatus,json::getString,"STATUS","java.lang.String");
                setOrThrow(this::setModelNumber,json::getString,"MODEL_NUMBER","java.lang.String");
                setOrThrow(this::setUnit,json::getString,"UNIT","java.lang.String");
                setOrThrow(this::setNum,json::getLong,"NUM","java.lang.Long");
                setOrThrow(this::setNumDeprecating,json::getLong,"NUM_DEPRECATING","java.lang.Long");
                setOrThrow(this::setNumDeprecated,json::getLong,"NUM_DEPRECATED","java.lang.Long");
                setOrThrow(this::setNumUsing,json::getLong,"NUM_USING","java.lang.Long");
                setOrThrow(this::setNumUsed,json::getLong,"NUM_USED","java.lang.Long");
                setOrThrow(this::setWayChange,json::getString,"WAY_CHANGE","java.lang.String");
                setOrThrow(this::setWayDeprecate,json::getString,"WAY_DEPRECATE","java.lang.String");
                setOrThrow(this::setWayAccording,json::getString,"WAY_ACCORDING","java.lang.String");
                setOrThrow(this::setUsedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"USED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUsedBy,json::getString,"USED_BY","java.lang.String");
                setOrThrow(this::setUsedStatus,json::getString,"USED_STATUS","java.lang.String");
                setOrThrow(this::setVOriginal,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"V_ORIGINAL","java.math.BigDecimal");
                setOrThrow(this::setVTax,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"V_TAX","java.math.BigDecimal");
                setOrThrow(this::setVDeReady,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"V_DE_READY","java.math.BigDecimal");
                setOrThrow(this::setVNetJunk,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"V_NET_JUNK","java.math.BigDecimal");
                setOrThrow(this::setVNet,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"V_NET","java.math.BigDecimal");
                setOrThrow(this::setVNetAmount,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"V_NET_AMOUNT","java.math.BigDecimal");
                setOrThrow(this::setVDeprecatedM,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"V_DEPRECATED_M","java.math.BigDecimal");
                setOrThrow(this::setVDeprecatedA,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"V_DEPRECATED_A","java.math.BigDecimal");
                setOrThrow(this::setKFixed,json::getString,"K_FIXED","java.lang.String");
                setOrThrow(this::setKDeprecated,json::getString,"K_DEPRECATED","java.lang.String");
                setOrThrow(this::setKAssignment,json::getString,"K_ASSIGNMENT","java.lang.String");
                setOrThrow(this::setKTax,json::getString,"K_TAX","java.lang.String");
                setOrThrow(this::setKDevalue,json::getString,"K_DEVALUE","java.lang.String");
                setOrThrow(this::setKChange,json::getString,"K_CHANGE","java.lang.String");
                setOrThrow(this::setCustomerId,json::getString,"CUSTOMER_ID","java.lang.String");
                setOrThrow(this::setExpiredAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"EXPIRED_AT","java.time.LocalDateTime");
                setOrThrow(this::setExpiredComment,json::getString,"EXPIRED_COMMENT","java.lang.String");
                setOrThrow(this::setUserId,json::getString,"USER_ID","java.lang.String");
                setOrThrow(this::setStoreId,json::getString,"STORE_ID","java.lang.String");
                setOrThrow(this::setDeptId,json::getString,"DEPT_ID","java.lang.String");
                setOrThrow(this::setCompanyId,json::getString,"COMPANY_ID","java.lang.String");
                setOrThrow(this::setParentId,json::getString,"PARENT_ID","java.lang.String");
                setOrThrow(this::setComment,json::getString,"COMMENT","java.lang.String");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setEnterAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"ENTER_AT","java.time.LocalDateTime");
                setOrThrow(this::setEnterBy,json::getString,"ENTER_BY","java.lang.String");
                setOrThrow(this::setAccountAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"ACCOUNT_AT","java.time.LocalDateTime");
                setOrThrow(this::setAccountBy,json::getString,"ACCOUNT_BY","java.lang.String");
                setOrThrow(this::setScrapAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"SCRAP_AT","java.time.LocalDateTime");
                setOrThrow(this::setScrapBy,json::getString,"SCRAP_BY","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("TYPE",getType());
                json.put("STATUS",getStatus());
                json.put("MODEL_NUMBER",getModelNumber());
                json.put("UNIT",getUnit());
                json.put("NUM",getNum());
                json.put("NUM_DEPRECATING",getNumDeprecating());
                json.put("NUM_DEPRECATED",getNumDeprecated());
                json.put("NUM_USING",getNumUsing());
                json.put("NUM_USED",getNumUsed());
                json.put("WAY_CHANGE",getWayChange());
                json.put("WAY_DEPRECATE",getWayDeprecate());
                json.put("WAY_ACCORDING",getWayAccording());
                json.put("USED_AT",getUsedAt()==null?null:getUsedAt().toString());
                json.put("USED_BY",getUsedBy());
                json.put("USED_STATUS",getUsedStatus());
                json.put("V_ORIGINAL",getVOriginal()==null?null:getVOriginal().toString());
                json.put("V_TAX",getVTax()==null?null:getVTax().toString());
                json.put("V_DE_READY",getVDeReady()==null?null:getVDeReady().toString());
                json.put("V_NET_JUNK",getVNetJunk()==null?null:getVNetJunk().toString());
                json.put("V_NET",getVNet()==null?null:getVNet().toString());
                json.put("V_NET_AMOUNT",getVNetAmount()==null?null:getVNetAmount().toString());
                json.put("V_DEPRECATED_M",getVDeprecatedM()==null?null:getVDeprecatedM().toString());
                json.put("V_DEPRECATED_A",getVDeprecatedA()==null?null:getVDeprecatedA().toString());
                json.put("K_FIXED",getKFixed());
                json.put("K_DEPRECATED",getKDeprecated());
                json.put("K_ASSIGNMENT",getKAssignment());
                json.put("K_TAX",getKTax());
                json.put("K_DEVALUE",getKDevalue());
                json.put("K_CHANGE",getKChange());
                json.put("CUSTOMER_ID",getCustomerId());
                json.put("EXPIRED_AT",getExpiredAt()==null?null:getExpiredAt().toString());
                json.put("EXPIRED_COMMENT",getExpiredComment());
                json.put("USER_ID",getUserId());
                json.put("STORE_ID",getStoreId());
                json.put("DEPT_ID",getDeptId());
                json.put("COMPANY_ID",getCompanyId());
                json.put("PARENT_ID",getParentId());
                json.put("COMMENT",getComment());
                json.put("SIGMA",getSigma());
                json.put("LANGUAGE",getLanguage());
                json.put("ACTIVE",getActive());
                json.put("METADATA",getMetadata());
                json.put("ENTER_AT",getEnterAt()==null?null:getEnterAt().toString());
                json.put("ENTER_BY",getEnterBy());
                json.put("ACCOUNT_AT",getAccountAt()==null?null:getAccountAt().toString());
                json.put("ACCOUNT_BY",getAccountBy());
                json.put("SCRAP_AT",getScrapAt()==null?null:getScrapAt().toString());
                json.put("SCRAP_BY",getScrapBy());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
