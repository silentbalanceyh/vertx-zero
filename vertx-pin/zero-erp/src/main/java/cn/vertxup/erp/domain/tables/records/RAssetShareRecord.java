/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.erp.domain.tables.records;


import cn.vertxup.erp.domain.tables.RAssetShare;
import cn.vertxup.erp.domain.tables.interfaces.IRAssetShare;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RAssetShareRecord extends UpdatableRecordImpl<RAssetShareRecord> implements VertxPojo, Record4<String, String, String, String>, IRAssetShare {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.R_ASSET_SHARE.ASSET_ID</code>. 「assetId」-
     * 资产ID
     */
    @Override
    public RAssetShareRecord setAssetId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.R_ASSET_SHARE.ASSET_ID</code>. 「assetId」-
     * 资产ID
     */
    @Override
    public String getAssetId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.R_ASSET_SHARE.ENTITY_TYPE</code>.
     * 「entityType」- 关联类型
     */
    @Override
    public RAssetShareRecord setEntityType(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.R_ASSET_SHARE.ENTITY_TYPE</code>.
     * 「entityType」- 关联类型
     */
    @Override
    public String getEntityType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.R_ASSET_SHARE.ENTITY_ID</code>. 「entityId」-
     * 关联实体ID
     */
    @Override
    public RAssetShareRecord setEntityId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.R_ASSET_SHARE.ENTITY_ID</code>. 「entityId」-
     * 关联实体ID
     */
    @Override
    public String getEntityId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.R_ASSET_SHARE.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public RAssetShareRecord setComment(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.R_ASSET_SHARE.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public String getComment() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RAssetShare.R_ASSET_SHARE.ASSET_ID;
    }

    @Override
    public Field<String> field2() {
        return RAssetShare.R_ASSET_SHARE.ENTITY_TYPE;
    }

    @Override
    public Field<String> field3() {
        return RAssetShare.R_ASSET_SHARE.ENTITY_ID;
    }

    @Override
    public Field<String> field4() {
        return RAssetShare.R_ASSET_SHARE.COMMENT;
    }

    @Override
    public String component1() {
        return getAssetId();
    }

    @Override
    public String component2() {
        return getEntityType();
    }

    @Override
    public String component3() {
        return getEntityId();
    }

    @Override
    public String component4() {
        return getComment();
    }

    @Override
    public String value1() {
        return getAssetId();
    }

    @Override
    public String value2() {
        return getEntityType();
    }

    @Override
    public String value3() {
        return getEntityId();
    }

    @Override
    public String value4() {
        return getComment();
    }

    @Override
    public RAssetShareRecord value1(String value) {
        setAssetId(value);
        return this;
    }

    @Override
    public RAssetShareRecord value2(String value) {
        setEntityType(value);
        return this;
    }

    @Override
    public RAssetShareRecord value3(String value) {
        setEntityId(value);
        return this;
    }

    @Override
    public RAssetShareRecord value4(String value) {
        setComment(value);
        return this;
    }

    @Override
    public RAssetShareRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRAssetShare from) {
        setAssetId(from.getAssetId());
        setEntityType(from.getEntityType());
        setEntityId(from.getEntityId());
        setComment(from.getComment());
    }

    @Override
    public <E extends IRAssetShare> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RAssetShareRecord
     */
    public RAssetShareRecord() {
        super(RAssetShare.R_ASSET_SHARE);
    }

    /**
     * Create a detached, initialised RAssetShareRecord
     */
    public RAssetShareRecord(String assetId, String entityType, String entityId, String comment) {
        super(RAssetShare.R_ASSET_SHARE);

        setAssetId(assetId);
        setEntityType(entityType);
        setEntityId(entityId);
        setComment(comment);
    }

    /**
     * Create a detached, initialised RAssetShareRecord
     */
    public RAssetShareRecord(cn.vertxup.erp.domain.tables.pojos.RAssetShare value) {
        super(RAssetShare.R_ASSET_SHARE);

        if (value != null) {
            setAssetId(value.getAssetId());
            setEntityType(value.getEntityType());
            setEntityId(value.getEntityId());
            setComment(value.getComment());
        }
    }

        public RAssetShareRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
