/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.tpl.domain.tables.daos;


import cn.vertxup.tpl.domain.tables.MyTpl;
import cn.vertxup.tpl.domain.tables.records.MyTplRecord;

import io.github.jklingsporn.vertx.jooq.shared.internal.AbstractVertxDAO;

import java.time.LocalDateTime;
import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.vertx.core.Future;
import io.github.jklingsporn.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MyTplDao extends AbstractVertxDAO<MyTplRecord, cn.vertxup.tpl.domain.tables.pojos.MyTpl, String, Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>>, Future<cn.vertxup.tpl.domain.tables.pojos.MyTpl>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<MyTplRecord,cn.vertxup.tpl.domain.tables.pojos.MyTpl,String> {

        /**
     * @param configuration The Configuration used for rendering and query
     * execution.
     * @param vertx the vertx instance
     */
        public MyTplDao(Configuration configuration, io.vertx.core.Vertx vertx) {
                super(MyTpl.MY_TPL, cn.vertxup.tpl.domain.tables.pojos.MyTpl.class, new JDBCClassicQueryExecutor<MyTplRecord,cn.vertxup.tpl.domain.tables.pojos.MyTpl,String>(configuration,cn.vertxup.tpl.domain.tables.pojos.MyTpl.class,vertx));
        }

        @Override
        protected String getId(cn.vertxup.tpl.domain.tables.pojos.MyTpl object) {
                return object.getKey();
        }

        /**
     * Find records that have <code>TPL_ID IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByTplId(Collection<String> values) {
                return findManyByCondition(MyTpl.MY_TPL.TPL_ID.in(values));
        }

        /**
     * Find records that have <code>TPL_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByTplId(Collection<String> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.TPL_ID.in(values),limit);
        }

        /**
     * Find records that have <code>TPL_TYPE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByTplType(Collection<String> values) {
                return findManyByCondition(MyTpl.MY_TPL.TPL_TYPE.in(values));
        }

        /**
     * Find records that have <code>TPL_TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByTplType(Collection<String> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.TPL_TYPE.in(values),limit);
        }

        /**
     * Find records that have <code>OWNER IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByOwner(Collection<String> values) {
                return findManyByCondition(MyTpl.MY_TPL.OWNER.in(values));
        }

        /**
     * Find records that have <code>OWNER IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByOwner(Collection<String> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.OWNER.in(values),limit);
        }

        /**
     * Find records that have <code>OWNER_TYPE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByOwnerType(Collection<String> values) {
                return findManyByCondition(MyTpl.MY_TPL.OWNER_TYPE.in(values));
        }

        /**
     * Find records that have <code>OWNER_TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByOwnerType(Collection<String> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.OWNER_TYPE.in(values),limit);
        }

        /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByType(Collection<String> values) {
                return findManyByCondition(MyTpl.MY_TPL.TYPE.in(values));
        }

        /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByType(Collection<String> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.TYPE.in(values),limit);
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByActive(Collection<Boolean> values) {
                return findManyByCondition(MyTpl.MY_TPL.ACTIVE.in(values));
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByActive(Collection<Boolean> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.ACTIVE.in(values),limit);
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyBySigma(Collection<String> values) {
                return findManyByCondition(MyTpl.MY_TPL.SIGMA.in(values));
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyBySigma(Collection<String> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.SIGMA.in(values),limit);
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByMetadata(Collection<String> values) {
                return findManyByCondition(MyTpl.MY_TPL.METADATA.in(values));
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByMetadata(Collection<String> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.METADATA.in(values),limit);
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByLanguage(Collection<String> values) {
                return findManyByCondition(MyTpl.MY_TPL.LANGUAGE.in(values));
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByLanguage(Collection<String> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.LANGUAGE.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByCreatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(MyTpl.MY_TPL.CREATED_AT.in(values));
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByCreatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.CREATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByCreatedBy(Collection<String> values) {
                return findManyByCondition(MyTpl.MY_TPL.CREATED_BY.in(values));
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByCreatedBy(Collection<String> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.CREATED_BY.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByUpdatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(MyTpl.MY_TPL.UPDATED_AT.in(values));
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByUpdatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.UPDATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByUpdatedBy(Collection<String> values) {
                return findManyByCondition(MyTpl.MY_TPL.UPDATED_BY.in(values));
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.tpl.domain.tables.pojos.MyTpl>> findManyByUpdatedBy(Collection<String> values, int limit) {
                return findManyByCondition(MyTpl.MY_TPL.UPDATED_BY.in(values),limit);
        }

        @Override
        public JDBCClassicQueryExecutor<MyTplRecord,cn.vertxup.tpl.domain.tables.pojos.MyTpl,String> queryExecutor(){
                return (JDBCClassicQueryExecutor<MyTplRecord,cn.vertxup.tpl.domain.tables.pojos.MyTpl,String>) super.queryExecutor();
        }
}
