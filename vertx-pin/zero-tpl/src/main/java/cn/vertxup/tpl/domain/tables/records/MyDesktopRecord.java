/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.tpl.domain.tables.records;


import cn.vertxup.tpl.domain.tables.MyDesktop;
import cn.vertxup.tpl.domain.tables.interfaces.IMyDesktop;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MyDesktopRecord extends UpdatableRecordImpl<MyDesktopRecord> implements VertxPojo, Record14<String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IMyDesktop {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.KEY</code>. 「key」- 个人工作台
     */
    @Override
    public MyDesktopRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.KEY</code>. 「key」- 个人工作台
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.BAG_ID</code>. 「bagId」- 所属个人应用
     */
    @Override
    public MyDesktopRecord setBagId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.BAG_ID</code>. 「bagId」- 所属个人应用
     */
    @Override
    public String getBagId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.UI_CONFIG</code>. 「uiConfig」-
     * 看板专用配置
     */
    @Override
    public MyDesktopRecord setUiConfig(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.UI_CONFIG</code>. 「uiConfig」-
     * 看板专用配置
     */
    @Override
    public String getUiConfig() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.UI_GRID</code>. 「uiGrid」- 看板布局配置
     */
    @Override
    public MyDesktopRecord setUiGrid(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.UI_GRID</code>. 「uiGrid」- 看板布局配置
     */
    @Override
    public String getUiGrid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.OWNER</code>. 「owner」- 拥有者ID，我的 /
     * 角色级
     */
    @Override
    public MyDesktopRecord setOwner(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.OWNER</code>. 「owner」- 拥有者ID，我的 /
     * 角色级
     */
    @Override
    public String getOwner() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.OWNER_TYPE</code>. 「ownerType」-
     * ROLE 角色，USER 用户
     */
    @Override
    public MyDesktopRecord setOwnerType(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.OWNER_TYPE</code>. 「ownerType」-
     * ROLE 角色，USER 用户
     */
    @Override
    public String getOwnerType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public MyDesktopRecord setActive(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public MyDesktopRecord setSigma(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public MyDesktopRecord setMetadata(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public MyDesktopRecord setLanguage(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public MyDesktopRecord setCreatedAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public MyDesktopRecord setCreatedBy(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public MyDesktopRecord setUpdatedAt(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.MY_DESKTOP.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public MyDesktopRecord setUpdatedBy(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.MY_DESKTOP.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MyDesktop.MY_DESKTOP.KEY;
    }

    @Override
    public Field<String> field2() {
        return MyDesktop.MY_DESKTOP.BAG_ID;
    }

    @Override
    public Field<String> field3() {
        return MyDesktop.MY_DESKTOP.UI_CONFIG;
    }

    @Override
    public Field<String> field4() {
        return MyDesktop.MY_DESKTOP.UI_GRID;
    }

    @Override
    public Field<String> field5() {
        return MyDesktop.MY_DESKTOP.OWNER;
    }

    @Override
    public Field<String> field6() {
        return MyDesktop.MY_DESKTOP.OWNER_TYPE;
    }

    @Override
    public Field<Boolean> field7() {
        return MyDesktop.MY_DESKTOP.ACTIVE;
    }

    @Override
    public Field<String> field8() {
        return MyDesktop.MY_DESKTOP.SIGMA;
    }

    @Override
    public Field<String> field9() {
        return MyDesktop.MY_DESKTOP.METADATA;
    }

    @Override
    public Field<String> field10() {
        return MyDesktop.MY_DESKTOP.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return MyDesktop.MY_DESKTOP.CREATED_AT;
    }

    @Override
    public Field<String> field12() {
        return MyDesktop.MY_DESKTOP.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return MyDesktop.MY_DESKTOP.UPDATED_AT;
    }

    @Override
    public Field<String> field14() {
        return MyDesktop.MY_DESKTOP.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getBagId();
    }

    @Override
    public String component3() {
        return getUiConfig();
    }

    @Override
    public String component4() {
        return getUiGrid();
    }

    @Override
    public String component5() {
        return getOwner();
    }

    @Override
    public String component6() {
        return getOwnerType();
    }

    @Override
    public Boolean component7() {
        return getActive();
    }

    @Override
    public String component8() {
        return getSigma();
    }

    @Override
    public String component9() {
        return getMetadata();
    }

    @Override
    public String component10() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component11() {
        return getCreatedAt();
    }

    @Override
    public String component12() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component13() {
        return getUpdatedAt();
    }

    @Override
    public String component14() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getBagId();
    }

    @Override
    public String value3() {
        return getUiConfig();
    }

    @Override
    public String value4() {
        return getUiGrid();
    }

    @Override
    public String value5() {
        return getOwner();
    }

    @Override
    public String value6() {
        return getOwnerType();
    }

    @Override
    public Boolean value7() {
        return getActive();
    }

    @Override
    public String value8() {
        return getSigma();
    }

    @Override
    public String value9() {
        return getMetadata();
    }

    @Override
    public String value10() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value11() {
        return getCreatedAt();
    }

    @Override
    public String value12() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value13() {
        return getUpdatedAt();
    }

    @Override
    public String value14() {
        return getUpdatedBy();
    }

    @Override
    public MyDesktopRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public MyDesktopRecord value2(String value) {
        setBagId(value);
        return this;
    }

    @Override
    public MyDesktopRecord value3(String value) {
        setUiConfig(value);
        return this;
    }

    @Override
    public MyDesktopRecord value4(String value) {
        setUiGrid(value);
        return this;
    }

    @Override
    public MyDesktopRecord value5(String value) {
        setOwner(value);
        return this;
    }

    @Override
    public MyDesktopRecord value6(String value) {
        setOwnerType(value);
        return this;
    }

    @Override
    public MyDesktopRecord value7(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public MyDesktopRecord value8(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public MyDesktopRecord value9(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public MyDesktopRecord value10(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public MyDesktopRecord value11(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public MyDesktopRecord value12(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public MyDesktopRecord value13(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public MyDesktopRecord value14(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public MyDesktopRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Boolean value7, String value8, String value9, String value10, LocalDateTime value11, String value12, LocalDateTime value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IMyDesktop from) {
        setKey(from.getKey());
        setBagId(from.getBagId());
        setUiConfig(from.getUiConfig());
        setUiGrid(from.getUiGrid());
        setOwner(from.getOwner());
        setOwnerType(from.getOwnerType());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IMyDesktop> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MyDesktopRecord
     */
    public MyDesktopRecord() {
        super(MyDesktop.MY_DESKTOP);
    }

    /**
     * Create a detached, initialised MyDesktopRecord
     */
    public MyDesktopRecord(String key, String bagId, String uiConfig, String uiGrid, String owner, String ownerType, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(MyDesktop.MY_DESKTOP);

        setKey(key);
        setBagId(bagId);
        setUiConfig(uiConfig);
        setUiGrid(uiGrid);
        setOwner(owner);
        setOwnerType(ownerType);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised MyDesktopRecord
     */
    public MyDesktopRecord(cn.vertxup.tpl.domain.tables.pojos.MyDesktop value) {
        super(MyDesktop.MY_DESKTOP);

        if (value != null) {
            setKey(value.getKey());
            setBagId(value.getBagId());
            setUiConfig(value.getUiConfig());
            setUiGrid(value.getUiGrid());
            setOwner(value.getOwner());
            setOwnerType(value.getOwnerType());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public MyDesktopRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
