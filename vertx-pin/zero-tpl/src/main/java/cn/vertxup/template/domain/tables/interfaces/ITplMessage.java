/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.template.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ITplMessage extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.KEY</code>. 「key」- 模板唯一主键
     */
    public ITplMessage setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.KEY</code>. 「key」- 模板唯一主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.NAME</code>. 「name」- 模板名称
     */
    public ITplMessage setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.NAME</code>. 「name」- 模板名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.CODE</code>. 「code」- 模板编码
     */
    public ITplMessage setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.CODE</code>. 「code」- 模板编码
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.TYPE</code>. 「type」- 模板类型
     */
    public ITplMessage setType(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.TYPE</code>. 「type」- 模板类型
     */
    public String getType();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.EXPR_SUBJECT</code>.
     * 「exprSubject」- 模板标题，支持表达式
     */
    public ITplMessage setExprSubject(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.EXPR_SUBJECT</code>.
     * 「exprSubject」- 模板标题，支持表达式
     */
    public String getExprSubject();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.EXPR_CONTENT</code>.
     * 「exprContent」- 模板内容，支持表达式
     */
    public ITplMessage setExprContent(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.EXPR_CONTENT</code>.
     * 「exprContent」- 模板内容，支持表达式
     */
    public String getExprContent();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.EXPR_COMPONENT</code>.
     * 「exprComponent」- 模板扩展处理程序，Java类名
     */
    public ITplMessage setExprComponent(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.EXPR_COMPONENT</code>.
     * 「exprComponent」- 模板扩展处理程序，Java类名
     */
    public String getExprComponent();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.APP_ID</code>. 「appId」- 所属应用ID
     */
    public ITplMessage setAppId(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.APP_ID</code>. 「appId」- 所属应用ID
     */
    public String getAppId();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.ACTIVE</code>. 「active」- 是否启用
     */
    public ITplMessage setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.SIGMA</code>. 「sigma」- 统一标识
     */
    public ITplMessage setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.METADATA</code>. 「metadata」- 附加配置
     */
    public ITplMessage setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    public ITplMessage setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    public ITplMessage setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    public ITplMessage setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    public ITplMessage setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.TPL_MESSAGE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    public ITplMessage setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.TPL_MESSAGE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface ITplMessage
     */
    public void from(ITplMessage from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface ITplMessage
     */
    public <E extends ITplMessage> E into(E into);

        @Override
        public default ITplMessage fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setType,json::getString,"TYPE","java.lang.String");
                setOrThrow(this::setExprSubject,json::getString,"EXPR_SUBJECT","java.lang.String");
                setOrThrow(this::setExprContent,json::getString,"EXPR_CONTENT","java.lang.String");
                setOrThrow(this::setExprComponent,json::getString,"EXPR_COMPONENT","java.lang.String");
                setOrThrow(this::setAppId,json::getString,"APP_ID","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("TYPE",getType());
                json.put("EXPR_SUBJECT",getExprSubject());
                json.put("EXPR_CONTENT",getExprContent());
                json.put("EXPR_COMPONENT",getExprComponent());
                json.put("APP_ID",getAppId());
                json.put("ACTIVE",getActive());
                json.put("SIGMA",getSigma());
                json.put("METADATA",getMetadata());
                json.put("LANGUAGE",getLanguage());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
