/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.graphic.domain.tables.daos;


import cn.vertxup.graphic.domain.tables.GCluster;
import cn.vertxup.graphic.domain.tables.records.GClusterRecord;
import io.github.jklingsporn.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.github.jklingsporn.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GClusterDao extends AbstractVertxDAO<GClusterRecord, cn.vertxup.graphic.domain.tables.pojos.GCluster, String, Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>>, Future<cn.vertxup.graphic.domain.tables.pojos.GCluster>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<GClusterRecord,cn.vertxup.graphic.domain.tables.pojos.GCluster,String> {

        /**
     * @param configuration The Configuration used for rendering and query
     * execution.
     * @param vertx the vertx instance
     */
        public GClusterDao(Configuration configuration, io.vertx.core.Vertx vertx) {
                super(GCluster.G_CLUSTER, cn.vertxup.graphic.domain.tables.pojos.GCluster.class, new JDBCClassicQueryExecutor<GClusterRecord,cn.vertxup.graphic.domain.tables.pojos.GCluster,String>(configuration,cn.vertxup.graphic.domain.tables.pojos.GCluster.class,vertx));
        }

        @Override
        protected String getId(cn.vertxup.graphic.domain.tables.pojos.GCluster object) {
                return object.getKey();
        }

        /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByName(Collection<String> values) {
                return findManyByCondition(GCluster.G_CLUSTER.NAME.in(values));
        }

        /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByName(Collection<String> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.NAME.in(values),limit);
        }

        /**
     * Find records that have <code>X IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByX(Collection<Integer> values) {
                return findManyByCondition(GCluster.G_CLUSTER.X.in(values));
        }

        /**
     * Find records that have <code>X IN (values)</code> asynchronously limited
     * by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByX(Collection<Integer> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.X.in(values),limit);
        }

        /**
     * Find records that have <code>Y IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByY(Collection<Integer> values) {
                return findManyByCondition(GCluster.G_CLUSTER.Y.in(values));
        }

        /**
     * Find records that have <code>Y IN (values)</code> asynchronously limited
     * by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByY(Collection<Integer> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.Y.in(values),limit);
        }

        /**
     * Find records that have <code>GRAPHIC_ID IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByGraphicId(Collection<String> values) {
                return findManyByCondition(GCluster.G_CLUSTER.GRAPHIC_ID.in(values));
        }

        /**
     * Find records that have <code>GRAPHIC_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByGraphicId(Collection<String> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.GRAPHIC_ID.in(values),limit);
        }

        /**
     * Find records that have <code>UI IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByUi(Collection<String> values) {
                return findManyByCondition(GCluster.G_CLUSTER.UI.in(values));
        }

        /**
     * Find records that have <code>UI IN (values)</code> asynchronously limited
     * by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByUi(Collection<String> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.UI.in(values),limit);
        }

        /**
     * Find records that have <code>RECORD_KEY IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByRecordKey(Collection<String> values) {
                return findManyByCondition(GCluster.G_CLUSTER.RECORD_KEY.in(values));
        }

        /**
     * Find records that have <code>RECORD_KEY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByRecordKey(Collection<String> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.RECORD_KEY.in(values),limit);
        }

        /**
     * Find records that have <code>RECORD_DATA IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByRecordData(Collection<String> values) {
                return findManyByCondition(GCluster.G_CLUSTER.RECORD_DATA.in(values));
        }

        /**
     * Find records that have <code>RECORD_DATA IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByRecordData(Collection<String> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.RECORD_DATA.in(values),limit);
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyBySigma(Collection<String> values) {
                return findManyByCondition(GCluster.G_CLUSTER.SIGMA.in(values));
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyBySigma(Collection<String> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.SIGMA.in(values),limit);
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByLanguage(Collection<String> values) {
                return findManyByCondition(GCluster.G_CLUSTER.LANGUAGE.in(values));
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByLanguage(Collection<String> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.LANGUAGE.in(values),limit);
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByActive(Collection<Boolean> values) {
                return findManyByCondition(GCluster.G_CLUSTER.ACTIVE.in(values));
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByActive(Collection<Boolean> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.ACTIVE.in(values),limit);
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByMetadata(Collection<String> values) {
                return findManyByCondition(GCluster.G_CLUSTER.METADATA.in(values));
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByMetadata(Collection<String> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.METADATA.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByCreatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(GCluster.G_CLUSTER.CREATED_AT.in(values));
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByCreatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.CREATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByCreatedBy(Collection<String> values) {
                return findManyByCondition(GCluster.G_CLUSTER.CREATED_BY.in(values));
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByCreatedBy(Collection<String> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.CREATED_BY.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByUpdatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(GCluster.G_CLUSTER.UPDATED_AT.in(values));
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByUpdatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.UPDATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByUpdatedBy(Collection<String> values) {
                return findManyByCondition(GCluster.G_CLUSTER.UPDATED_BY.in(values));
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> findManyByUpdatedBy(Collection<String> values, int limit) {
                return findManyByCondition(GCluster.G_CLUSTER.UPDATED_BY.in(values),limit);
        }

        @Override
        public JDBCClassicQueryExecutor<GClusterRecord,cn.vertxup.graphic.domain.tables.pojos.GCluster,String> queryExecutor(){
                return (JDBCClassicQueryExecutor<GClusterRecord,cn.vertxup.graphic.domain.tables.pojos.GCluster,String>) super.queryExecutor();
        }
}
