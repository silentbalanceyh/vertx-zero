/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.psi.domain.tables.daos;


import cn.vertxup.psi.domain.tables.POutItem;
import cn.vertxup.psi.domain.tables.records.POutItemRecord;

import io.github.jklingsporn.vertx.jooq.shared.internal.AbstractVertxDAO;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.vertx.core.Future;
import io.github.jklingsporn.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class POutItemDao extends AbstractVertxDAO<POutItemRecord, cn.vertxup.psi.domain.tables.pojos.POutItem, String, Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>>, Future<cn.vertxup.psi.domain.tables.pojos.POutItem>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<POutItemRecord,cn.vertxup.psi.domain.tables.pojos.POutItem,String> {

        /**
     * @param configuration The Configuration used for rendering and query
     * execution.
     * @param vertx the vertx instance
     */
        public POutItemDao(Configuration configuration, io.vertx.core.Vertx vertx) {
                super(POutItem.P_OUT_ITEM, cn.vertxup.psi.domain.tables.pojos.POutItem.class, new JDBCClassicQueryExecutor<POutItemRecord,cn.vertxup.psi.domain.tables.pojos.POutItem,String>(configuration,cn.vertxup.psi.domain.tables.pojos.POutItem.class,vertx));
        }

        @Override
        protected String getId(cn.vertxup.psi.domain.tables.pojos.POutItem object) {
                return object.getKey();
        }

        /**
     * Find records that have <code>SERIAL IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyBySerial(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.SERIAL.in(values));
        }

        /**
     * Find records that have <code>SERIAL IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyBySerial(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.SERIAL.in(values),limit);
        }

        /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByStatus(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.STATUS.in(values));
        }

        /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByStatus(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.STATUS.in(values),limit);
        }

        /**
     * Find records that have <code>COMMODITY_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCommodityId(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COMMODITY_ID.in(values));
        }

        /**
     * Find records that have <code>COMMODITY_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCommodityId(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COMMODITY_ID.in(values),limit);
        }

        /**
     * Find records that have <code>COMMODITY_CODE IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCommodityCode(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COMMODITY_CODE.in(values));
        }

        /**
     * Find records that have <code>COMMODITY_CODE IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCommodityCode(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COMMODITY_CODE.in(values),limit);
        }

        /**
     * Find records that have <code>COMMODITY_NAME IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCommodityName(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COMMODITY_NAME.in(values));
        }

        /**
     * Find records that have <code>COMMODITY_NAME IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCommodityName(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COMMODITY_NAME.in(values),limit);
        }

        /**
     * Find records that have <code>COMMODITY_LOGO IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCommodityLogo(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COMMODITY_LOGO.in(values));
        }

        /**
     * Find records that have <code>COMMODITY_LOGO IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCommodityLogo(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COMMODITY_LOGO.in(values),limit);
        }

        /**
     * Find records that have <code>CUSTOMER_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCustomerId(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.CUSTOMER_ID.in(values));
        }

        /**
     * Find records that have <code>CUSTOMER_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCustomerId(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.CUSTOMER_ID.in(values),limit);
        }

        /**
     * Find records that have <code>FROM_NAME IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByFromName(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.FROM_NAME.in(values));
        }

        /**
     * Find records that have <code>FROM_NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByFromName(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.FROM_NAME.in(values),limit);
        }

        /**
     * Find records that have <code>FROM_CODE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByFromCode(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.FROM_CODE.in(values));
        }

        /**
     * Find records that have <code>FROM_CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByFromCode(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.FROM_CODE.in(values),limit);
        }

        /**
     * Find records that have <code>TICKET_ID IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByTicketId(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.TICKET_ID.in(values));
        }

        /**
     * Find records that have <code>TICKET_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByTicketId(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.TICKET_ID.in(values),limit);
        }

        /**
     * Find records that have <code>WH_ID IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByWhId(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.WH_ID.in(values));
        }

        /**
     * Find records that have <code>WH_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByWhId(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.WH_ID.in(values),limit);
        }

        /**
     * Find records that have <code>NUM IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByNum(Collection<Integer> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.NUM.in(values));
        }

        /**
     * Find records that have <code>NUM IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByNum(Collection<Integer> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.NUM.in(values),limit);
        }

        /**
     * Find records that have <code>AMOUNT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByAmount(Collection<BigDecimal> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.AMOUNT.in(values));
        }

        /**
     * Find records that have <code>AMOUNT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByAmount(Collection<BigDecimal> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.AMOUNT.in(values),limit);
        }

        /**
     * Find records that have <code>PRICE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByPrice(Collection<BigDecimal> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.PRICE.in(values));
        }

        /**
     * Find records that have <code>PRICE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByPrice(Collection<BigDecimal> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.PRICE.in(values),limit);
        }

        /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByComment(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COMMENT.in(values));
        }

        /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByComment(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COMMENT.in(values),limit);
        }

        /**
     * Find records that have <code>COST_PER_BASIS IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCostPerBasis(Collection<BigDecimal> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COST_PER_BASIS.in(values));
        }

        /**
     * Find records that have <code>COST_PER_BASIS IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCostPerBasis(Collection<BigDecimal> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COST_PER_BASIS.in(values),limit);
        }

        /**
     * Find records that have <code>COST_PER IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCostPer(Collection<BigDecimal> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COST_PER.in(values));
        }

        /**
     * Find records that have <code>COST_PER IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCostPer(Collection<BigDecimal> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COST_PER.in(values),limit);
        }

        /**
     * Find records that have <code>COST_AMOUNT IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCostAmount(Collection<BigDecimal> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COST_AMOUNT.in(values));
        }

        /**
     * Find records that have <code>COST_AMOUNT IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCostAmount(Collection<BigDecimal> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.COST_AMOUNT.in(values),limit);
        }

        /**
     * Find records that have <code>DISCOUNT_AMOUNT IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByDiscountAmount(Collection<BigDecimal> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.DISCOUNT_AMOUNT.in(values));
        }

        /**
     * Find records that have <code>DISCOUNT_AMOUNT IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByDiscountAmount(Collection<BigDecimal> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.DISCOUNT_AMOUNT.in(values),limit);
        }

        /**
     * Find records that have <code>DISCOUNT_RATE IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByDiscountRate(Collection<BigDecimal> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.DISCOUNT_RATE.in(values));
        }

        /**
     * Find records that have <code>DISCOUNT_RATE IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByDiscountRate(Collection<BigDecimal> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.DISCOUNT_RATE.in(values),limit);
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByActive(Collection<Boolean> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.ACTIVE.in(values));
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByActive(Collection<Boolean> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.ACTIVE.in(values),limit);
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyBySigma(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.SIGMA.in(values));
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyBySigma(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.SIGMA.in(values),limit);
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByMetadata(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.METADATA.in(values));
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByMetadata(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.METADATA.in(values),limit);
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByLanguage(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.LANGUAGE.in(values));
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByLanguage(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.LANGUAGE.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCreatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.CREATED_AT.in(values));
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCreatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.CREATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCreatedBy(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.CREATED_BY.in(values));
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByCreatedBy(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.CREATED_BY.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByUpdatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.UPDATED_AT.in(values));
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByUpdatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.UPDATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByUpdatedBy(Collection<String> values) {
                return findManyByCondition(POutItem.P_OUT_ITEM.UPDATED_BY.in(values));
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.POutItem>> findManyByUpdatedBy(Collection<String> values, int limit) {
                return findManyByCondition(POutItem.P_OUT_ITEM.UPDATED_BY.in(values),limit);
        }

        @Override
        public JDBCClassicQueryExecutor<POutItemRecord,cn.vertxup.psi.domain.tables.pojos.POutItem,String> queryExecutor(){
                return (JDBCClassicQueryExecutor<POutItemRecord,cn.vertxup.psi.domain.tables.pojos.POutItem,String>) super.queryExecutor();
        }
}
