/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.psi.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IPBuyOrder extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.KEY</code>. 「key」- 采购订单主键
     */
    public IPBuyOrder setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.KEY</code>. 「key」- 采购订单主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.SERIAL</code>. 「serial」-
     * 采购订单号（系统可用，直接计算）
     */
    public IPBuyOrder setSerial(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.SERIAL</code>. 「serial」-
     * 采购订单号（系统可用，直接计算）
     */
    public String getSerial();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.TYPE</code>. 「type」- 单据类型
     */
    public IPBuyOrder setType(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.TYPE</code>. 「type」- 单据类型
     */
    public String getType();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.STATUS</code>. 「status」- 订单状态
     */
    public IPBuyOrder setStatus(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.STATUS</code>. 「status」- 订单状态
     */
    public String getStatus();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.WH_ID</code>. 「whId」- 建议入库仓库
     */
    public IPBuyOrder setWhId(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.WH_ID</code>. 「whId」- 建议入库仓库
     */
    public String getWhId();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.CUSTOMER_ID</code>. 「customerId」-
     * 采购供应商
     */
    public IPBuyOrder setCustomerId(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.CUSTOMER_ID</code>. 「customerId」-
     * 采购供应商
     */
    public String getCustomerId();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.PAYED_AT</code>. 「payedAt」- 结算日期
     */
    public IPBuyOrder setPayedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.PAYED_AT</code>. 「payedAt」- 结算日期
     */
    public LocalDateTime getPayedAt();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.PAYED_DAY</code>. 「payedDay」-
     * 采购期限
     */
    public IPBuyOrder setPayedDay(Integer value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.PAYED_DAY</code>. 「payedDay」-
     * 采购期限
     */
    public Integer getPayedDay();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.OP_AT</code>. 「opAt」- 单据日期
     */
    public IPBuyOrder setOpAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.OP_AT</code>. 「opAt」- 单据日期
     */
    public LocalDateTime getOpAt();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.OP_BY</code>. 「opBy」- 业务员
     */
    public IPBuyOrder setOpBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.OP_BY</code>. 「opBy」- 业务员
     */
    public String getOpBy();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.OP_DEPT</code>. 「opDept」- 业务部门
     */
    public IPBuyOrder setOpDept(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.OP_DEPT</code>. 「opDept」- 业务部门
     */
    public String getOpDept();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.TAGS</code>. 「tags」- 单据标签
     */
    public IPBuyOrder setTags(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.TAGS</code>. 「tags」- 单据标签
     */
    public String getTags();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.COMMENT</code>. 「comment」- 单据备注
     */
    public IPBuyOrder setComment(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.COMMENT</code>. 「comment」- 单据备注
     */
    public String getComment();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.STATUS_SEND</code>. 「statusSend」-
     * 发送状态
     */
    public IPBuyOrder setStatusSend(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.STATUS_SEND</code>. 「statusSend」-
     * 发送状态
     */
    public String getStatusSend();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.REASON</code>. 「reason」- 发送失败原因
     */
    public IPBuyOrder setReason(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.REASON</code>. 「reason」- 发送失败原因
     */
    public String getReason();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT</code>. 「amount」- 订单总额
     */
    public IPBuyOrder setAmount(BigDecimal value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT</code>. 「amount」- 订单总额
     */
    public BigDecimal getAmount();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_WAIT</code>. 「amountWait」-
     * 应付余额
     */
    public IPBuyOrder setAmountWait(BigDecimal value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_WAIT</code>. 「amountWait」-
     * 应付余额
     */
    public BigDecimal getAmountWait();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_DEBT</code>. 「amountDebt」-
     * 上次欠款
     */
    public IPBuyOrder setAmountDebt(BigDecimal value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_DEBT</code>. 「amountDebt」-
     * 上次欠款
     */
    public BigDecimal getAmountDebt();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_PLAN</code>. 「amountPlan」-
     * 预计采购费用
     */
    public IPBuyOrder setAmountPlan(BigDecimal value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_PLAN</code>. 「amountPlan」-
     * 预计采购费用
     */
    public BigDecimal getAmountPlan();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_YES</code>. 「amountYes」-
     * 成交金额
     */
    public IPBuyOrder setAmountYes(BigDecimal value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_YES</code>. 「amountYes」-
     * 成交金额
     */
    public BigDecimal getAmountYes();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT_AMOUNT</code>.
     * 「discountAmount」- 整单折扣额
     */
    public IPBuyOrder setDiscountAmount(BigDecimal value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT_AMOUNT</code>.
     * 「discountAmount」- 整单折扣额
     */
    public BigDecimal getDiscountAmount();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT_RATE</code>.
     * 「discountRate」- 折扣率
     */
    public IPBuyOrder setDiscountRate(BigDecimal value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT_RATE</code>.
     * 「discountRate」- 折扣率
     */
    public BigDecimal getDiscountRate();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT</code>. 「discount」- 定向折扣
     */
    public IPBuyOrder setDiscount(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT</code>. 「discount」- 定向折扣
     */
    public Boolean getDiscount();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.APPROVED_BY</code>. 「approvedBy」-
     * 审核人
     */
    public IPBuyOrder setApprovedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.APPROVED_BY</code>. 「approvedBy」-
     * 审核人
     */
    public String getApprovedBy();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.APPROVED_AT</code>. 「approvedAt」-
     * 审核时间
     */
    public IPBuyOrder setApprovedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.APPROVED_AT</code>. 「approvedAt」-
     * 审核时间
     */
    public LocalDateTime getApprovedAt();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.TO_ID</code>. 「toId」- 收货地址ID
     */
    public IPBuyOrder setToId(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.TO_ID</code>. 「toId」- 收货地址ID
     */
    public String getToId();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.TO_ADDRESS</code>. 「toAddress」-
     * 收货地址
     */
    public IPBuyOrder setToAddress(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.TO_ADDRESS</code>. 「toAddress」-
     * 收货地址
     */
    public String getToAddress();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.FROM_ID</code>. 「fromId」- 发货地址ID
     */
    public IPBuyOrder setFromId(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.FROM_ID</code>. 「fromId」- 发货地址ID
     */
    public String getFromId();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.FROM_ADDRESS</code>.
     * 「fromAddress」- 发货地址
     */
    public IPBuyOrder setFromAddress(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.FROM_ADDRESS</code>.
     * 「fromAddress」- 发货地址
     */
    public String getFromAddress();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.CURRENCY_ID</code>. 「currencyId」-
     * 币种
     */
    public IPBuyOrder setCurrencyId(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.CURRENCY_ID</code>. 「currencyId」-
     * 币种
     */
    public String getCurrencyId();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.COMPANY_ID</code>. 「companyId」-
     * 所属公司
     */
    public IPBuyOrder setCompanyId(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.COMPANY_ID</code>. 「companyId」-
     * 所属公司
     */
    public String getCompanyId();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.ACTIVE</code>. 「active」- 是否启用
     */
    public IPBuyOrder setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.SIGMA</code>. 「sigma」- 统一标识
     */
    public IPBuyOrder setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.METADATA</code>. 「metadata」- 附加配置
     */
    public IPBuyOrder setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    public IPBuyOrder setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    public IPBuyOrder setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    public IPBuyOrder setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    public IPBuyOrder setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    public IPBuyOrder setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IPBuyOrder
     */
    public void from(IPBuyOrder from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IPBuyOrder
     */
    public <E extends IPBuyOrder> E into(E into);

        @Override
        public default IPBuyOrder fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setSerial,json::getString,"SERIAL","java.lang.String");
                setOrThrow(this::setType,json::getString,"TYPE","java.lang.String");
                setOrThrow(this::setStatus,json::getString,"STATUS","java.lang.String");
                setOrThrow(this::setWhId,json::getString,"WH_ID","java.lang.String");
                setOrThrow(this::setCustomerId,json::getString,"CUSTOMER_ID","java.lang.String");
                setOrThrow(this::setPayedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"PAYED_AT","java.time.LocalDateTime");
                setOrThrow(this::setPayedDay,json::getInteger,"PAYED_DAY","java.lang.Integer");
                setOrThrow(this::setOpAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"OP_AT","java.time.LocalDateTime");
                setOrThrow(this::setOpBy,json::getString,"OP_BY","java.lang.String");
                setOrThrow(this::setOpDept,json::getString,"OP_DEPT","java.lang.String");
                setOrThrow(this::setTags,json::getString,"TAGS","java.lang.String");
                setOrThrow(this::setComment,json::getString,"COMMENT","java.lang.String");
                setOrThrow(this::setStatusSend,json::getString,"STATUS_SEND","java.lang.String");
                setOrThrow(this::setReason,json::getString,"REASON","java.lang.String");
                setOrThrow(this::setAmount,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"AMOUNT","java.math.BigDecimal");
                setOrThrow(this::setAmountWait,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"AMOUNT_WAIT","java.math.BigDecimal");
                setOrThrow(this::setAmountDebt,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"AMOUNT_DEBT","java.math.BigDecimal");
                setOrThrow(this::setAmountPlan,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"AMOUNT_PLAN","java.math.BigDecimal");
                setOrThrow(this::setAmountYes,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"AMOUNT_YES","java.math.BigDecimal");
                setOrThrow(this::setDiscountAmount,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"DISCOUNT_AMOUNT","java.math.BigDecimal");
                setOrThrow(this::setDiscountRate,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"DISCOUNT_RATE","java.math.BigDecimal");
                setOrThrow(this::setDiscount,json::getBoolean,"DISCOUNT","java.lang.Boolean");
                setOrThrow(this::setApprovedBy,json::getString,"APPROVED_BY","java.lang.String");
                setOrThrow(this::setApprovedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"APPROVED_AT","java.time.LocalDateTime");
                setOrThrow(this::setToId,json::getString,"TO_ID","java.lang.String");
                setOrThrow(this::setToAddress,json::getString,"TO_ADDRESS","java.lang.String");
                setOrThrow(this::setFromId,json::getString,"FROM_ID","java.lang.String");
                setOrThrow(this::setFromAddress,json::getString,"FROM_ADDRESS","java.lang.String");
                setOrThrow(this::setCurrencyId,json::getString,"CURRENCY_ID","java.lang.String");
                setOrThrow(this::setCompanyId,json::getString,"COMPANY_ID","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("SERIAL",getSerial());
                json.put("TYPE",getType());
                json.put("STATUS",getStatus());
                json.put("WH_ID",getWhId());
                json.put("CUSTOMER_ID",getCustomerId());
                json.put("PAYED_AT",getPayedAt()==null?null:getPayedAt().toString());
                json.put("PAYED_DAY",getPayedDay());
                json.put("OP_AT",getOpAt()==null?null:getOpAt().toString());
                json.put("OP_BY",getOpBy());
                json.put("OP_DEPT",getOpDept());
                json.put("TAGS",getTags());
                json.put("COMMENT",getComment());
                json.put("STATUS_SEND",getStatusSend());
                json.put("REASON",getReason());
                json.put("AMOUNT",getAmount()==null?null:getAmount().toString());
                json.put("AMOUNT_WAIT",getAmountWait()==null?null:getAmountWait().toString());
                json.put("AMOUNT_DEBT",getAmountDebt()==null?null:getAmountDebt().toString());
                json.put("AMOUNT_PLAN",getAmountPlan()==null?null:getAmountPlan().toString());
                json.put("AMOUNT_YES",getAmountYes()==null?null:getAmountYes().toString());
                json.put("DISCOUNT_AMOUNT",getDiscountAmount()==null?null:getDiscountAmount().toString());
                json.put("DISCOUNT_RATE",getDiscountRate()==null?null:getDiscountRate().toString());
                json.put("DISCOUNT",getDiscount());
                json.put("APPROVED_BY",getApprovedBy());
                json.put("APPROVED_AT",getApprovedAt()==null?null:getApprovedAt().toString());
                json.put("TO_ID",getToId());
                json.put("TO_ADDRESS",getToAddress());
                json.put("FROM_ID",getFromId());
                json.put("FROM_ADDRESS",getFromAddress());
                json.put("CURRENCY_ID",getCurrencyId());
                json.put("COMPANY_ID",getCompanyId());
                json.put("ACTIVE",getActive());
                json.put("SIGMA",getSigma());
                json.put("METADATA",getMetadata());
                json.put("LANGUAGE",getLanguage());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
