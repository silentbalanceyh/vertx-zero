/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.psi.domain.tables.records;


import cn.vertxup.psi.domain.tables.PCommodity;
import cn.vertxup.psi.domain.tables.interfaces.IPCommodity;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.math.BigDecimal;
import java.time.LocalDateTime;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PCommodityRecord extends UpdatableRecordImpl<PCommodityRecord> implements VertxPojo, IPCommodity {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.KEY</code>. 「key」- 产品主键
     */
    @Override
    public PCommodityRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.KEY</code>. 「key」- 产品主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.NAME</code>. 「name」- 产品名称
     */
    @Override
    public PCommodityRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.NAME</code>. 「name」- 产品名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.CODE</code>. 「code」- 产品编号（系统可用）
     */
    @Override
    public PCommodityRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.CODE</code>. 「code」- 产品编号（系统可用）
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.TYPE</code>. 「type」- 产品类型
     */
    @Override
    public PCommodityRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.TYPE</code>. 「type」- 产品类型
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.STATUS</code>. 「status」- 产品状态
     */
    @Override
    public PCommodityRecord setStatus(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.STATUS</code>. 「status」- 产品状态
     */
    @Override
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.TAGS</code>. 「tags」- 商品标签
     */
    @Override
    public PCommodityRecord setTags(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.TAGS</code>. 「tags」- 商品标签
     */
    @Override
    public String getTags() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.ORIGIN</code>. 「origin」- 商品产地
     */
    @Override
    public PCommodityRecord setOrigin(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.ORIGIN</code>. 「origin」- 商品产地
     */
    @Override
    public String getOrigin() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.BAR_CODE</code>. 「barCode」- 条形码
     */
    @Override
    public PCommodityRecord setBarCode(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.BAR_CODE</code>. 「barCode」- 条形码
     */
    @Override
    public String getBarCode() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.HELP_CODE</code>. 「helpCode」- 助记码
     */
    @Override
    public PCommodityRecord setHelpCode(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.HELP_CODE</code>. 「helpCode」- 助记码
     */
    @Override
    public String getHelpCode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.BRAND_ID</code>. 「brandId」- 品牌
     */
    @Override
    public PCommodityRecord setBrandId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.BRAND_ID</code>. 「brandId」- 品牌
     */
    @Override
    public String getBrandId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.MODEL_NUMBER</code>.
     * 「modelNumber」- 规格型号
     */
    @Override
    public PCommodityRecord setModelNumber(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.MODEL_NUMBER</code>.
     * 「modelNumber」- 规格型号
     */
    @Override
    public String getModelNumber() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.UNIT</code>. 「unit」- 计量单位
     */
    @Override
    public PCommodityRecord setUnit(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.UNIT</code>. 「unit」- 计量单位
     */
    @Override
    public String getUnit() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.EXPIRED_DAY</code>. 「expiredDay」-
     * 保质天数
     */
    @Override
    public PCommodityRecord setExpiredDay(Integer value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.EXPIRED_DAY</code>. 「expiredDay」-
     * 保质天数
     */
    @Override
    public Integer getExpiredDay() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.K_WAY_COST</code>. 「kWayCost」-
     * 成本计算方法
     */
    @Override
    public PCommodityRecord setKWayCost(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.K_WAY_COST</code>. 「kWayCost」-
     * 成本计算方法
     */
    @Override
    public String getKWayCost() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.K_BY_BATCH</code>. 「kByBatch」-
     * 按批核算成本
     */
    @Override
    public PCommodityRecord setKByBatch(Boolean value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.K_BY_BATCH</code>. 「kByBatch」-
     * 按批核算成本
     */
    @Override
    public Boolean getKByBatch() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.K_TAX_TYPE</code>. 「kTaxType」-
     * 税收分类编码
     */
    @Override
    public PCommodityRecord setKTaxType(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.K_TAX_TYPE</code>. 「kTaxType」-
     * 税收分类编码
     */
    @Override
    public String getKTaxType() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.K_TAX_RATE</code>. 「kTaxRate」- 税率
     */
    @Override
    public PCommodityRecord setKTaxRate(BigDecimal value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.K_TAX_RATE</code>. 「kTaxRate」- 税率
     */
    @Override
    public BigDecimal getKTaxRate() {
        return (BigDecimal) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.DF_CUSTOMER</code>. 「dfCustomer」-
     * 默认供应商
     */
    @Override
    public PCommodityRecord setDfCustomer(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.DF_CUSTOMER</code>. 「dfCustomer」-
     * 默认供应商
     */
    @Override
    public String getDfCustomer() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.DF_WH</code>. 「dfWh」- 默认仓库
     */
    @Override
    public PCommodityRecord setDfWh(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.DF_WH</code>. 「dfWh」- 默认仓库
     */
    @Override
    public String getDfWh() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.LOGO</code>. 「logo」- 产品图片
     */
    @Override
    public PCommodityRecord setLogo(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.LOGO</code>. 「logo」- 产品图片
     */
    @Override
    public String getLogo() {
        return (String) get(19);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.PRICE</code>. 「price」- 商品单价
     */
    @Override
    public PCommodityRecord setPrice(BigDecimal value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.PRICE</code>. 「price」- 商品单价
     */
    @Override
    public BigDecimal getPrice() {
        return (BigDecimal) get(20);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.QUANTITY</code>. 「quantity」- 商品数量
     */
    @Override
    public PCommodityRecord setQuantity(Integer value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.QUANTITY</code>. 「quantity」- 商品数量
     */
    @Override
    public Integer getQuantity() {
        return (Integer) get(21);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.AMOUNT</code>.
     * 「amount」——总价，理论计算结果
     */
    @Override
    public PCommodityRecord setAmount(BigDecimal value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.AMOUNT</code>.
     * 「amount」——总价，理论计算结果
     */
    @Override
    public BigDecimal getAmount() {
        return (BigDecimal) get(22);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.COMMENT</code>. 「comment」- 产品备注
     */
    @Override
    public PCommodityRecord setComment(String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.COMMENT</code>. 「comment」- 产品备注
     */
    @Override
    public String getComment() {
        return (String) get(23);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public PCommodityRecord setActive(Boolean value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(24);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public PCommodityRecord setSigma(String value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(25);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public PCommodityRecord setMetadata(String value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(26);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public PCommodityRecord setLanguage(String value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(27);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public PCommodityRecord setCreatedAt(LocalDateTime value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(28);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public PCommodityRecord setCreatedBy(String value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(29);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public PCommodityRecord setUpdatedAt(LocalDateTime value) {
        set(30, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(30);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public PCommodityRecord setUpdatedBy(String value) {
        set(31, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(31);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPCommodity from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setType(from.getType());
        setStatus(from.getStatus());
        setTags(from.getTags());
        setOrigin(from.getOrigin());
        setBarCode(from.getBarCode());
        setHelpCode(from.getHelpCode());
        setBrandId(from.getBrandId());
        setModelNumber(from.getModelNumber());
        setUnit(from.getUnit());
        setExpiredDay(from.getExpiredDay());
        setKWayCost(from.getKWayCost());
        setKByBatch(from.getKByBatch());
        setKTaxType(from.getKTaxType());
        setKTaxRate(from.getKTaxRate());
        setDfCustomer(from.getDfCustomer());
        setDfWh(from.getDfWh());
        setLogo(from.getLogo());
        setPrice(from.getPrice());
        setQuantity(from.getQuantity());
        setAmount(from.getAmount());
        setComment(from.getComment());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IPCommodity> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PCommodityRecord
     */
    public PCommodityRecord() {
        super(PCommodity.P_COMMODITY);
    }

    /**
     * Create a detached, initialised PCommodityRecord
     */
    public PCommodityRecord(String key, String name, String code, String type, String status, String tags, String origin, String barCode, String helpCode, String brandId, String modelNumber, String unit, Integer expiredDay, String kWayCost, Boolean kByBatch, String kTaxType, BigDecimal kTaxRate, String dfCustomer, String dfWh, String logo, BigDecimal price, Integer quantity, BigDecimal amount, String comment, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(PCommodity.P_COMMODITY);

        setKey(key);
        setName(name);
        setCode(code);
        setType(type);
        setStatus(status);
        setTags(tags);
        setOrigin(origin);
        setBarCode(barCode);
        setHelpCode(helpCode);
        setBrandId(brandId);
        setModelNumber(modelNumber);
        setUnit(unit);
        setExpiredDay(expiredDay);
        setKWayCost(kWayCost);
        setKByBatch(kByBatch);
        setKTaxType(kTaxType);
        setKTaxRate(kTaxRate);
        setDfCustomer(dfCustomer);
        setDfWh(dfWh);
        setLogo(logo);
        setPrice(price);
        setQuantity(quantity);
        setAmount(amount);
        setComment(comment);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised PCommodityRecord
     */
    public PCommodityRecord(cn.vertxup.psi.domain.tables.pojos.PCommodity value) {
        super(PCommodity.P_COMMODITY);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setType(value.getType());
            setStatus(value.getStatus());
            setTags(value.getTags());
            setOrigin(value.getOrigin());
            setBarCode(value.getBarCode());
            setHelpCode(value.getHelpCode());
            setBrandId(value.getBrandId());
            setModelNumber(value.getModelNumber());
            setUnit(value.getUnit());
            setExpiredDay(value.getExpiredDay());
            setKWayCost(value.getKWayCost());
            setKByBatch(value.getKByBatch());
            setKTaxType(value.getKTaxType());
            setKTaxRate(value.getKTaxRate());
            setDfCustomer(value.getDfCustomer());
            setDfWh(value.getDfWh());
            setLogo(value.getLogo());
            setPrice(value.getPrice());
            setQuantity(value.getQuantity());
            setAmount(value.getAmount());
            setComment(value.getComment());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public PCommodityRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
