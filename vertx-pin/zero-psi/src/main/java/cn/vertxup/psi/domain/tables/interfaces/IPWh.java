/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.psi.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IPWh extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.P_WH.KEY</code>. 「key」- 仓库主键
     */
    public IPWh setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.KEY</code>. 「key」- 仓库主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.NAME</code>. 「name」- 仓库名称
     */
    public IPWh setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.NAME</code>. 「name」- 仓库名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.CODE</code>. 「code」- 仓库编号（系统可用）
     */
    public IPWh setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.CODE</code>. 「code」- 仓库编号（系统可用）
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.TYPE</code>. 「type」- 仓库类型
     */
    public IPWh setType(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.TYPE</code>. 「type」- 仓库类型
     */
    public String getType();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.STATUS</code>. 「status」- 仓库状态
     */
    public IPWh setStatus(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.STATUS</code>. 「status」- 仓库状态
     */
    public String getStatus();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.MANAGER_ID</code>. 「managerId」- 仓库管理员
     */
    public IPWh setManagerId(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.MANAGER_ID</code>. 「managerId」- 仓库管理员
     */
    public String getManagerId();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.MANAGER_NAME</code>. 「managerName」-
     * 管理员姓名
     */
    public IPWh setManagerName(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.MANAGER_NAME</code>. 「managerName」-
     * 管理员姓名
     */
    public String getManagerName();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.MANAGER_PHONE</code>. 「managerPhone」-
     * 管理员电话
     */
    public IPWh setManagerPhone(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.MANAGER_PHONE</code>. 「managerPhone」-
     * 管理员电话
     */
    public String getManagerPhone();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.MANAGER_MOBILE</code>. 「managerMobile」-
     * 管理员手机
     */
    public IPWh setManagerMobile(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.MANAGER_MOBILE</code>. 「managerMobile」-
     * 管理员手机
     */
    public String getManagerMobile();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.NEGATIVE</code>. 「negative」- 允许负库存
     */
    public IPWh setNegative(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.NEGATIVE</code>. 「negative」- 允许负库存
     */
    public Boolean getNegative();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.SPACE</code>. 「space」- 仓位管理
     */
    public IPWh setSpace(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.SPACE</code>. 「space」- 仓位管理
     */
    public Boolean getSpace();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.AREA_NAME</code>. 「areaName」- 区域名称（手填）
     */
    public IPWh setAreaName(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.AREA_NAME</code>. 「areaName」- 区域名称（手填）
     */
    public String getAreaName();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.COMMENT</code>. 「comment」- 仓库备注
     */
    public IPWh setComment(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.COMMENT</code>. 「comment」- 仓库备注
     */
    public String getComment();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.DISTINCT_ID</code>. 「distinctId」- 仓库行政区域
     */
    public IPWh setDistinctId(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.DISTINCT_ID</code>. 「distinctId」- 仓库行政区域
     */
    public String getDistinctId();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.LOCATION_ID</code>. 「locationId」-
     * 启用LBS时对应的Location主键
     */
    public IPWh setLocationId(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.LOCATION_ID</code>. 「locationId」-
     * 启用LBS时对应的Location主键
     */
    public String getLocationId();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.LOCATION_ADDRESS</code>.
     * 「locationAddress」- 仓库地址
     */
    public IPWh setLocationAddress(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.LOCATION_ADDRESS</code>.
     * 「locationAddress」- 仓库地址
     */
    public String getLocationAddress();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.ACTIVE</code>. 「active」- 是否启用
     */
    public IPWh setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.SIGMA</code>. 「sigma」- 统一标识
     */
    public IPWh setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.METADATA</code>. 「metadata」- 附加配置
     */
    public IPWh setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IPWh setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IPWh setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IPWh setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IPWh setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.P_WH.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IPWh setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.P_WH.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IPWh
     */
    public void from(IPWh from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IPWh
     */
    public <E extends IPWh> E into(E into);

        @Override
        public default IPWh fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setType,json::getString,"TYPE","java.lang.String");
                setOrThrow(this::setStatus,json::getString,"STATUS","java.lang.String");
                setOrThrow(this::setManagerId,json::getString,"MANAGER_ID","java.lang.String");
                setOrThrow(this::setManagerName,json::getString,"MANAGER_NAME","java.lang.String");
                setOrThrow(this::setManagerPhone,json::getString,"MANAGER_PHONE","java.lang.String");
                setOrThrow(this::setManagerMobile,json::getString,"MANAGER_MOBILE","java.lang.String");
                setOrThrow(this::setNegative,json::getBoolean,"NEGATIVE","java.lang.Boolean");
                setOrThrow(this::setSpace,json::getBoolean,"SPACE","java.lang.Boolean");
                setOrThrow(this::setAreaName,json::getString,"AREA_NAME","java.lang.String");
                setOrThrow(this::setComment,json::getString,"COMMENT","java.lang.String");
                setOrThrow(this::setDistinctId,json::getString,"DISTINCT_ID","java.lang.String");
                setOrThrow(this::setLocationId,json::getString,"LOCATION_ID","java.lang.String");
                setOrThrow(this::setLocationAddress,json::getString,"LOCATION_ADDRESS","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("TYPE",getType());
                json.put("STATUS",getStatus());
                json.put("MANAGER_ID",getManagerId());
                json.put("MANAGER_NAME",getManagerName());
                json.put("MANAGER_PHONE",getManagerPhone());
                json.put("MANAGER_MOBILE",getManagerMobile());
                json.put("NEGATIVE",getNegative());
                json.put("SPACE",getSpace());
                json.put("AREA_NAME",getAreaName());
                json.put("COMMENT",getComment());
                json.put("DISTINCT_ID",getDistinctId());
                json.put("LOCATION_ID",getLocationId());
                json.put("LOCATION_ADDRESS",getLocationAddress());
                json.put("ACTIVE",getActive());
                json.put("SIGMA",getSigma());
                json.put("METADATA",getMetadata());
                json.put("LANGUAGE",getLanguage());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
