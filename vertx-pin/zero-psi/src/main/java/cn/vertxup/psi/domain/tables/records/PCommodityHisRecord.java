/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.psi.domain.tables.records;


import cn.vertxup.psi.domain.tables.PCommodityHis;
import cn.vertxup.psi.domain.tables.interfaces.IPCommodityHis;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PCommodityHisRecord extends UpdatableRecordImpl<PCommodityHisRecord> implements VertxPojo, Record17<String, String, String, String, Integer, Integer, BigDecimal, BigDecimal, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IPCommodityHis {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.KEY</code>. 「key」- 产品变更记录主键
     */
    @Override
    public PCommodityHisRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.KEY</code>. 「key」- 产品变更记录主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.CODE</code>. 「code」-
     * 产品变更编号（系统可用）
     */
    @Override
    public PCommodityHisRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.CODE</code>. 「code」-
     * 产品变更编号（系统可用）
     */
    @Override
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.TYPE</code>. 「type」-
     * 产品变更类型：IN/OUT，出入
     */
    @Override
    public PCommodityHisRecord setType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.TYPE</code>. 「type」-
     * 产品变更类型：IN/OUT，出入
     */
    @Override
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.COMMODITY_ID</code>.
     * 「commodityId」- 产品ID
     */
    @Override
    public PCommodityHisRecord setCommodityId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.COMMODITY_ID</code>.
     * 「commodityId」- 产品ID
     */
    @Override
    public String getCommodityId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.NUM_FROM</code>. 「numFrom」-
     * 之前数量
     */
    @Override
    public PCommodityHisRecord setNumFrom(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.NUM_FROM</code>. 「numFrom」-
     * 之前数量
     */
    @Override
    public Integer getNumFrom() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.NUM_TO</code>. 「numTo」- 之后数量
     */
    @Override
    public PCommodityHisRecord setNumTo(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.NUM_TO</code>. 「numTo」- 之后数量
     */
    @Override
    public Integer getNumTo() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.AMOUNT_FROM</code>.
     * 「amountFrom」- 之前平均价格
     */
    @Override
    public PCommodityHisRecord setAmountFrom(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.AMOUNT_FROM</code>.
     * 「amountFrom」- 之前平均价格
     */
    @Override
    public BigDecimal getAmountFrom() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.AMOUNT_TO</code>. 「amountTo」-
     * 之后平均价格
     */
    @Override
    public PCommodityHisRecord setAmountTo(BigDecimal value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.AMOUNT_TO</code>. 「amountTo」-
     * 之后平均价格
     */
    @Override
    public BigDecimal getAmountTo() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.ITEM_ID</code>. 「itemId」-
     * 入库/出库明细ID
     */
    @Override
    public PCommodityHisRecord setItemId(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.ITEM_ID</code>. 「itemId」-
     * 入库/出库明细ID
     */
    @Override
    public String getItemId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public PCommodityHisRecord setActive(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public PCommodityHisRecord setSigma(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public PCommodityHisRecord setMetadata(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public PCommodityHisRecord setLanguage(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    @Override
    public PCommodityHisRecord setCreatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    @Override
    public PCommodityHisRecord setCreatedBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    @Override
    public PCommodityHisRecord setUpdatedAt(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    @Override
    public PCommodityHisRecord setUpdatedBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<String, String, String, String, Integer, Integer, BigDecimal, BigDecimal, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<String, String, String, String, Integer, Integer, BigDecimal, BigDecimal, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return PCommodityHis.P_COMMODITY_HIS.KEY;
    }

    @Override
    public Field<String> field2() {
        return PCommodityHis.P_COMMODITY_HIS.CODE;
    }

    @Override
    public Field<String> field3() {
        return PCommodityHis.P_COMMODITY_HIS.TYPE;
    }

    @Override
    public Field<String> field4() {
        return PCommodityHis.P_COMMODITY_HIS.COMMODITY_ID;
    }

    @Override
    public Field<Integer> field5() {
        return PCommodityHis.P_COMMODITY_HIS.NUM_FROM;
    }

    @Override
    public Field<Integer> field6() {
        return PCommodityHis.P_COMMODITY_HIS.NUM_TO;
    }

    @Override
    public Field<BigDecimal> field7() {
        return PCommodityHis.P_COMMODITY_HIS.AMOUNT_FROM;
    }

    @Override
    public Field<BigDecimal> field8() {
        return PCommodityHis.P_COMMODITY_HIS.AMOUNT_TO;
    }

    @Override
    public Field<String> field9() {
        return PCommodityHis.P_COMMODITY_HIS.ITEM_ID;
    }

    @Override
    public Field<Boolean> field10() {
        return PCommodityHis.P_COMMODITY_HIS.ACTIVE;
    }

    @Override
    public Field<String> field11() {
        return PCommodityHis.P_COMMODITY_HIS.SIGMA;
    }

    @Override
    public Field<String> field12() {
        return PCommodityHis.P_COMMODITY_HIS.METADATA;
    }

    @Override
    public Field<String> field13() {
        return PCommodityHis.P_COMMODITY_HIS.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return PCommodityHis.P_COMMODITY_HIS.CREATED_AT;
    }

    @Override
    public Field<String> field15() {
        return PCommodityHis.P_COMMODITY_HIS.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return PCommodityHis.P_COMMODITY_HIS.UPDATED_AT;
    }

    @Override
    public Field<String> field17() {
        return PCommodityHis.P_COMMODITY_HIS.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getCommodityId();
    }

    @Override
    public Integer component5() {
        return getNumFrom();
    }

    @Override
    public Integer component6() {
        return getNumTo();
    }

    @Override
    public BigDecimal component7() {
        return getAmountFrom();
    }

    @Override
    public BigDecimal component8() {
        return getAmountTo();
    }

    @Override
    public String component9() {
        return getItemId();
    }

    @Override
    public Boolean component10() {
        return getActive();
    }

    @Override
    public String component11() {
        return getSigma();
    }

    @Override
    public String component12() {
        return getMetadata();
    }

    @Override
    public String component13() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component14() {
        return getCreatedAt();
    }

    @Override
    public String component15() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component16() {
        return getUpdatedAt();
    }

    @Override
    public String component17() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getCommodityId();
    }

    @Override
    public Integer value5() {
        return getNumFrom();
    }

    @Override
    public Integer value6() {
        return getNumTo();
    }

    @Override
    public BigDecimal value7() {
        return getAmountFrom();
    }

    @Override
    public BigDecimal value8() {
        return getAmountTo();
    }

    @Override
    public String value9() {
        return getItemId();
    }

    @Override
    public Boolean value10() {
        return getActive();
    }

    @Override
    public String value11() {
        return getSigma();
    }

    @Override
    public String value12() {
        return getMetadata();
    }

    @Override
    public String value13() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value14() {
        return getCreatedAt();
    }

    @Override
    public String value15() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value16() {
        return getUpdatedAt();
    }

    @Override
    public String value17() {
        return getUpdatedBy();
    }

    @Override
    public PCommodityHisRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value4(String value) {
        setCommodityId(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value5(Integer value) {
        setNumFrom(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value6(Integer value) {
        setNumTo(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value7(BigDecimal value) {
        setAmountFrom(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value8(BigDecimal value) {
        setAmountTo(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value9(String value) {
        setItemId(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value10(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value11(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value12(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value13(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value14(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value15(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value16(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PCommodityHisRecord value17(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public PCommodityHisRecord values(String value1, String value2, String value3, String value4, Integer value5, Integer value6, BigDecimal value7, BigDecimal value8, String value9, Boolean value10, String value11, String value12, String value13, LocalDateTime value14, String value15, LocalDateTime value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPCommodityHis from) {
        setKey(from.getKey());
        setCode(from.getCode());
        setType(from.getType());
        setCommodityId(from.getCommodityId());
        setNumFrom(from.getNumFrom());
        setNumTo(from.getNumTo());
        setAmountFrom(from.getAmountFrom());
        setAmountTo(from.getAmountTo());
        setItemId(from.getItemId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IPCommodityHis> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PCommodityHisRecord
     */
    public PCommodityHisRecord() {
        super(PCommodityHis.P_COMMODITY_HIS);
    }

    /**
     * Create a detached, initialised PCommodityHisRecord
     */
    public PCommodityHisRecord(String key, String code, String type, String commodityId, Integer numFrom, Integer numTo, BigDecimal amountFrom, BigDecimal amountTo, String itemId, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(PCommodityHis.P_COMMODITY_HIS);

        setKey(key);
        setCode(code);
        setType(type);
        setCommodityId(commodityId);
        setNumFrom(numFrom);
        setNumTo(numTo);
        setAmountFrom(amountFrom);
        setAmountTo(amountTo);
        setItemId(itemId);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised PCommodityHisRecord
     */
    public PCommodityHisRecord(cn.vertxup.psi.domain.tables.pojos.PCommodityHis value) {
        super(PCommodityHis.P_COMMODITY_HIS);

        if (value != null) {
            setKey(value.getKey());
            setCode(value.getCode());
            setType(value.getType());
            setCommodityId(value.getCommodityId());
            setNumFrom(value.getNumFrom());
            setNumTo(value.getNumTo());
            setAmountFrom(value.getAmountFrom());
            setAmountTo(value.getAmountTo());
            setItemId(value.getItemId());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public PCommodityHisRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
