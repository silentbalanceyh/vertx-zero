/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.psi.domain.tables.daos;


import cn.vertxup.psi.domain.tables.PWh;
import cn.vertxup.psi.domain.tables.records.PWhRecord;

import io.github.jklingsporn.vertx.jooq.shared.internal.AbstractVertxDAO;

import java.time.LocalDateTime;
import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.vertx.core.Future;
import io.github.jklingsporn.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PWhDao extends AbstractVertxDAO<PWhRecord, cn.vertxup.psi.domain.tables.pojos.PWh, String, Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>>, Future<cn.vertxup.psi.domain.tables.pojos.PWh>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<PWhRecord,cn.vertxup.psi.domain.tables.pojos.PWh,String> {

        /**
     * @param configuration The Configuration used for rendering and query
     * execution.
     * @param vertx the vertx instance
     */
        public PWhDao(Configuration configuration, io.vertx.core.Vertx vertx) {
                super(PWh.P_WH, cn.vertxup.psi.domain.tables.pojos.PWh.class, new JDBCClassicQueryExecutor<PWhRecord,cn.vertxup.psi.domain.tables.pojos.PWh,String>(configuration,cn.vertxup.psi.domain.tables.pojos.PWh.class,vertx));
        }

        @Override
        protected String getId(cn.vertxup.psi.domain.tables.pojos.PWh object) {
                return object.getKey();
        }

        /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByName(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.NAME.in(values));
        }

        /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByName(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.NAME.in(values),limit);
        }

        /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByCode(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.CODE.in(values));
        }

        /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByCode(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.CODE.in(values),limit);
        }

        /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByType(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.TYPE.in(values));
        }

        /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByType(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.TYPE.in(values),limit);
        }

        /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByStatus(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.STATUS.in(values));
        }

        /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByStatus(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.STATUS.in(values),limit);
        }

        /**
     * Find records that have <code>MANAGER_ID IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByManagerId(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.MANAGER_ID.in(values));
        }

        /**
     * Find records that have <code>MANAGER_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByManagerId(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.MANAGER_ID.in(values),limit);
        }

        /**
     * Find records that have <code>MANAGER_NAME IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByManagerName(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.MANAGER_NAME.in(values));
        }

        /**
     * Find records that have <code>MANAGER_NAME IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByManagerName(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.MANAGER_NAME.in(values),limit);
        }

        /**
     * Find records that have <code>MANAGER_PHONE IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByManagerPhone(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.MANAGER_PHONE.in(values));
        }

        /**
     * Find records that have <code>MANAGER_PHONE IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByManagerPhone(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.MANAGER_PHONE.in(values),limit);
        }

        /**
     * Find records that have <code>MANAGER_MOBILE IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByManagerMobile(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.MANAGER_MOBILE.in(values));
        }

        /**
     * Find records that have <code>MANAGER_MOBILE IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByManagerMobile(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.MANAGER_MOBILE.in(values),limit);
        }

        /**
     * Find records that have <code>NEGATIVE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByNegative(Collection<Boolean> values) {
                return findManyByCondition(PWh.P_WH.NEGATIVE.in(values));
        }

        /**
     * Find records that have <code>NEGATIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByNegative(Collection<Boolean> values, int limit) {
                return findManyByCondition(PWh.P_WH.NEGATIVE.in(values),limit);
        }

        /**
     * Find records that have <code>SPACE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyBySpace(Collection<Boolean> values) {
                return findManyByCondition(PWh.P_WH.SPACE.in(values));
        }

        /**
     * Find records that have <code>SPACE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyBySpace(Collection<Boolean> values, int limit) {
                return findManyByCondition(PWh.P_WH.SPACE.in(values),limit);
        }

        /**
     * Find records that have <code>AREA_NAME IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByAreaName(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.AREA_NAME.in(values));
        }

        /**
     * Find records that have <code>AREA_NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByAreaName(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.AREA_NAME.in(values),limit);
        }

        /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByComment(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.COMMENT.in(values));
        }

        /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByComment(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.COMMENT.in(values),limit);
        }

        /**
     * Find records that have <code>DISTINCT_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByDistinctId(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.DISTINCT_ID.in(values));
        }

        /**
     * Find records that have <code>DISTINCT_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByDistinctId(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.DISTINCT_ID.in(values),limit);
        }

        /**
     * Find records that have <code>LOCATION_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByLocationId(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.LOCATION_ID.in(values));
        }

        /**
     * Find records that have <code>LOCATION_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByLocationId(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.LOCATION_ID.in(values),limit);
        }

        /**
     * Find records that have <code>LOCATION_ADDRESS IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByLocationAddress(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.LOCATION_ADDRESS.in(values));
        }

        /**
     * Find records that have <code>LOCATION_ADDRESS IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByLocationAddress(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.LOCATION_ADDRESS.in(values),limit);
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByActive(Collection<Boolean> values) {
                return findManyByCondition(PWh.P_WH.ACTIVE.in(values));
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByActive(Collection<Boolean> values, int limit) {
                return findManyByCondition(PWh.P_WH.ACTIVE.in(values),limit);
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyBySigma(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.SIGMA.in(values));
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyBySigma(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.SIGMA.in(values),limit);
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByMetadata(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.METADATA.in(values));
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByMetadata(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.METADATA.in(values),limit);
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByLanguage(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.LANGUAGE.in(values));
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByLanguage(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.LANGUAGE.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByCreatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(PWh.P_WH.CREATED_AT.in(values));
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByCreatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(PWh.P_WH.CREATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByCreatedBy(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.CREATED_BY.in(values));
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByCreatedBy(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.CREATED_BY.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByUpdatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(PWh.P_WH.UPDATED_AT.in(values));
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByUpdatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(PWh.P_WH.UPDATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByUpdatedBy(Collection<String> values) {
                return findManyByCondition(PWh.P_WH.UPDATED_BY.in(values));
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.psi.domain.tables.pojos.PWh>> findManyByUpdatedBy(Collection<String> values, int limit) {
                return findManyByCondition(PWh.P_WH.UPDATED_BY.in(values),limit);
        }

        @Override
        public JDBCClassicQueryExecutor<PWhRecord,cn.vertxup.psi.domain.tables.pojos.PWh,String> queryExecutor(){
                return (JDBCClassicQueryExecutor<PWhRecord,cn.vertxup.psi.domain.tables.pojos.PWh,String>) super.queryExecutor();
        }
}
