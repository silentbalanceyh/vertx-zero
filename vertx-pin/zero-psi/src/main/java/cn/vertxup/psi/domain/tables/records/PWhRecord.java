/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.psi.domain.tables.records;


import cn.vertxup.psi.domain.tables.PWh;
import cn.vertxup.psi.domain.tables.interfaces.IPWh;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PWhRecord extends UpdatableRecordImpl<PWhRecord> implements VertxPojo, IPWh {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.P_WH.KEY</code>. 「key」- 仓库主键
     */
    @Override
    public PWhRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.KEY</code>. 「key」- 仓库主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.NAME</code>. 「name」- 仓库名称
     */
    @Override
    public PWhRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.NAME</code>. 「name」- 仓库名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.CODE</code>. 「code」- 仓库编号（系统可用）
     */
    @Override
    public PWhRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.CODE</code>. 「code」- 仓库编号（系统可用）
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.TYPE</code>. 「type」- 仓库类型
     */
    @Override
    public PWhRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.TYPE</code>. 「type」- 仓库类型
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.STATUS</code>. 「status」- 仓库状态
     */
    @Override
    public PWhRecord setStatus(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.STATUS</code>. 「status」- 仓库状态
     */
    @Override
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.MANAGER_ID</code>. 「managerId」- 仓库管理员
     */
    @Override
    public PWhRecord setManagerId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.MANAGER_ID</code>. 「managerId」- 仓库管理员
     */
    @Override
    public String getManagerId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.MANAGER_NAME</code>. 「managerName」-
     * 管理员姓名
     */
    @Override
    public PWhRecord setManagerName(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.MANAGER_NAME</code>. 「managerName」-
     * 管理员姓名
     */
    @Override
    public String getManagerName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.MANAGER_PHONE</code>. 「managerPhone」-
     * 管理员电话
     */
    @Override
    public PWhRecord setManagerPhone(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.MANAGER_PHONE</code>. 「managerPhone」-
     * 管理员电话
     */
    @Override
    public String getManagerPhone() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.MANAGER_MOBILE</code>. 「managerMobile」-
     * 管理员手机
     */
    @Override
    public PWhRecord setManagerMobile(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.MANAGER_MOBILE</code>. 「managerMobile」-
     * 管理员手机
     */
    @Override
    public String getManagerMobile() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.NEGATIVE</code>. 「negative」- 允许负库存
     */
    @Override
    public PWhRecord setNegative(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.NEGATIVE</code>. 「negative」- 允许负库存
     */
    @Override
    public Boolean getNegative() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.SPACE</code>. 「space」- 仓位管理
     */
    @Override
    public PWhRecord setSpace(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.SPACE</code>. 「space」- 仓位管理
     */
    @Override
    public Boolean getSpace() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.AREA_NAME</code>. 「areaName」- 区域名称（手填）
     */
    @Override
    public PWhRecord setAreaName(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.AREA_NAME</code>. 「areaName」- 区域名称（手填）
     */
    @Override
    public String getAreaName() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.COMMENT</code>. 「comment」- 仓库备注
     */
    @Override
    public PWhRecord setComment(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.COMMENT</code>. 「comment」- 仓库备注
     */
    @Override
    public String getComment() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.DISTINCT_ID</code>. 「distinctId」- 仓库行政区域
     */
    @Override
    public PWhRecord setDistinctId(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.DISTINCT_ID</code>. 「distinctId」- 仓库行政区域
     */
    @Override
    public String getDistinctId() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.LOCATION_ID</code>. 「locationId」-
     * 启用LBS时对应的Location主键
     */
    @Override
    public PWhRecord setLocationId(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.LOCATION_ID</code>. 「locationId」-
     * 启用LBS时对应的Location主键
     */
    @Override
    public String getLocationId() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.LOCATION_ADDRESS</code>.
     * 「locationAddress」- 仓库地址
     */
    @Override
    public PWhRecord setLocationAddress(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.LOCATION_ADDRESS</code>.
     * 「locationAddress」- 仓库地址
     */
    @Override
    public String getLocationAddress() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public PWhRecord setActive(Boolean value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public PWhRecord setSigma(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public PWhRecord setMetadata(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public PWhRecord setLanguage(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(19);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public PWhRecord setCreatedAt(LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public PWhRecord setCreatedBy(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(21);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public PWhRecord setUpdatedAt(LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(22);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_WH.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public PWhRecord setUpdatedBy(String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_WH.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(23);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPWh from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setType(from.getType());
        setStatus(from.getStatus());
        setManagerId(from.getManagerId());
        setManagerName(from.getManagerName());
        setManagerPhone(from.getManagerPhone());
        setManagerMobile(from.getManagerMobile());
        setNegative(from.getNegative());
        setSpace(from.getSpace());
        setAreaName(from.getAreaName());
        setComment(from.getComment());
        setDistinctId(from.getDistinctId());
        setLocationId(from.getLocationId());
        setLocationAddress(from.getLocationAddress());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IPWh> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PWhRecord
     */
    public PWhRecord() {
        super(PWh.P_WH);
    }

    /**
     * Create a detached, initialised PWhRecord
     */
    public PWhRecord(String key, String name, String code, String type, String status, String managerId, String managerName, String managerPhone, String managerMobile, Boolean negative, Boolean space, String areaName, String comment, String distinctId, String locationId, String locationAddress, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(PWh.P_WH);

        setKey(key);
        setName(name);
        setCode(code);
        setType(type);
        setStatus(status);
        setManagerId(managerId);
        setManagerName(managerName);
        setManagerPhone(managerPhone);
        setManagerMobile(managerMobile);
        setNegative(negative);
        setSpace(space);
        setAreaName(areaName);
        setComment(comment);
        setDistinctId(distinctId);
        setLocationId(locationId);
        setLocationAddress(locationAddress);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised PWhRecord
     */
    public PWhRecord(cn.vertxup.psi.domain.tables.pojos.PWh value) {
        super(PWh.P_WH);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setType(value.getType());
            setStatus(value.getStatus());
            setManagerId(value.getManagerId());
            setManagerName(value.getManagerName());
            setManagerPhone(value.getManagerPhone());
            setManagerMobile(value.getManagerMobile());
            setNegative(value.getNegative());
            setSpace(value.getSpace());
            setAreaName(value.getAreaName());
            setComment(value.getComment());
            setDistinctId(value.getDistinctId());
            setLocationId(value.getLocationId());
            setLocationAddress(value.getLocationAddress());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public PWhRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
