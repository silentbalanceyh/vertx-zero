/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.psi.domain.tables.pojos;


import cn.vertxup.psi.domain.tables.interfaces.IPCommodityHis;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.math.BigDecimal;
import java.time.LocalDateTime;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PCommodityHis implements VertxPojo, IPCommodityHis {

    private static final long serialVersionUID = 1L;

    private String key;
    private String code;
    private String type;
    private String commodityId;
    private Integer numFrom;
    private Integer numTo;
    private BigDecimal amountFrom;
    private BigDecimal amountTo;
    private String itemId;
    private Boolean active;
    private String sigma;
    private String metadata;
    private String language;
    private LocalDateTime createdAt;
    private String createdBy;
    private LocalDateTime updatedAt;
    private String updatedBy;

    public PCommodityHis() {}

    public PCommodityHis(IPCommodityHis value) {
        this.key = value.getKey();
        this.code = value.getCode();
        this.type = value.getType();
        this.commodityId = value.getCommodityId();
        this.numFrom = value.getNumFrom();
        this.numTo = value.getNumTo();
        this.amountFrom = value.getAmountFrom();
        this.amountTo = value.getAmountTo();
        this.itemId = value.getItemId();
        this.active = value.getActive();
        this.sigma = value.getSigma();
        this.metadata = value.getMetadata();
        this.language = value.getLanguage();
        this.createdAt = value.getCreatedAt();
        this.createdBy = value.getCreatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.updatedBy = value.getUpdatedBy();
    }

    public PCommodityHis(
        String key,
        String code,
        String type,
        String commodityId,
        Integer numFrom,
        Integer numTo,
        BigDecimal amountFrom,
        BigDecimal amountTo,
        String itemId,
        Boolean active,
        String sigma,
        String metadata,
        String language,
        LocalDateTime createdAt,
        String createdBy,
        LocalDateTime updatedAt,
        String updatedBy
    ) {
        this.key = key;
        this.code = code;
        this.type = type;
        this.commodityId = commodityId;
        this.numFrom = numFrom;
        this.numTo = numTo;
        this.amountFrom = amountFrom;
        this.amountTo = amountTo;
        this.itemId = itemId;
        this.active = active;
        this.sigma = sigma;
        this.metadata = metadata;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

        public PCommodityHis(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.KEY</code>. 「key」- 产品变更记录主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.KEY</code>. 「key」- 产品变更记录主键
     */
    @Override
    public PCommodityHis setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.CODE</code>. 「code」-
     * 产品变更编号（系统可用）
     */
    @Override
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.CODE</code>. 「code」-
     * 产品变更编号（系统可用）
     */
    @Override
    public PCommodityHis setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.TYPE</code>. 「type」-
     * 产品变更类型：IN/OUT，出入
     */
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.TYPE</code>. 「type」-
     * 产品变更类型：IN/OUT，出入
     */
    @Override
    public PCommodityHis setType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.COMMODITY_ID</code>.
     * 「commodityId」- 产品ID
     */
    @Override
    public String getCommodityId() {
        return this.commodityId;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.COMMODITY_ID</code>.
     * 「commodityId」- 产品ID
     */
    @Override
    public PCommodityHis setCommodityId(String commodityId) {
        this.commodityId = commodityId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.NUM_FROM</code>. 「numFrom」-
     * 之前数量
     */
    @Override
    public Integer getNumFrom() {
        return this.numFrom;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.NUM_FROM</code>. 「numFrom」-
     * 之前数量
     */
    @Override
    public PCommodityHis setNumFrom(Integer numFrom) {
        this.numFrom = numFrom;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.NUM_TO</code>. 「numTo」- 之后数量
     */
    @Override
    public Integer getNumTo() {
        return this.numTo;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.NUM_TO</code>. 「numTo」- 之后数量
     */
    @Override
    public PCommodityHis setNumTo(Integer numTo) {
        this.numTo = numTo;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.AMOUNT_FROM</code>.
     * 「amountFrom」- 之前平均价格
     */
    @Override
    public BigDecimal getAmountFrom() {
        return this.amountFrom;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.AMOUNT_FROM</code>.
     * 「amountFrom」- 之前平均价格
     */
    @Override
    public PCommodityHis setAmountFrom(BigDecimal amountFrom) {
        this.amountFrom = amountFrom;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.AMOUNT_TO</code>. 「amountTo」-
     * 之后平均价格
     */
    @Override
    public BigDecimal getAmountTo() {
        return this.amountTo;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.AMOUNT_TO</code>. 「amountTo」-
     * 之后平均价格
     */
    @Override
    public PCommodityHis setAmountTo(BigDecimal amountTo) {
        this.amountTo = amountTo;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.ITEM_ID</code>. 「itemId」-
     * 入库/出库明细ID
     */
    @Override
    public String getItemId() {
        return this.itemId;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.ITEM_ID</code>. 「itemId」-
     * 入库/出库明细ID
     */
    @Override
    public PCommodityHis setItemId(String itemId) {
        this.itemId = itemId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public PCommodityHis setActive(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return this.sigma;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public PCommodityHis setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public PCommodityHis setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public PCommodityHis setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.CREATED_AT</code>.
     * 「createdAt」- 创建时间
     */
    @Override
    public PCommodityHis setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.CREATED_BY</code>.
     * 「createdBy」- 创建人
     */
    @Override
    public PCommodityHis setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.UPDATED_AT</code>.
     * 「updatedAt」- 更新时间
     */
    @Override
    public PCommodityHis setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_COMMODITY_HIS.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.P_COMMODITY_HIS.UPDATED_BY</code>.
     * 「updatedBy」- 更新人
     */
    @Override
    public PCommodityHis setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PCommodityHis other = (PCommodityHis) obj;
        if (this.key == null) {
            if (other.key != null)
                return false;
        }
        else if (!this.key.equals(other.key))
            return false;
        if (this.code == null) {
            if (other.code != null)
                return false;
        }
        else if (!this.code.equals(other.code))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.commodityId == null) {
            if (other.commodityId != null)
                return false;
        }
        else if (!this.commodityId.equals(other.commodityId))
            return false;
        if (this.numFrom == null) {
            if (other.numFrom != null)
                return false;
        }
        else if (!this.numFrom.equals(other.numFrom))
            return false;
        if (this.numTo == null) {
            if (other.numTo != null)
                return false;
        }
        else if (!this.numTo.equals(other.numTo))
            return false;
        if (this.amountFrom == null) {
            if (other.amountFrom != null)
                return false;
        }
        else if (!this.amountFrom.equals(other.amountFrom))
            return false;
        if (this.amountTo == null) {
            if (other.amountTo != null)
                return false;
        }
        else if (!this.amountTo.equals(other.amountTo))
            return false;
        if (this.itemId == null) {
            if (other.itemId != null)
                return false;
        }
        else if (!this.itemId.equals(other.itemId))
            return false;
        if (this.active == null) {
            if (other.active != null)
                return false;
        }
        else if (!this.active.equals(other.active))
            return false;
        if (this.sigma == null) {
            if (other.sigma != null)
                return false;
        }
        else if (!this.sigma.equals(other.sigma))
            return false;
        if (this.metadata == null) {
            if (other.metadata != null)
                return false;
        }
        else if (!this.metadata.equals(other.metadata))
            return false;
        if (this.language == null) {
            if (other.language != null)
                return false;
        }
        else if (!this.language.equals(other.language))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.key == null) ? 0 : this.key.hashCode());
        result = prime * result + ((this.code == null) ? 0 : this.code.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.commodityId == null) ? 0 : this.commodityId.hashCode());
        result = prime * result + ((this.numFrom == null) ? 0 : this.numFrom.hashCode());
        result = prime * result + ((this.numTo == null) ? 0 : this.numTo.hashCode());
        result = prime * result + ((this.amountFrom == null) ? 0 : this.amountFrom.hashCode());
        result = prime * result + ((this.amountTo == null) ? 0 : this.amountTo.hashCode());
        result = prime * result + ((this.itemId == null) ? 0 : this.itemId.hashCode());
        result = prime * result + ((this.active == null) ? 0 : this.active.hashCode());
        result = prime * result + ((this.sigma == null) ? 0 : this.sigma.hashCode());
        result = prime * result + ((this.metadata == null) ? 0 : this.metadata.hashCode());
        result = prime * result + ((this.language == null) ? 0 : this.language.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PCommodityHis (");

        sb.append(key);
        sb.append(", ").append(code);
        sb.append(", ").append(type);
        sb.append(", ").append(commodityId);
        sb.append(", ").append(numFrom);
        sb.append(", ").append(numTo);
        sb.append(", ").append(amountFrom);
        sb.append(", ").append(amountTo);
        sb.append(", ").append(itemId);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(metadata);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPCommodityHis from) {
        setKey(from.getKey());
        setCode(from.getCode());
        setType(from.getType());
        setCommodityId(from.getCommodityId());
        setNumFrom(from.getNumFrom());
        setNumTo(from.getNumTo());
        setAmountFrom(from.getAmountFrom());
        setAmountTo(from.getAmountTo());
        setItemId(from.getItemId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IPCommodityHis> E into(E into) {
        into.from(this);
        return into;
    }
}
