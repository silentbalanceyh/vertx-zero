/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.psi.domain.tables.records;


import cn.vertxup.psi.domain.tables.PBuyOrder;
import cn.vertxup.psi.domain.tables.interfaces.IPBuyOrder;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PBuyOrderRecord extends UpdatableRecordImpl<PBuyOrderRecord> implements VertxPojo, IPBuyOrder {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.KEY</code>. 「key」- 采购订单主键
     */
    @Override
    public PBuyOrderRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.KEY</code>. 「key」- 采购订单主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.SERIAL</code>. 「serial」-
     * 采购订单号（系统可用，直接计算）
     */
    @Override
    public PBuyOrderRecord setSerial(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.SERIAL</code>. 「serial」-
     * 采购订单号（系统可用，直接计算）
     */
    @Override
    public String getSerial() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.TYPE</code>. 「type」- 单据类型
     */
    @Override
    public PBuyOrderRecord setType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.TYPE</code>. 「type」- 单据类型
     */
    @Override
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.STATUS</code>. 「status」- 订单状态
     */
    @Override
    public PBuyOrderRecord setStatus(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.STATUS</code>. 「status」- 订单状态
     */
    @Override
    public String getStatus() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.WH_ID</code>. 「whId」- 建议入库仓库
     */
    @Override
    public PBuyOrderRecord setWhId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.WH_ID</code>. 「whId」- 建议入库仓库
     */
    @Override
    public String getWhId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.CUSTOMER_ID</code>. 「customerId」-
     * 采购供应商
     */
    @Override
    public PBuyOrderRecord setCustomerId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.CUSTOMER_ID</code>. 「customerId」-
     * 采购供应商
     */
    @Override
    public String getCustomerId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.PAYED_AT</code>. 「payedAt」- 结算日期
     */
    @Override
    public PBuyOrderRecord setPayedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.PAYED_AT</code>. 「payedAt」- 结算日期
     */
    @Override
    public LocalDateTime getPayedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.PAYED_DAY</code>. 「payedDay」-
     * 采购期限
     */
    @Override
    public PBuyOrderRecord setPayedDay(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.PAYED_DAY</code>. 「payedDay」-
     * 采购期限
     */
    @Override
    public Integer getPayedDay() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.OP_AT</code>. 「opAt」- 单据日期
     */
    @Override
    public PBuyOrderRecord setOpAt(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.OP_AT</code>. 「opAt」- 单据日期
     */
    @Override
    public LocalDateTime getOpAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.OP_BY</code>. 「opBy」- 业务员
     */
    @Override
    public PBuyOrderRecord setOpBy(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.OP_BY</code>. 「opBy」- 业务员
     */
    @Override
    public String getOpBy() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.OP_DEPT</code>. 「opDept」- 业务部门
     */
    @Override
    public PBuyOrderRecord setOpDept(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.OP_DEPT</code>. 「opDept」- 业务部门
     */
    @Override
    public String getOpDept() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.TAGS</code>. 「tags」- 单据标签
     */
    @Override
    public PBuyOrderRecord setTags(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.TAGS</code>. 「tags」- 单据标签
     */
    @Override
    public String getTags() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.COMMENT</code>. 「comment」- 单据备注
     */
    @Override
    public PBuyOrderRecord setComment(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.COMMENT</code>. 「comment」- 单据备注
     */
    @Override
    public String getComment() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.STATUS_SEND</code>. 「statusSend」-
     * 发送状态
     */
    @Override
    public PBuyOrderRecord setStatusSend(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.STATUS_SEND</code>. 「statusSend」-
     * 发送状态
     */
    @Override
    public String getStatusSend() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.REASON</code>. 「reason」- 发送失败原因
     */
    @Override
    public PBuyOrderRecord setReason(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.REASON</code>. 「reason」- 发送失败原因
     */
    @Override
    public String getReason() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT</code>. 「amount」- 订单总额
     */
    @Override
    public PBuyOrderRecord setAmount(BigDecimal value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT</code>. 「amount」- 订单总额
     */
    @Override
    public BigDecimal getAmount() {
        return (BigDecimal) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_WAIT</code>. 「amountWait」-
     * 应付余额
     */
    @Override
    public PBuyOrderRecord setAmountWait(BigDecimal value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_WAIT</code>. 「amountWait」-
     * 应付余额
     */
    @Override
    public BigDecimal getAmountWait() {
        return (BigDecimal) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_DEBT</code>. 「amountDebt」-
     * 上次欠款
     */
    @Override
    public PBuyOrderRecord setAmountDebt(BigDecimal value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_DEBT</code>. 「amountDebt」-
     * 上次欠款
     */
    @Override
    public BigDecimal getAmountDebt() {
        return (BigDecimal) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_PLAN</code>. 「amountPlan」-
     * 预计采购费用
     */
    @Override
    public PBuyOrderRecord setAmountPlan(BigDecimal value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_PLAN</code>. 「amountPlan」-
     * 预计采购费用
     */
    @Override
    public BigDecimal getAmountPlan() {
        return (BigDecimal) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_YES</code>. 「amountYes」-
     * 成交金额
     */
    @Override
    public PBuyOrderRecord setAmountYes(BigDecimal value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.AMOUNT_YES</code>. 「amountYes」-
     * 成交金额
     */
    @Override
    public BigDecimal getAmountYes() {
        return (BigDecimal) get(19);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT_AMOUNT</code>.
     * 「discountAmount」- 整单折扣额
     */
    @Override
    public PBuyOrderRecord setDiscountAmount(BigDecimal value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT_AMOUNT</code>.
     * 「discountAmount」- 整单折扣额
     */
    @Override
    public BigDecimal getDiscountAmount() {
        return (BigDecimal) get(20);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT_RATE</code>.
     * 「discountRate」- 折扣率
     */
    @Override
    public PBuyOrderRecord setDiscountRate(BigDecimal value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT_RATE</code>.
     * 「discountRate」- 折扣率
     */
    @Override
    public BigDecimal getDiscountRate() {
        return (BigDecimal) get(21);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT</code>. 「discount」- 定向折扣
     */
    @Override
    public PBuyOrderRecord setDiscount(Boolean value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.DISCOUNT</code>. 「discount」- 定向折扣
     */
    @Override
    public Boolean getDiscount() {
        return (Boolean) get(22);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.APPROVED_BY</code>. 「approvedBy」-
     * 审核人
     */
    @Override
    public PBuyOrderRecord setApprovedBy(String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.APPROVED_BY</code>. 「approvedBy」-
     * 审核人
     */
    @Override
    public String getApprovedBy() {
        return (String) get(23);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.APPROVED_AT</code>. 「approvedAt」-
     * 审核时间
     */
    @Override
    public PBuyOrderRecord setApprovedAt(LocalDateTime value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.APPROVED_AT</code>. 「approvedAt」-
     * 审核时间
     */
    @Override
    public LocalDateTime getApprovedAt() {
        return (LocalDateTime) get(24);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.TO_ID</code>. 「toId」- 收货地址ID
     */
    @Override
    public PBuyOrderRecord setToId(String value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.TO_ID</code>. 「toId」- 收货地址ID
     */
    @Override
    public String getToId() {
        return (String) get(25);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.TO_ADDRESS</code>. 「toAddress」-
     * 收货地址
     */
    @Override
    public PBuyOrderRecord setToAddress(String value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.TO_ADDRESS</code>. 「toAddress」-
     * 收货地址
     */
    @Override
    public String getToAddress() {
        return (String) get(26);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.FROM_ID</code>. 「fromId」- 发货地址ID
     */
    @Override
    public PBuyOrderRecord setFromId(String value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.FROM_ID</code>. 「fromId」- 发货地址ID
     */
    @Override
    public String getFromId() {
        return (String) get(27);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.FROM_ADDRESS</code>.
     * 「fromAddress」- 发货地址
     */
    @Override
    public PBuyOrderRecord setFromAddress(String value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.FROM_ADDRESS</code>.
     * 「fromAddress」- 发货地址
     */
    @Override
    public String getFromAddress() {
        return (String) get(28);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.CURRENCY_ID</code>. 「currencyId」-
     * 币种
     */
    @Override
    public PBuyOrderRecord setCurrencyId(String value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.CURRENCY_ID</code>. 「currencyId」-
     * 币种
     */
    @Override
    public String getCurrencyId() {
        return (String) get(29);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.COMPANY_ID</code>. 「companyId」-
     * 所属公司
     */
    @Override
    public PBuyOrderRecord setCompanyId(String value) {
        set(30, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.COMPANY_ID</code>. 「companyId」-
     * 所属公司
     */
    @Override
    public String getCompanyId() {
        return (String) get(30);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public PBuyOrderRecord setActive(Boolean value) {
        set(31, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(31);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public PBuyOrderRecord setSigma(String value) {
        set(32, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(32);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public PBuyOrderRecord setMetadata(String value) {
        set(33, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(33);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public PBuyOrderRecord setLanguage(String value) {
        set(34, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(34);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public PBuyOrderRecord setCreatedAt(LocalDateTime value) {
        set(35, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(35);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public PBuyOrderRecord setCreatedBy(String value) {
        set(36, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(36);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public PBuyOrderRecord setUpdatedAt(LocalDateTime value) {
        set(37, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(37);
    }

    /**
     * Setter for <code>DB_ETERNAL.P_BUY_ORDER.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public PBuyOrderRecord setUpdatedBy(String value) {
        set(38, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.P_BUY_ORDER.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(38);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPBuyOrder from) {
        setKey(from.getKey());
        setSerial(from.getSerial());
        setType(from.getType());
        setStatus(from.getStatus());
        setWhId(from.getWhId());
        setCustomerId(from.getCustomerId());
        setPayedAt(from.getPayedAt());
        setPayedDay(from.getPayedDay());
        setOpAt(from.getOpAt());
        setOpBy(from.getOpBy());
        setOpDept(from.getOpDept());
        setTags(from.getTags());
        setComment(from.getComment());
        setStatusSend(from.getStatusSend());
        setReason(from.getReason());
        setAmount(from.getAmount());
        setAmountWait(from.getAmountWait());
        setAmountDebt(from.getAmountDebt());
        setAmountPlan(from.getAmountPlan());
        setAmountYes(from.getAmountYes());
        setDiscountAmount(from.getDiscountAmount());
        setDiscountRate(from.getDiscountRate());
        setDiscount(from.getDiscount());
        setApprovedBy(from.getApprovedBy());
        setApprovedAt(from.getApprovedAt());
        setToId(from.getToId());
        setToAddress(from.getToAddress());
        setFromId(from.getFromId());
        setFromAddress(from.getFromAddress());
        setCurrencyId(from.getCurrencyId());
        setCompanyId(from.getCompanyId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IPBuyOrder> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PBuyOrderRecord
     */
    public PBuyOrderRecord() {
        super(PBuyOrder.P_BUY_ORDER);
    }

    /**
     * Create a detached, initialised PBuyOrderRecord
     */
    public PBuyOrderRecord(String key, String serial, String type, String status, String whId, String customerId, LocalDateTime payedAt, Integer payedDay, LocalDateTime opAt, String opBy, String opDept, String tags, String comment, String statusSend, String reason, BigDecimal amount, BigDecimal amountWait, BigDecimal amountDebt, BigDecimal amountPlan, BigDecimal amountYes, BigDecimal discountAmount, BigDecimal discountRate, Boolean discount, String approvedBy, LocalDateTime approvedAt, String toId, String toAddress, String fromId, String fromAddress, String currencyId, String companyId, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(PBuyOrder.P_BUY_ORDER);

        setKey(key);
        setSerial(serial);
        setType(type);
        setStatus(status);
        setWhId(whId);
        setCustomerId(customerId);
        setPayedAt(payedAt);
        setPayedDay(payedDay);
        setOpAt(opAt);
        setOpBy(opBy);
        setOpDept(opDept);
        setTags(tags);
        setComment(comment);
        setStatusSend(statusSend);
        setReason(reason);
        setAmount(amount);
        setAmountWait(amountWait);
        setAmountDebt(amountDebt);
        setAmountPlan(amountPlan);
        setAmountYes(amountYes);
        setDiscountAmount(discountAmount);
        setDiscountRate(discountRate);
        setDiscount(discount);
        setApprovedBy(approvedBy);
        setApprovedAt(approvedAt);
        setToId(toId);
        setToAddress(toAddress);
        setFromId(fromId);
        setFromAddress(fromAddress);
        setCurrencyId(currencyId);
        setCompanyId(companyId);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised PBuyOrderRecord
     */
    public PBuyOrderRecord(cn.vertxup.psi.domain.tables.pojos.PBuyOrder value) {
        super(PBuyOrder.P_BUY_ORDER);

        if (value != null) {
            setKey(value.getKey());
            setSerial(value.getSerial());
            setType(value.getType());
            setStatus(value.getStatus());
            setWhId(value.getWhId());
            setCustomerId(value.getCustomerId());
            setPayedAt(value.getPayedAt());
            setPayedDay(value.getPayedDay());
            setOpAt(value.getOpAt());
            setOpBy(value.getOpBy());
            setOpDept(value.getOpDept());
            setTags(value.getTags());
            setComment(value.getComment());
            setStatusSend(value.getStatusSend());
            setReason(value.getReason());
            setAmount(value.getAmount());
            setAmountWait(value.getAmountWait());
            setAmountDebt(value.getAmountDebt());
            setAmountPlan(value.getAmountPlan());
            setAmountYes(value.getAmountYes());
            setDiscountAmount(value.getDiscountAmount());
            setDiscountRate(value.getDiscountRate());
            setDiscount(value.getDiscount());
            setApprovedBy(value.getApprovedBy());
            setApprovedAt(value.getApprovedAt());
            setToId(value.getToId());
            setToAddress(value.getToAddress());
            setFromId(value.getFromId());
            setFromAddress(value.getFromAddress());
            setCurrencyId(value.getCurrencyId());
            setCompanyId(value.getCompanyId());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public PBuyOrderRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
