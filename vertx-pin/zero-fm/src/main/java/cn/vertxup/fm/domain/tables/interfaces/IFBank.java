/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.fm.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IFBank extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.KEY</code>. 「key」- 银行主键
     */
    public IFBank setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.KEY</code>. 「key」- 银行主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.NAME</code>. 「name」- 银行名称
     */
    public IFBank setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.NAME</code>. 「name」- 银行名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.CODE</code>. 「code」- 银行系统编号
     */
    public IFBank setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.CODE</code>. 「code」- 银行系统编号
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.ALIAS</code>. 「alias」- 银行别称
     */
    public IFBank setAlias(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.ALIAS</code>. 「alias」- 银行别称
     */
    public String getAlias();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.LOGO</code>. 「logo」- 银行图标
     */
    public IFBank setLogo(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.LOGO</code>. 「logo」- 银行图标
     */
    public String getLogo();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.WEBSITE</code>. 「website」- 银行主页
     */
    public IFBank setWebsite(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.WEBSITE</code>. 「website」- 银行主页
     */
    public String getWebsite();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.COMMENT</code>. 「comment」 - 银行备注
     */
    public IFBank setComment(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.COMMENT</code>. 「comment」 - 银行备注
     */
    public String getComment();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.BRANCH_NAME</code>. 「branchName」- 支行名称
     */
    public IFBank setBranchName(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.BRANCH_NAME</code>. 「branchName」- 支行名称
     */
    public String getBranchName();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.BRANCH_CODE</code>. 「branchCode」- 支行编号
     */
    public IFBank setBranchCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.BRANCH_CODE</code>. 「branchCode」- 支行编号
     */
    public String getBranchCode();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.BRANCH</code>. 「branch」- 是否支行
     */
    public IFBank setBranch(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.BRANCH</code>. 「branch」- 是否支行
     */
    public Boolean getBranch();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.BANK_ID</code>. 「bankId」- 所属银行ID
     */
    public IFBank setBankId(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.BANK_ID</code>. 「bankId」- 所属银行ID
     */
    public String getBankId();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.LOCATION_ID</code>. 「locationId」-
     * 银行地址对应信息
     */
    public IFBank setLocationId(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.LOCATION_ID</code>. 「locationId」-
     * 银行地址对应信息
     */
    public String getLocationId();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.SIGMA</code>. 「sigma」- 统一标识
     */
    public IFBank setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IFBank setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.ACTIVE</code>. 「active」- 是否启用
     */
    public IFBank setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.METADATA</code>. 「metadata」- 附加配置数据
     */
    public IFBank setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.METADATA</code>. 「metadata」- 附加配置数据
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IFBank setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IFBank setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IFBank setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IFBank setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IFBank
     */
    public void from(IFBank from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IFBank
     */
    public <E extends IFBank> E into(E into);

        @Override
        public default IFBank fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setAlias,json::getString,"ALIAS","java.lang.String");
                setOrThrow(this::setLogo,json::getString,"LOGO","java.lang.String");
                setOrThrow(this::setWebsite,json::getString,"WEBSITE","java.lang.String");
                setOrThrow(this::setComment,json::getString,"COMMENT","java.lang.String");
                setOrThrow(this::setBranchName,json::getString,"BRANCH_NAME","java.lang.String");
                setOrThrow(this::setBranchCode,json::getString,"BRANCH_CODE","java.lang.String");
                setOrThrow(this::setBranch,json::getBoolean,"BRANCH","java.lang.Boolean");
                setOrThrow(this::setBankId,json::getString,"BANK_ID","java.lang.String");
                setOrThrow(this::setLocationId,json::getString,"LOCATION_ID","java.lang.String");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("ALIAS",getAlias());
                json.put("LOGO",getLogo());
                json.put("WEBSITE",getWebsite());
                json.put("COMMENT",getComment());
                json.put("BRANCH_NAME",getBranchName());
                json.put("BRANCH_CODE",getBranchCode());
                json.put("BRANCH",getBranch());
                json.put("BANK_ID",getBankId());
                json.put("LOCATION_ID",getLocationId());
                json.put("SIGMA",getSigma());
                json.put("LANGUAGE",getLanguage());
                json.put("ACTIVE",getActive());
                json.put("METADATA",getMetadata());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
