/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.fm.domain.tables.pojos;


import cn.vertxup.fm.domain.tables.interfaces.IFReceivable;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.math.BigDecimal;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FReceivable implements VertxPojo, IFReceivable {

    private static final long serialVersionUID = 1L;

    private String        key;
    private String        name;
    private String        code;
    private String        serial;
    private BigDecimal    amount;
    private String        comment;
    private String        signName;
    private String        signMobile;
    private Boolean       finished;
    private LocalDateTime finishedAt;
    private String        customerId;
    private String        sigma;
    private String        language;
    private Boolean       active;
    private String        metadata;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public FReceivable() {}

    public FReceivable(IFReceivable value) {
        this.key = value.getKey();
        this.name = value.getName();
        this.code = value.getCode();
        this.serial = value.getSerial();
        this.amount = value.getAmount();
        this.comment = value.getComment();
        this.signName = value.getSignName();
        this.signMobile = value.getSignMobile();
        this.finished = value.getFinished();
        this.finishedAt = value.getFinishedAt();
        this.customerId = value.getCustomerId();
        this.sigma = value.getSigma();
        this.language = value.getLanguage();
        this.active = value.getActive();
        this.metadata = value.getMetadata();
        this.createdAt = value.getCreatedAt();
        this.createdBy = value.getCreatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.updatedBy = value.getUpdatedBy();
    }

    public FReceivable(
        String        key,
        String        name,
        String        code,
        String        serial,
        BigDecimal    amount,
        String        comment,
        String        signName,
        String        signMobile,
        Boolean       finished,
        LocalDateTime finishedAt,
        String        customerId,
        String        sigma,
        String        language,
        Boolean       active,
        String        metadata,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.name = name;
        this.code = code;
        this.serial = serial;
        this.amount = amount;
        this.comment = comment;
        this.signName = signName;
        this.signMobile = signMobile;
        this.finished = finished;
        this.finishedAt = finishedAt;
        this.customerId = customerId;
        this.sigma = sigma;
        this.language = language;
        this.active = active;
        this.metadata = metadata;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

        public FReceivable(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.KEY</code>. 「key」- 应收账单主键ID
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.KEY</code>. 「key」- 应收账单主键ID
     */
    @Override
    public FReceivable setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.NAME</code>. 「name」 - 应收单标题
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.NAME</code>. 「name」 - 应收单标题
     */
    @Override
    public FReceivable setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.CODE</code>. 「code」 - 应收单编号
     */
    @Override
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.CODE</code>. 「code」 - 应收单编号
     */
    @Override
    public FReceivable setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.SERIAL</code>. 「serial」 - 应收单据号
     */
    @Override
    public String getSerial() {
        return this.serial;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.SERIAL</code>. 「serial」 - 应收单据号
     */
    @Override
    public FReceivable setSerial(String serial) {
        this.serial = serial;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.AMOUNT</code>.
     * 「amount」——价税合计，所有明细对应的实际结算金额
     */
    @Override
    public BigDecimal getAmount() {
        return this.amount;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.AMOUNT</code>.
     * 「amount」——价税合计，所有明细对应的实际结算金额
     */
    @Override
    public FReceivable setAmount(BigDecimal amount) {
        this.amount = amount;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.COMMENT</code>. 「comment」 -
     * 结算单备注
     */
    @Override
    public String getComment() {
        return this.comment;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.COMMENT</code>. 「comment」 -
     * 结算单备注
     */
    @Override
    public FReceivable setComment(String comment) {
        this.comment = comment;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.SIGN_NAME</code>.
     * 「signName」签单人姓名
     */
    @Override
    public String getSignName() {
        return this.signName;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.SIGN_NAME</code>.
     * 「signName」签单人姓名
     */
    @Override
    public FReceivable setSignName(String signName) {
        this.signName = signName;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.SIGN_MOBILE</code>.
     * 「signMobile」签单人电话
     */
    @Override
    public String getSignMobile() {
        return this.signMobile;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.SIGN_MOBILE</code>.
     * 「signMobile」签单人电话
     */
    @Override
    public FReceivable setSignMobile(String signMobile) {
        this.signMobile = signMobile;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.FINISHED</code>. 「finished」-
     * 是否完成
     */
    @Override
    public Boolean getFinished() {
        return this.finished;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.FINISHED</code>. 「finished」-
     * 是否完成
     */
    @Override
    public FReceivable setFinished(Boolean finished) {
        this.finished = finished;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.FINISHED_AT</code>. 「createdAt」-
     * 完成时间
     */
    @Override
    public LocalDateTime getFinishedAt() {
        return this.finishedAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.FINISHED_AT</code>. 「createdAt」-
     * 完成时间
     */
    @Override
    public FReceivable setFinishedAt(LocalDateTime finishedAt) {
        this.finishedAt = finishedAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.CUSTOMER_ID</code>.
     * 「customerId」结算对象（单位ID）
     */
    @Override
    public String getCustomerId() {
        return this.customerId;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.CUSTOMER_ID</code>.
     * 「customerId」结算对象（单位ID）
     */
    @Override
    public FReceivable setCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return this.sigma;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public FReceivable setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public FReceivable setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public FReceivable setActive(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    @Override
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    @Override
    public FReceivable setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public FReceivable setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public FReceivable setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public FReceivable setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_RECEIVABLE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_RECEIVABLE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public FReceivable setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FReceivable (");

        sb.append(key);
        sb.append(", ").append(name);
        sb.append(", ").append(code);
        sb.append(", ").append(serial);
        sb.append(", ").append(amount);
        sb.append(", ").append(comment);
        sb.append(", ").append(signName);
        sb.append(", ").append(signMobile);
        sb.append(", ").append(finished);
        sb.append(", ").append(finishedAt);
        sb.append(", ").append(customerId);
        sb.append(", ").append(sigma);
        sb.append(", ").append(language);
        sb.append(", ").append(active);
        sb.append(", ").append(metadata);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFReceivable from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setSerial(from.getSerial());
        setAmount(from.getAmount());
        setComment(from.getComment());
        setSignName(from.getSignName());
        setSignMobile(from.getSignMobile());
        setFinished(from.getFinished());
        setFinishedAt(from.getFinishedAt());
        setCustomerId(from.getCustomerId());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IFReceivable> E into(E into) {
        into.from(this);
        return into;
    }
}
