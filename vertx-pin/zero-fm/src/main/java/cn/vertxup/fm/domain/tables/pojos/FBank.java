/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.fm.domain.tables.pojos;


import cn.vertxup.fm.domain.tables.interfaces.IFBank;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FBank implements VertxPojo, IFBank {

    private static final long serialVersionUID = 1L;

    private String        key;
    private String        name;
    private String        code;
    private String        alias;
    private String        logo;
    private String        website;
    private String        comment;
    private String        branchName;
    private String        branchCode;
    private Boolean       branch;
    private String        bankId;
    private String        locationId;
    private String        sigma;
    private String        language;
    private Boolean       active;
    private String        metadata;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public FBank() {}

    public FBank(IFBank value) {
        this.key = value.getKey();
        this.name = value.getName();
        this.code = value.getCode();
        this.alias = value.getAlias();
        this.logo = value.getLogo();
        this.website = value.getWebsite();
        this.comment = value.getComment();
        this.branchName = value.getBranchName();
        this.branchCode = value.getBranchCode();
        this.branch = value.getBranch();
        this.bankId = value.getBankId();
        this.locationId = value.getLocationId();
        this.sigma = value.getSigma();
        this.language = value.getLanguage();
        this.active = value.getActive();
        this.metadata = value.getMetadata();
        this.createdAt = value.getCreatedAt();
        this.createdBy = value.getCreatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.updatedBy = value.getUpdatedBy();
    }

    public FBank(
        String        key,
        String        name,
        String        code,
        String        alias,
        String        logo,
        String        website,
        String        comment,
        String        branchName,
        String        branchCode,
        Boolean       branch,
        String        bankId,
        String        locationId,
        String        sigma,
        String        language,
        Boolean       active,
        String        metadata,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.name = name;
        this.code = code;
        this.alias = alias;
        this.logo = logo;
        this.website = website;
        this.comment = comment;
        this.branchName = branchName;
        this.branchCode = branchCode;
        this.branch = branch;
        this.bankId = bankId;
        this.locationId = locationId;
        this.sigma = sigma;
        this.language = language;
        this.active = active;
        this.metadata = metadata;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

        public FBank(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.KEY</code>. 「key」- 银行主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.KEY</code>. 「key」- 银行主键
     */
    @Override
    public FBank setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.NAME</code>. 「name」- 银行名称
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.NAME</code>. 「name」- 银行名称
     */
    @Override
    public FBank setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.CODE</code>. 「code」- 银行系统编号
     */
    @Override
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.CODE</code>. 「code」- 银行系统编号
     */
    @Override
    public FBank setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.ALIAS</code>. 「alias」- 银行别称
     */
    @Override
    public String getAlias() {
        return this.alias;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.ALIAS</code>. 「alias」- 银行别称
     */
    @Override
    public FBank setAlias(String alias) {
        this.alias = alias;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.LOGO</code>. 「logo」- 银行图标
     */
    @Override
    public String getLogo() {
        return this.logo;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.LOGO</code>. 「logo」- 银行图标
     */
    @Override
    public FBank setLogo(String logo) {
        this.logo = logo;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.WEBSITE</code>. 「website」- 银行主页
     */
    @Override
    public String getWebsite() {
        return this.website;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.WEBSITE</code>. 「website」- 银行主页
     */
    @Override
    public FBank setWebsite(String website) {
        this.website = website;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.COMMENT</code>. 「comment」 - 银行备注
     */
    @Override
    public String getComment() {
        return this.comment;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.COMMENT</code>. 「comment」 - 银行备注
     */
    @Override
    public FBank setComment(String comment) {
        this.comment = comment;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.BRANCH_NAME</code>. 「branchName」- 支行名称
     */
    @Override
    public String getBranchName() {
        return this.branchName;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.BRANCH_NAME</code>. 「branchName」- 支行名称
     */
    @Override
    public FBank setBranchName(String branchName) {
        this.branchName = branchName;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.BRANCH_CODE</code>. 「branchCode」- 支行编号
     */
    @Override
    public String getBranchCode() {
        return this.branchCode;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.BRANCH_CODE</code>. 「branchCode」- 支行编号
     */
    @Override
    public FBank setBranchCode(String branchCode) {
        this.branchCode = branchCode;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.BRANCH</code>. 「branch」- 是否支行
     */
    @Override
    public Boolean getBranch() {
        return this.branch;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.BRANCH</code>. 「branch」- 是否支行
     */
    @Override
    public FBank setBranch(Boolean branch) {
        this.branch = branch;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.BANK_ID</code>. 「bankId」- 所属银行ID
     */
    @Override
    public String getBankId() {
        return this.bankId;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.BANK_ID</code>. 「bankId」- 所属银行ID
     */
    @Override
    public FBank setBankId(String bankId) {
        this.bankId = bankId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.LOCATION_ID</code>. 「locationId」-
     * 银行地址对应信息
     */
    @Override
    public String getLocationId() {
        return this.locationId;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.LOCATION_ID</code>. 「locationId」-
     * 银行地址对应信息
     */
    @Override
    public FBank setLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return this.sigma;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public FBank setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public FBank setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public FBank setActive(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public FBank setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public FBank setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public FBank setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public FBank setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_BANK.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.F_BANK.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public FBank setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FBank (");

        sb.append(key);
        sb.append(", ").append(name);
        sb.append(", ").append(code);
        sb.append(", ").append(alias);
        sb.append(", ").append(logo);
        sb.append(", ").append(website);
        sb.append(", ").append(comment);
        sb.append(", ").append(branchName);
        sb.append(", ").append(branchCode);
        sb.append(", ").append(branch);
        sb.append(", ").append(bankId);
        sb.append(", ").append(locationId);
        sb.append(", ").append(sigma);
        sb.append(", ").append(language);
        sb.append(", ").append(active);
        sb.append(", ").append(metadata);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFBank from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setAlias(from.getAlias());
        setLogo(from.getLogo());
        setWebsite(from.getWebsite());
        setComment(from.getComment());
        setBranchName(from.getBranchName());
        setBranchCode(from.getBranchCode());
        setBranch(from.getBranch());
        setBankId(from.getBankId());
        setLocationId(from.getLocationId());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IFBank> E into(E into) {
        into.from(this);
        return into;
    }
}
