/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.fm.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IFPayment extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.KEY</code>. 「key」- 付款单账单主键ID
     */
    public IFPayment setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.KEY</code>. 「key」- 付款单账单主键ID
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.NAME</code>. 「name」 - 付款单单标题
     */
    public IFPayment setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.NAME</code>. 「name」 - 付款单单标题
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.CODE</code>. 「code」 - 付款单单编号
     */
    public IFPayment setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.CODE</code>. 「code」 - 付款单单编号
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.SERIAL</code>. 「serial」 - 付款单单据号
     */
    public IFPayment setSerial(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.SERIAL</code>. 「serial」 - 付款单单据号
     */
    public String getSerial();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.AMOUNT</code>.
     * 「amount」——价税合计，所有明细对应的实际结算金额
     */
    public IFPayment setAmount(BigDecimal value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.AMOUNT</code>.
     * 「amount」——价税合计，所有明细对应的实际结算金额
     */
    public BigDecimal getAmount();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.PAY_NAME</code>. 「payName」打款人姓名
     */
    public IFPayment setPayName(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.PAY_NAME</code>. 「payName」打款人姓名
     */
    public String getPayName();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.PAY_MOBILE</code>. 「payMobile」打款人电话
     */
    public IFPayment setPayMobile(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.PAY_MOBILE</code>. 「payMobile」打款人电话
     */
    public String getPayMobile();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.PAY_METHOD</code>. 「payMethod」付款方式
     */
    public IFPayment setPayMethod(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.PAY_METHOD</code>. 「payMethod」付款方式
     */
    public String getPayMethod();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.PAY_ID</code>. 「payId」付款账号
     */
    public IFPayment setPayId(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.PAY_ID</code>. 「payId」付款账号
     */
    public String getPayId();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.COMMENT</code>. 「comment」 - 备注
     */
    public IFPayment setComment(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.COMMENT</code>. 「comment」 - 备注
     */
    public String getComment();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.PREPAY</code>. 「prepay」- 是否预付
     */
    public IFPayment setPrepay(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.PREPAY</code>. 「prepay」- 是否预付
     */
    public Boolean getPrepay();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.SIGMA</code>. 「sigma」- 统一标识
     */
    public IFPayment setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IFPayment setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.ACTIVE</code>. 「active」- 是否启用
     */
    public IFPayment setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.METADATA</code>. 「metadata」- 附加配置数据
     */
    public IFPayment setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.METADATA</code>. 「metadata」- 附加配置数据
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    public IFPayment setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IFPayment setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    public IFPayment setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.F_PAYMENT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IFPayment setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.F_PAYMENT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IFPayment
     */
    public void from(IFPayment from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IFPayment
     */
    public <E extends IFPayment> E into(E into);

        @Override
        public default IFPayment fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setSerial,json::getString,"SERIAL","java.lang.String");
                setOrThrow(this::setAmount,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"AMOUNT","java.math.BigDecimal");
                setOrThrow(this::setPayName,json::getString,"PAY_NAME","java.lang.String");
                setOrThrow(this::setPayMobile,json::getString,"PAY_MOBILE","java.lang.String");
                setOrThrow(this::setPayMethod,json::getString,"PAY_METHOD","java.lang.String");
                setOrThrow(this::setPayId,json::getString,"PAY_ID","java.lang.String");
                setOrThrow(this::setComment,json::getString,"COMMENT","java.lang.String");
                setOrThrow(this::setPrepay,json::getBoolean,"PREPAY","java.lang.Boolean");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("SERIAL",getSerial());
                json.put("AMOUNT",getAmount()==null?null:getAmount().toString());
                json.put("PAY_NAME",getPayName());
                json.put("PAY_MOBILE",getPayMobile());
                json.put("PAY_METHOD",getPayMethod());
                json.put("PAY_ID",getPayId());
                json.put("COMMENT",getComment());
                json.put("PREPAY",getPrepay());
                json.put("SIGMA",getSigma());
                json.put("LANGUAGE",getLanguage());
                json.put("ACTIVE",getActive());
                json.put("METADATA",getMetadata());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
