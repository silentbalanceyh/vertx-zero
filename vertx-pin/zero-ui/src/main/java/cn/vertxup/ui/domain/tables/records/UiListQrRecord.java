/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ui.domain.tables.records;


import cn.vertxup.ui.domain.tables.UiListQr;
import cn.vertxup.ui.domain.tables.interfaces.IUiListQr;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record21;
import org.jooq.Row21;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UiListQrRecord extends UpdatableRecordImpl<UiListQrRecord> implements VertxPojo, Record21<String, String, String, Integer, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IUiListQr {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.KEY</code>. 「key」- 查询记录ID
     */
    @Override
    public UiListQrRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.KEY</code>. 「key」- 查询记录ID
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.NAME</code>. 「name」- 视图名称，每个
     * MATRIX 对应一个视图
     */
    @Override
    public UiListQrRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.NAME</code>. 「name」- 视图名称，每个
     * MATRIX 对应一个视图
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.CODE</code>. 「code」- 系统编码
     */
    @Override
    public UiListQrRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.CODE</code>. 「code」- 系统编码
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.SORT</code>. 「sort」- QR的顺序
     */
    @Override
    public UiListQrRecord setSort(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.SORT</code>. 「sort」- QR的顺序
     */
    @Override
    public Integer getSort() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.VIEW</code>. 「view」- 视图名
     */
    @Override
    public UiListQrRecord setView(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.VIEW</code>. 「view」- 视图名
     */
    @Override
    public String getView() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.POSITION</code>. 「position」-
     * 当前视图的模块位置，比页面低一个维度
     */
    @Override
    public UiListQrRecord setPosition(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.POSITION</code>. 「position」-
     * 当前视图的模块位置，比页面低一个维度
     */
    @Override
    public String getPosition() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.TITLE</code>. 「title」-
     * 视图标题，用户输入，可选择
     */
    @Override
    public UiListQrRecord setTitle(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.TITLE</code>. 「title」-
     * 视图标题，用户输入，可选择
     */
    @Override
    public String getTitle() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.PROJECTION</code>. 「projection」-
     * 该资源的列定义
     */
    @Override
    public UiListQrRecord setProjection(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.PROJECTION</code>. 「projection」-
     * 该资源的列定义
     */
    @Override
    public String getProjection() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.CRITERIA</code>. 「criteria」-
     * 该资源的行查询
     */
    @Override
    public UiListQrRecord setCriteria(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.CRITERIA</code>. 「criteria」-
     * 该资源的行查询
     */
    @Override
    public String getCriteria() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.ROWS</code>. 「rows」- 该资源针对保存的行进行过滤
     */
    @Override
    public UiListQrRecord setRows(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.ROWS</code>. 「rows」- 该资源针对保存的行进行过滤
     */
    @Override
    public String getRows() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.UI_CONFIG</code>. 「uiConfig」- 界面配置
     */
    @Override
    public UiListQrRecord setUiConfig(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.UI_CONFIG</code>. 「uiConfig」- 界面配置
     */
    @Override
    public String getUiConfig() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.QR_COMPONENT</code>.
     * 「qrComponent」- 查询条件专用组件
     */
    @Override
    public UiListQrRecord setQrComponent(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.QR_COMPONENT</code>.
     * 「qrComponent」- 查询条件专用组件
     */
    @Override
    public String getQrComponent() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.QR_CONFIG</code>. 「qrConfig」-
     * 查询组件专用配置
     */
    @Override
    public UiListQrRecord setQrConfig(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.QR_CONFIG</code>. 「qrConfig」-
     * 查询组件专用配置
     */
    @Override
    public String getQrConfig() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    @Override
    public UiListQrRecord setSigma(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public UiListQrRecord setLanguage(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public UiListQrRecord setActive(Boolean value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    @Override
    public UiListQrRecord setMetadata(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public UiListQrRecord setCreatedAt(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public UiListQrRecord setCreatedBy(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public UiListQrRecord setUpdatedAt(LocalDateTime value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(19);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST_QR.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public UiListQrRecord setUpdatedBy(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST_QR.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(20);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record21 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row21<String, String, String, Integer, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row21) super.fieldsRow();
    }

    @Override
    public Row21<String, String, String, Integer, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row21) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return UiListQr.UI_LIST_QR.KEY;
    }

    @Override
    public Field<String> field2() {
        return UiListQr.UI_LIST_QR.NAME;
    }

    @Override
    public Field<String> field3() {
        return UiListQr.UI_LIST_QR.CODE;
    }

    @Override
    public Field<Integer> field4() {
        return UiListQr.UI_LIST_QR.SORT;
    }

    @Override
    public Field<String> field5() {
        return UiListQr.UI_LIST_QR.VIEW;
    }

    @Override
    public Field<String> field6() {
        return UiListQr.UI_LIST_QR.POSITION;
    }

    @Override
    public Field<String> field7() {
        return UiListQr.UI_LIST_QR.TITLE;
    }

    @Override
    public Field<String> field8() {
        return UiListQr.UI_LIST_QR.PROJECTION;
    }

    @Override
    public Field<String> field9() {
        return UiListQr.UI_LIST_QR.CRITERIA;
    }

    @Override
    public Field<String> field10() {
        return UiListQr.UI_LIST_QR.ROWS;
    }

    @Override
    public Field<String> field11() {
        return UiListQr.UI_LIST_QR.UI_CONFIG;
    }

    @Override
    public Field<String> field12() {
        return UiListQr.UI_LIST_QR.QR_COMPONENT;
    }

    @Override
    public Field<String> field13() {
        return UiListQr.UI_LIST_QR.QR_CONFIG;
    }

    @Override
    public Field<String> field14() {
        return UiListQr.UI_LIST_QR.SIGMA;
    }

    @Override
    public Field<String> field15() {
        return UiListQr.UI_LIST_QR.LANGUAGE;
    }

    @Override
    public Field<Boolean> field16() {
        return UiListQr.UI_LIST_QR.ACTIVE;
    }

    @Override
    public Field<String> field17() {
        return UiListQr.UI_LIST_QR.METADATA;
    }

    @Override
    public Field<LocalDateTime> field18() {
        return UiListQr.UI_LIST_QR.CREATED_AT;
    }

    @Override
    public Field<String> field19() {
        return UiListQr.UI_LIST_QR.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field20() {
        return UiListQr.UI_LIST_QR.UPDATED_AT;
    }

    @Override
    public Field<String> field21() {
        return UiListQr.UI_LIST_QR.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public Integer component4() {
        return getSort();
    }

    @Override
    public String component5() {
        return getView();
    }

    @Override
    public String component6() {
        return getPosition();
    }

    @Override
    public String component7() {
        return getTitle();
    }

    @Override
    public String component8() {
        return getProjection();
    }

    @Override
    public String component9() {
        return getCriteria();
    }

    @Override
    public String component10() {
        return getRows();
    }

    @Override
    public String component11() {
        return getUiConfig();
    }

    @Override
    public String component12() {
        return getQrComponent();
    }

    @Override
    public String component13() {
        return getQrConfig();
    }

    @Override
    public String component14() {
        return getSigma();
    }

    @Override
    public String component15() {
        return getLanguage();
    }

    @Override
    public Boolean component16() {
        return getActive();
    }

    @Override
    public String component17() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component18() {
        return getCreatedAt();
    }

    @Override
    public String component19() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component20() {
        return getUpdatedAt();
    }

    @Override
    public String component21() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public Integer value4() {
        return getSort();
    }

    @Override
    public String value5() {
        return getView();
    }

    @Override
    public String value6() {
        return getPosition();
    }

    @Override
    public String value7() {
        return getTitle();
    }

    @Override
    public String value8() {
        return getProjection();
    }

    @Override
    public String value9() {
        return getCriteria();
    }

    @Override
    public String value10() {
        return getRows();
    }

    @Override
    public String value11() {
        return getUiConfig();
    }

    @Override
    public String value12() {
        return getQrComponent();
    }

    @Override
    public String value13() {
        return getQrConfig();
    }

    @Override
    public String value14() {
        return getSigma();
    }

    @Override
    public String value15() {
        return getLanguage();
    }

    @Override
    public Boolean value16() {
        return getActive();
    }

    @Override
    public String value17() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value18() {
        return getCreatedAt();
    }

    @Override
    public String value19() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value20() {
        return getUpdatedAt();
    }

    @Override
    public String value21() {
        return getUpdatedBy();
    }

    @Override
    public UiListQrRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public UiListQrRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UiListQrRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public UiListQrRecord value4(Integer value) {
        setSort(value);
        return this;
    }

    @Override
    public UiListQrRecord value5(String value) {
        setView(value);
        return this;
    }

    @Override
    public UiListQrRecord value6(String value) {
        setPosition(value);
        return this;
    }

    @Override
    public UiListQrRecord value7(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public UiListQrRecord value8(String value) {
        setProjection(value);
        return this;
    }

    @Override
    public UiListQrRecord value9(String value) {
        setCriteria(value);
        return this;
    }

    @Override
    public UiListQrRecord value10(String value) {
        setRows(value);
        return this;
    }

    @Override
    public UiListQrRecord value11(String value) {
        setUiConfig(value);
        return this;
    }

    @Override
    public UiListQrRecord value12(String value) {
        setQrComponent(value);
        return this;
    }

    @Override
    public UiListQrRecord value13(String value) {
        setQrConfig(value);
        return this;
    }

    @Override
    public UiListQrRecord value14(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public UiListQrRecord value15(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public UiListQrRecord value16(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public UiListQrRecord value17(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public UiListQrRecord value18(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UiListQrRecord value19(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public UiListQrRecord value20(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UiListQrRecord value21(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public UiListQrRecord values(String value1, String value2, String value3, Integer value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, String value14, String value15, Boolean value16, String value17, LocalDateTime value18, String value19, LocalDateTime value20, String value21) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUiListQr from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setSort(from.getSort());
        setView(from.getView());
        setPosition(from.getPosition());
        setTitle(from.getTitle());
        setProjection(from.getProjection());
        setCriteria(from.getCriteria());
        setRows(from.getRows());
        setUiConfig(from.getUiConfig());
        setQrComponent(from.getQrComponent());
        setQrConfig(from.getQrConfig());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IUiListQr> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UiListQrRecord
     */
    public UiListQrRecord() {
        super(UiListQr.UI_LIST_QR);
    }

    /**
     * Create a detached, initialised UiListQrRecord
     */
    public UiListQrRecord(String key, String name, String code, Integer sort, String view, String position, String title, String projection, String criteria, String rows, String uiConfig, String qrComponent, String qrConfig, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(UiListQr.UI_LIST_QR);

        setKey(key);
        setName(name);
        setCode(code);
        setSort(sort);
        setView(view);
        setPosition(position);
        setTitle(title);
        setProjection(projection);
        setCriteria(criteria);
        setRows(rows);
        setUiConfig(uiConfig);
        setQrComponent(qrComponent);
        setQrConfig(qrConfig);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised UiListQrRecord
     */
    public UiListQrRecord(cn.vertxup.ui.domain.tables.pojos.UiListQr value) {
        super(UiListQr.UI_LIST_QR);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setSort(value.getSort());
            setView(value.getView());
            setPosition(value.getPosition());
            setTitle(value.getTitle());
            setProjection(value.getProjection());
            setCriteria(value.getCriteria());
            setRows(value.getRows());
            setUiConfig(value.getUiConfig());
            setQrComponent(value.getQrComponent());
            setQrConfig(value.getQrConfig());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public UiListQrRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
