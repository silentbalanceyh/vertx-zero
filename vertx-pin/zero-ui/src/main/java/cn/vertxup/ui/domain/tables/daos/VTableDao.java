/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ui.domain.tables.daos;


import cn.vertxup.ui.domain.tables.VTable;
import cn.vertxup.ui.domain.tables.records.VTableRecord;
import io.github.jklingsporn.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.github.jklingsporn.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import org.jooq.Configuration;

import java.util.Collection;
import java.util.List;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VTableDao extends AbstractVertxDAO<VTableRecord, cn.vertxup.ui.domain.tables.pojos.VTable, String, Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>>, Future<cn.vertxup.ui.domain.tables.pojos.VTable>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<VTableRecord,cn.vertxup.ui.domain.tables.pojos.VTable,String> {

        /**
     * @param configuration The Configuration used for rendering and query
     * execution.
     * @param vertx the vertx instance
     */
        public VTableDao(Configuration configuration, io.vertx.core.Vertx vertx) {
                super(VTable.V_TABLE, cn.vertxup.ui.domain.tables.pojos.VTable.class, new JDBCClassicQueryExecutor<VTableRecord,cn.vertxup.ui.domain.tables.pojos.VTable,String>(configuration,cn.vertxup.ui.domain.tables.pojos.VTable.class,vertx));
        }

        @Override
        protected String getId(cn.vertxup.ui.domain.tables.pojos.VTable object) {
                return object.getKey();
        }

        /**
     * Find records that have <code>BORDERED IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByBordered(Collection<Boolean> values) {
                return findManyByCondition(VTable.V_TABLE.BORDERED.in(values));
        }

        /**
     * Find records that have <code>BORDERED IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByBordered(Collection<Boolean> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.BORDERED.in(values),limit);
        }

        /**
     * Find records that have <code>SIZE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyBySize(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.SIZE.in(values));
        }

        /**
     * Find records that have <code>SIZE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyBySize(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.SIZE.in(values),limit);
        }

        /**
     * Find records that have <code>CLASS_NAME IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByClassName(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.CLASS_NAME.in(values));
        }

        /**
     * Find records that have <code>CLASS_NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByClassName(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.CLASS_NAME.in(values),limit);
        }

        /**
     * Find records that have <code>TOTAL_REPORT IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByTotalReport(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.TOTAL_REPORT.in(values));
        }

        /**
     * Find records that have <code>TOTAL_REPORT IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByTotalReport(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.TOTAL_REPORT.in(values),limit);
        }

        /**
     * Find records that have <code>TOTAL_SELECTED IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByTotalSelected(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.TOTAL_SELECTED.in(values));
        }

        /**
     * Find records that have <code>TOTAL_SELECTED IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByTotalSelected(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.TOTAL_SELECTED.in(values),limit);
        }

        /**
     * Find records that have <code>ROW_DOUBLE_CLICK IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByRowDoubleClick(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.ROW_DOUBLE_CLICK.in(values));
        }

        /**
     * Find records that have <code>ROW_DOUBLE_CLICK IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByRowDoubleClick(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.ROW_DOUBLE_CLICK.in(values),limit);
        }

        /**
     * Find records that have <code>ROW_CLICK IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByRowClick(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.ROW_CLICK.in(values));
        }

        /**
     * Find records that have <code>ROW_CLICK IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByRowClick(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.ROW_CLICK.in(values),limit);
        }

        /**
     * Find records that have <code>ROW_CONTEXT_MENU IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByRowContextMenu(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.ROW_CONTEXT_MENU.in(values));
        }

        /**
     * Find records that have <code>ROW_CONTEXT_MENU IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByRowContextMenu(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.ROW_CONTEXT_MENU.in(values),limit);
        }

        /**
     * Find records that have <code>ROW_MOUSE_ENTER IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByRowMouseEnter(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.ROW_MOUSE_ENTER.in(values));
        }

        /**
     * Find records that have <code>ROW_MOUSE_ENTER IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByRowMouseEnter(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.ROW_MOUSE_ENTER.in(values),limit);
        }

        /**
     * Find records that have <code>ROW_MOUSE_LEAVE IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByRowMouseLeave(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.ROW_MOUSE_LEAVE.in(values));
        }

        /**
     * Find records that have <code>ROW_MOUSE_LEAVE IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByRowMouseLeave(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.ROW_MOUSE_LEAVE.in(values),limit);
        }

        /**
     * Find records that have <code>OP_TITLE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByOpTitle(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.OP_TITLE.in(values));
        }

        /**
     * Find records that have <code>OP_TITLE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByOpTitle(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.OP_TITLE.in(values),limit);
        }

        /**
     * Find records that have <code>OP_DATA_INDEX IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByOpDataIndex(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.OP_DATA_INDEX.in(values));
        }

        /**
     * Find records that have <code>OP_DATA_INDEX IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByOpDataIndex(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.OP_DATA_INDEX.in(values),limit);
        }

        /**
     * Find records that have <code>OP_FIXED IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByOpFixed(Collection<Boolean> values) {
                return findManyByCondition(VTable.V_TABLE.OP_FIXED.in(values));
        }

        /**
     * Find records that have <code>OP_FIXED IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByOpFixed(Collection<Boolean> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.OP_FIXED.in(values),limit);
        }

        /**
     * Find records that have <code>OP_CONFIG IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByOpConfig(Collection<String> values) {
                return findManyByCondition(VTable.V_TABLE.OP_CONFIG.in(values));
        }

        /**
     * Find records that have <code>OP_CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.ui.domain.tables.pojos.VTable>> findManyByOpConfig(Collection<String> values, int limit) {
                return findManyByCondition(VTable.V_TABLE.OP_CONFIG.in(values),limit);
        }

        @Override
        public JDBCClassicQueryExecutor<VTableRecord,cn.vertxup.ui.domain.tables.pojos.VTable,String> queryExecutor(){
                return (JDBCClassicQueryExecutor<VTableRecord,cn.vertxup.ui.domain.tables.pojos.VTable,String>) super.queryExecutor();
        }
}
