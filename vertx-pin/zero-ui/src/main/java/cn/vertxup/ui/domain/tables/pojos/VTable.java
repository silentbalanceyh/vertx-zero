/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ui.domain.tables.pojos;


import cn.vertxup.ui.domain.tables.interfaces.IVTable;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VTable implements VertxPojo, IVTable {

    private static final long serialVersionUID = 1L;

    private String  key;
    private Boolean bordered;
    private String  size;
    private String  className;
    private String  totalReport;
    private String  totalSelected;
    private String  rowDoubleClick;
    private String  rowClick;
    private String  rowContextMenu;
    private String  rowMouseEnter;
    private String  rowMouseLeave;
    private String  opTitle;
    private String  opDataIndex;
    private Boolean opFixed;
    private String  opConfig;

    public VTable() {}

    public VTable(IVTable value) {
        this.key = value.getKey();
        this.bordered = value.getBordered();
        this.size = value.getSize();
        this.className = value.getClassName();
        this.totalReport = value.getTotalReport();
        this.totalSelected = value.getTotalSelected();
        this.rowDoubleClick = value.getRowDoubleClick();
        this.rowClick = value.getRowClick();
        this.rowContextMenu = value.getRowContextMenu();
        this.rowMouseEnter = value.getRowMouseEnter();
        this.rowMouseLeave = value.getRowMouseLeave();
        this.opTitle = value.getOpTitle();
        this.opDataIndex = value.getOpDataIndex();
        this.opFixed = value.getOpFixed();
        this.opConfig = value.getOpConfig();
    }

    public VTable(
        String  key,
        Boolean bordered,
        String  size,
        String  className,
        String  totalReport,
        String  totalSelected,
        String  rowDoubleClick,
        String  rowClick,
        String  rowContextMenu,
        String  rowMouseEnter,
        String  rowMouseLeave,
        String  opTitle,
        String  opDataIndex,
        Boolean opFixed,
        String  opConfig
    ) {
        this.key = key;
        this.bordered = bordered;
        this.size = size;
        this.className = className;
        this.totalReport = totalReport;
        this.totalSelected = totalSelected;
        this.rowDoubleClick = rowDoubleClick;
        this.rowClick = rowClick;
        this.rowContextMenu = rowContextMenu;
        this.rowMouseEnter = rowMouseEnter;
        this.rowMouseLeave = rowMouseLeave;
        this.opTitle = opTitle;
        this.opDataIndex = opDataIndex;
        this.opFixed = opFixed;
        this.opConfig = opConfig;
    }

        public VTable(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.KEY</code>. 「key」- 表选项主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.KEY</code>. 「key」- 表选项主键
     */
    @Override
    public VTable setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.BORDERED</code>. 「bordered」- 是否带表框
     */
    @Override
    public Boolean getBordered() {
        return this.bordered;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.BORDERED</code>. 「bordered」- 是否带表框
     */
    @Override
    public VTable setBordered(Boolean bordered) {
        this.bordered = bordered;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.SIZE</code>. 「size」- 表格尺寸
     */
    @Override
    public String getSize() {
        return this.size;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.SIZE</code>. 「size」- 表格尺寸
     */
    @Override
    public VTable setSize(String size) {
        this.size = size;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.CLASS_NAME</code>. 「className」- CSS属性
     */
    @Override
    public String getClassName() {
        return this.className;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.CLASS_NAME</code>. 「className」- CSS属性
     */
    @Override
    public VTable setClassName(String className) {
        this.className = className;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.TOTAL_REPORT</code>. 「totalReport」-
     * total.report - 文字: 总共多少条统计
     */
    @Override
    public String getTotalReport() {
        return this.totalReport;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.TOTAL_REPORT</code>. 「totalReport」-
     * total.report - 文字: 总共多少条统计
     */
    @Override
    public VTable setTotalReport(String totalReport) {
        this.totalReport = totalReport;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.TOTAL_SELECTED</code>.
     * 「totalSelected」- total.selected - 文字: 选择了多少条
     */
    @Override
    public String getTotalSelected() {
        return this.totalSelected;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.TOTAL_SELECTED</code>.
     * 「totalSelected」- total.selected - 文字: 选择了多少条
     */
    @Override
    public VTable setTotalSelected(String totalSelected) {
        this.totalSelected = totalSelected;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.ROW_DOUBLE_CLICK</code>.
     * 「rowDoubleClick」- row.onDoubleClick - 双击事件名
     */
    @Override
    public String getRowDoubleClick() {
        return this.rowDoubleClick;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.ROW_DOUBLE_CLICK</code>.
     * 「rowDoubleClick」- row.onDoubleClick - 双击事件名
     */
    @Override
    public VTable setRowDoubleClick(String rowDoubleClick) {
        this.rowDoubleClick = rowDoubleClick;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.ROW_CLICK</code>. 「rowClick」-
     * row.onClick - 单击事件名
     */
    @Override
    public String getRowClick() {
        return this.rowClick;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.ROW_CLICK</code>. 「rowClick」-
     * row.onClick - 单击事件名
     */
    @Override
    public VTable setRowClick(String rowClick) {
        this.rowClick = rowClick;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.ROW_CONTEXT_MENU</code>.
     * 「rowContextMenu」- row.onContextMenu - 右键菜单事件名
     */
    @Override
    public String getRowContextMenu() {
        return this.rowContextMenu;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.ROW_CONTEXT_MENU</code>.
     * 「rowContextMenu」- row.onContextMenu - 右键菜单事件名
     */
    @Override
    public VTable setRowContextMenu(String rowContextMenu) {
        this.rowContextMenu = rowContextMenu;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.ROW_MOUSE_ENTER</code>.
     * 「rowMouseEnter」- row.onMouseEnter - 鼠标左键事件名
     */
    @Override
    public String getRowMouseEnter() {
        return this.rowMouseEnter;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.ROW_MOUSE_ENTER</code>.
     * 「rowMouseEnter」- row.onMouseEnter - 鼠标左键事件名
     */
    @Override
    public VTable setRowMouseEnter(String rowMouseEnter) {
        this.rowMouseEnter = rowMouseEnter;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.ROW_MOUSE_LEAVE</code>.
     * 「rowMouseLeave」- row.onMouseLeave - 鼠标移开事件名
     */
    @Override
    public String getRowMouseLeave() {
        return this.rowMouseLeave;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.ROW_MOUSE_LEAVE</code>.
     * 「rowMouseLeave」- row.onMouseLeave - 鼠标移开事件名
     */
    @Override
    public VTable setRowMouseLeave(String rowMouseLeave) {
        this.rowMouseLeave = rowMouseLeave;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.OP_TITLE</code>. 「opTitle」-
     * columns/[0]/title, 执行列标题
     */
    @Override
    public String getOpTitle() {
        return this.opTitle;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.OP_TITLE</code>. 「opTitle」-
     * columns/[0]/title, 执行列标题
     */
    @Override
    public VTable setOpTitle(String opTitle) {
        this.opTitle = opTitle;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.OP_DATA_INDEX</code>. 「opDataIndex」-
     * columns/[0]/dataIndex, 执行列标题
     */
    @Override
    public String getOpDataIndex() {
        return this.opDataIndex;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.OP_DATA_INDEX</code>. 「opDataIndex」-
     * columns/[0]/dataIndex, 执行列标题
     */
    @Override
    public VTable setOpDataIndex(String opDataIndex) {
        this.opDataIndex = opDataIndex;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.OP_FIXED</code>. 「opFixed」-
     * columns/[0]/fixed，执行列左还是右
     */
    @Override
    public Boolean getOpFixed() {
        return this.opFixed;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.OP_FIXED</code>. 「opFixed」-
     * columns/[0]/fixed，执行列左还是右
     */
    @Override
    public VTable setOpFixed(Boolean opFixed) {
        this.opFixed = opFixed;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_TABLE.OP_CONFIG</code>. 「opConfig」-
     * columns/[0]/$option, 执行类对应配置，配置按钮
     */
    @Override
    public String getOpConfig() {
        return this.opConfig;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_TABLE.OP_CONFIG</code>. 「opConfig」-
     * columns/[0]/$option, 执行类对应配置，配置按钮
     */
    @Override
    public VTable setOpConfig(String opConfig) {
        this.opConfig = opConfig;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("VTable (");

        sb.append(key);
        sb.append(", ").append(bordered);
        sb.append(", ").append(size);
        sb.append(", ").append(className);
        sb.append(", ").append(totalReport);
        sb.append(", ").append(totalSelected);
        sb.append(", ").append(rowDoubleClick);
        sb.append(", ").append(rowClick);
        sb.append(", ").append(rowContextMenu);
        sb.append(", ").append(rowMouseEnter);
        sb.append(", ").append(rowMouseLeave);
        sb.append(", ").append(opTitle);
        sb.append(", ").append(opDataIndex);
        sb.append(", ").append(opFixed);
        sb.append(", ").append(opConfig);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IVTable from) {
        setKey(from.getKey());
        setBordered(from.getBordered());
        setSize(from.getSize());
        setClassName(from.getClassName());
        setTotalReport(from.getTotalReport());
        setTotalSelected(from.getTotalSelected());
        setRowDoubleClick(from.getRowDoubleClick());
        setRowClick(from.getRowClick());
        setRowContextMenu(from.getRowContextMenu());
        setRowMouseEnter(from.getRowMouseEnter());
        setRowMouseLeave(from.getRowMouseLeave());
        setOpTitle(from.getOpTitle());
        setOpDataIndex(from.getOpDataIndex());
        setOpFixed(from.getOpFixed());
        setOpConfig(from.getOpConfig());
    }

    @Override
    public <E extends IVTable> E into(E into) {
        into.from(this);
        return into;
    }
}
