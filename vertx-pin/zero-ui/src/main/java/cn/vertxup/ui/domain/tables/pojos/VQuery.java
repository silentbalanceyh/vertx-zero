/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ui.domain.tables.pojos;


import cn.vertxup.ui.domain.tables.interfaces.IVQuery;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VQuery implements VertxPojo, IVQuery {

    private static final long serialVersionUID = 1L;

    private String key;
    private String projection;
    private String pager;
    private String sorter;
    private String criteria;

    public VQuery() {}

    public VQuery(IVQuery value) {
        this.key = value.getKey();
        this.projection = value.getProjection();
        this.pager = value.getPager();
        this.sorter = value.getSorter();
        this.criteria = value.getCriteria();
    }

    public VQuery(
        String key,
        String projection,
        String pager,
        String sorter,
        String criteria
    ) {
        this.key = key;
        this.projection = projection;
        this.pager = pager;
        this.sorter = sorter;
        this.criteria = criteria;
    }

        public VQuery(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.V_QUERY.KEY</code>. 「key」- 选项主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_QUERY.KEY</code>. 「key」- 选项主键
     */
    @Override
    public VQuery setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_QUERY.PROJECTION</code>. 「projection」-
     * query/projection:[], 默认列过滤项
     */
    @Override
    public String getProjection() {
        return this.projection;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_QUERY.PROJECTION</code>. 「projection」-
     * query/projection:[], 默认列过滤项
     */
    @Override
    public VQuery setProjection(String projection) {
        this.projection = projection;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_QUERY.PAGER</code>. 「pager」-
     * query/pager:{}, 分页选项
     */
    @Override
    public String getPager() {
        return this.pager;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_QUERY.PAGER</code>. 「pager」-
     * query/pager:{}, 分页选项
     */
    @Override
    public VQuery setPager(String pager) {
        this.pager = pager;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_QUERY.SORTER</code>. 「sorter」-
     * query/sorter:[], 排序选项
     */
    @Override
    public String getSorter() {
        return this.sorter;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_QUERY.SORTER</code>. 「sorter」-
     * query/sorter:[], 排序选项
     */
    @Override
    public VQuery setSorter(String sorter) {
        this.sorter = sorter;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.V_QUERY.CRITERIA</code>. 「criteria」-
     * query/criteria:{}, 查询条件选项
     */
    @Override
    public String getCriteria() {
        return this.criteria;
    }

    /**
     * Setter for <code>DB_ETERNAL.V_QUERY.CRITERIA</code>. 「criteria」-
     * query/criteria:{}, 查询条件选项
     */
    @Override
    public VQuery setCriteria(String criteria) {
        this.criteria = criteria;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("VQuery (");

        sb.append(key);
        sb.append(", ").append(projection);
        sb.append(", ").append(pager);
        sb.append(", ").append(sorter);
        sb.append(", ").append(criteria);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IVQuery from) {
        setKey(from.getKey());
        setProjection(from.getProjection());
        setPager(from.getPager());
        setSorter(from.getSorter());
        setCriteria(from.getCriteria());
    }

    @Override
    public <E extends IVQuery> E into(E into) {
        into.from(this);
        return into;
    }
}
