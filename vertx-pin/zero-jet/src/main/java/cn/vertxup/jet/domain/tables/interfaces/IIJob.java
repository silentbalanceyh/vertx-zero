/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.jet.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.LocalTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IIJob extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.KEY</code>. 「key」- 任务ID
     */
    public IIJob setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.KEY</code>. 「key」- 任务ID
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.NAMESPACE</code>. 「namespace」- 任务所在名空间
     */
    public IIJob setNamespace(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.NAMESPACE</code>. 「namespace」- 任务所在名空间
     */
    public String getNamespace();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.NAME</code>. 「name」- 任务名称
     */
    public IIJob setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.NAME</code>. 「name」- 任务名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.CODE</code>. 「comment」- 任务编码
     */
    public IIJob setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.CODE</code>. 「comment」- 任务编码
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.GROUP</code>. 「group」- 任务组（按组查询），自由字符串
     */
    public IIJob setGroup(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.GROUP</code>. 「group」- 任务组（按组查询），自由字符串
     */
    public String getGroup();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.COMMENT</code>. 「comment」- 备注信息
     */
    public IIJob setComment(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.COMMENT</code>. 「comment」- 备注信息
     */
    public String getComment();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.ADDITIONAL</code>. 「additional」- 额外配置信息
     */
    public IIJob setAdditional(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.ADDITIONAL</code>. 「additional」- 额外配置信息
     */
    public String getAdditional();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.PROXY</code>. 「proxy」- 代理类，带有@On/@Off
     */
    public IIJob setProxy(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.PROXY</code>. 「proxy」- 代理类，带有@On/@Off
     */
    public String getProxy();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.THRESHOLD</code>. 「threshold」- 默认值 300
     * s，（秒为单位）
     */
    public IIJob setThreshold(Integer value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.THRESHOLD</code>. 「threshold」- 默认值 300
     * s，（秒为单位）
     */
    public Integer getThreshold();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.TYPE</code>. 「type」- 任务类型
     */
    public IIJob setType(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.TYPE</code>. 「type」- 任务类型
     */
    public String getType();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.RUN_AT</code>. 「runAt」- 定时任务中的JOB时间
     */
    public IIJob setRunAt(LocalTime value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.RUN_AT</code>. 「runAt」- 定时任务中的JOB时间
     */
    public LocalTime getRunAt();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.RUN_FORMULA</code>. 「runFormula」-
     * 运行周期专用的表达式
     */
    public IIJob setRunFormula(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.RUN_FORMULA</code>. 「runFormula」-
     * 运行周期专用的表达式
     */
    public String getRunFormula();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.DURATION</code>. 「duration」-
     * JOB的间隔时间，（秒为单位）
     */
    public IIJob setDuration(Long value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.DURATION</code>. 「duration」-
     * JOB的间隔时间，（秒为单位）
     */
    public Long getDuration();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.DURATION_COMPONENT</code>.
     * 「durationComponent」对应复杂调度问题
     */
    public IIJob setDurationComponent(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.DURATION_COMPONENT</code>.
     * 「durationComponent」对应复杂调度问题
     */
    public String getDurationComponent();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.DURATION_CONFIG</code>.
     * 「durationConfig」复杂调度配置
     */
    public IIJob setDurationConfig(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.DURATION_CONFIG</code>.
     * 「durationConfig」复杂调度配置
     */
    public String getDurationConfig();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.INCOME_COMPONENT</code>.
     * 「incomeComponent」对应income，必须是JobIncome，@On -&gt; income
     */
    public IIJob setIncomeComponent(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.INCOME_COMPONENT</code>.
     * 「incomeComponent」对应income，必须是JobIncome，@On -&gt; income
     */
    public String getIncomeComponent();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.INCOME_ADDRESS</code>.
     * 「incomeAddress」对应incomeAddress，字符串，@On -&gt; address
     */
    public IIJob setIncomeAddress(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.INCOME_ADDRESS</code>.
     * 「incomeAddress」对应incomeAddress，字符串，@On -&gt; address
     */
    public String getIncomeAddress();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.OUTCOME_COMPONENT</code>.
     * 「outcomeComponent」对应outcome，必须是JobOutcome，@Off -&gt; outcome
     */
    public IIJob setOutcomeComponent(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.OUTCOME_COMPONENT</code>.
     * 「outcomeComponent」对应outcome，必须是JobOutcome，@Off -&gt; outcome
     */
    public String getOutcomeComponent();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.OUTCOME_ADDRESS</code>.
     * 「outcomeAddress」对应outcomeAddress，字符串，@Off -&gt; address
     */
    public IIJob setOutcomeAddress(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.OUTCOME_ADDRESS</code>.
     * 「outcomeAddress」对应outcomeAddress，字符串，@Off -&gt; address
     */
    public String getOutcomeAddress();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.SERVICE_ID</code>. 「serviceId」- 关联的服务ID
     */
    public IIJob setServiceId(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.SERVICE_ID</code>. 「serviceId」- 关联的服务ID
     */
    public String getServiceId();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.SIGMA</code>. 「sigma」- 统一标识
     */
    public IIJob setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IIJob setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.ACTIVE</code>. 「active」- 是否启用
     */
    public IIJob setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.METADATA</code>. 「metadata」- 附加配置数据
     */
    public IIJob setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.METADATA</code>. 「metadata」- 附加配置数据
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IIJob setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IIJob setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IIJob setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.I_JOB.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IIJob setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.I_JOB.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IIJob
     */
    public void from(IIJob from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IIJob
     */
    public <E extends IIJob> E into(E into);

        @Override
        public default IIJob fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setNamespace,json::getString,"NAMESPACE","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setGroup,json::getString,"GROUP","java.lang.String");
                setOrThrow(this::setComment,json::getString,"COMMENT","java.lang.String");
                setOrThrow(this::setAdditional,json::getString,"ADDITIONAL","java.lang.String");
                setOrThrow(this::setProxy,json::getString,"PROXY","java.lang.String");
                setOrThrow(this::setThreshold,json::getInteger,"THRESHOLD","java.lang.Integer");
                setOrThrow(this::setType,json::getString,"TYPE","java.lang.String");
                setOrThrow(this::setRunAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalTime.parse(s);},"RUN_AT","java.time.LocalTime");
                setOrThrow(this::setRunFormula,json::getString,"RUN_FORMULA","java.lang.String");
                setOrThrow(this::setDuration,json::getLong,"DURATION","java.lang.Long");
                setOrThrow(this::setDurationComponent,json::getString,"DURATION_COMPONENT","java.lang.String");
                setOrThrow(this::setDurationConfig,json::getString,"DURATION_CONFIG","java.lang.String");
                setOrThrow(this::setIncomeComponent,json::getString,"INCOME_COMPONENT","java.lang.String");
                setOrThrow(this::setIncomeAddress,json::getString,"INCOME_ADDRESS","java.lang.String");
                setOrThrow(this::setOutcomeComponent,json::getString,"OUTCOME_COMPONENT","java.lang.String");
                setOrThrow(this::setOutcomeAddress,json::getString,"OUTCOME_ADDRESS","java.lang.String");
                setOrThrow(this::setServiceId,json::getString,"SERVICE_ID","java.lang.String");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAMESPACE",getNamespace());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("GROUP",getGroup());
                json.put("COMMENT",getComment());
                json.put("ADDITIONAL",getAdditional());
                json.put("PROXY",getProxy());
                json.put("THRESHOLD",getThreshold());
                json.put("TYPE",getType());
                json.put("RUN_AT",getRunAt()==null?null:getRunAt().toString());
                json.put("RUN_FORMULA",getRunFormula());
                json.put("DURATION",getDuration());
                json.put("DURATION_COMPONENT",getDurationComponent());
                json.put("DURATION_CONFIG",getDurationConfig());
                json.put("INCOME_COMPONENT",getIncomeComponent());
                json.put("INCOME_ADDRESS",getIncomeAddress());
                json.put("OUTCOME_COMPONENT",getOutcomeComponent());
                json.put("OUTCOME_ADDRESS",getOutcomeAddress());
                json.put("SERVICE_ID",getServiceId());
                json.put("SIGMA",getSigma());
                json.put("LANGUAGE",getLanguage());
                json.put("ACTIVE",getActive());
                json.put("METADATA",getMetadata());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
