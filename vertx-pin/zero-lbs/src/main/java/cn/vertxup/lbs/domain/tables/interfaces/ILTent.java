/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.lbs.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ILTent extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.KEY</code>. 「key」- 主键
     */
    public ILTent setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.KEY</code>. 「key」- 主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.NAME</code>. 「name」- 名称
     */
    public ILTent setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.NAME</code>. 「name」- 名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.CODE</code>. 「code」- 编码
     */
    public ILTent setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.CODE</code>. 「code」- 编码
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.CONTACT_PHONE</code>. 「contactPhone」-
     * 联系电话
     */
    public ILTent setContactPhone(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.CONTACT_PHONE</code>. 「contactPhone」-
     * 联系电话
     */
    public String getContactPhone();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.CONTACT_NAME</code>. 「contactName」-
     * 联系人姓名
     */
    public ILTent setContactName(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.CONTACT_NAME</code>. 「contactName」-
     * 联系人姓名
     */
    public String getContactName();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.METADATA</code>. 「metadata」- 附加配置
     */
    public ILTent setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.ORDER</code>. 「order」- 排序
     */
    public ILTent setOrder(Integer value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.ORDER</code>. 「order」- 排序
     */
    public Integer getOrder();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.LOCATION_ID</code>. 「locationId」-
     * 关联地址ID
     */
    public ILTent setLocationId(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.LOCATION_ID</code>. 「locationId」-
     * 关联地址ID
     */
    public String getLocationId();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.YARD_ID</code>. 「yardId」- 关联小区ID
     */
    public ILTent setYardId(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.YARD_ID</code>. 「yardId」- 关联小区ID
     */
    public String getYardId();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.ACTIVE</code>. 「active」- 是否启用
     */
    public ILTent setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.SIGMA</code>. 「sigma」- 统一标识
     */
    public ILTent setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public ILTent setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public ILTent setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public ILTent setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public ILTent setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.L_TENT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public ILTent setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.L_TENT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface ILTent
     */
    public void from(ILTent from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface ILTent
     */
    public <E extends ILTent> E into(E into);

        @Override
        public default ILTent fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setContactPhone,json::getString,"CONTACT_PHONE","java.lang.String");
                setOrThrow(this::setContactName,json::getString,"CONTACT_NAME","java.lang.String");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setOrder,json::getInteger,"ORDER","java.lang.Integer");
                setOrThrow(this::setLocationId,json::getString,"LOCATION_ID","java.lang.String");
                setOrThrow(this::setYardId,json::getString,"YARD_ID","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("CONTACT_PHONE",getContactPhone());
                json.put("CONTACT_NAME",getContactName());
                json.put("METADATA",getMetadata());
                json.put("ORDER",getOrder());
                json.put("LOCATION_ID",getLocationId());
                json.put("YARD_ID",getYardId());
                json.put("ACTIVE",getActive());
                json.put("SIGMA",getSigma());
                json.put("LANGUAGE",getLanguage());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
