/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ambient.domain.tables.records;


import cn.vertxup.ambient.domain.tables.XAttachment;
import cn.vertxup.ambient.domain.tables.interfaces.IXAttachment;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XAttachmentRecord extends UpdatableRecordImpl<XAttachmentRecord> implements VertxPojo, Record20<String, String, String, String, String, String, String, String, String, String, String, Integer, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IXAttachment {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.KEY</code>. 「key」- 附件的ID值
     */
    @Override
    public XAttachmentRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.KEY</code>. 「key」- 附件的ID值
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.STORE_WAY</code>. 「storeWay」-
     * 存储方式，BLOB / FILE / TPL / REMOTE
     */
    @Override
    public XAttachmentRecord setStoreWay(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.STORE_WAY</code>. 「storeWay」-
     * 存储方式，BLOB / FILE / TPL / REMOTE
     */
    @Override
    public String getStoreWay() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.STATUS</code>. 「status」-
     * 状态，PROGRESS / SUCCESS
     */
    @Override
    public XAttachmentRecord setStatus(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.STATUS</code>. 「status」-
     * 状态，PROGRESS / SUCCESS
     */
    @Override
    public String getStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.NAME</code>. 「name」- 文件名（带扩展名）
     */
    @Override
    public XAttachmentRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.NAME</code>. 「name」- 文件名（带扩展名）
     */
    @Override
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.FILE_NAME</code>. 「fileName」-
     * 原始文件名（不带扩展名）
     */
    @Override
    public XAttachmentRecord setFileName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.FILE_NAME</code>. 「fileName」-
     * 原始文件名（不带扩展名）
     */
    @Override
    public String getFileName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.FILE_KEY</code>. 「fileKey」-
     * TPL模式中的文件唯一的key（全局唯一）
     */
    @Override
    public XAttachmentRecord setFileKey(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.FILE_KEY</code>. 「fileKey」-
     * TPL模式中的文件唯一的key（全局唯一）
     */
    @Override
    public String getFileKey() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.FILE_URL</code>. 「fileUrl」-
     * 该文件的下载链接（全局唯一）
     */
    @Override
    public XAttachmentRecord setFileUrl(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.FILE_URL</code>. 「fileUrl」-
     * 该文件的下载链接（全局唯一）
     */
    @Override
    public String getFileUrl() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.FILE_PATH</code>. 「filePath」-
     * 该文件的存储地址，FILE时使用
     */
    @Override
    public XAttachmentRecord setFilePath(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.FILE_PATH</code>. 「filePath」-
     * 该文件的存储地址，FILE时使用
     */
    @Override
    public String getFilePath() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.EXTENSION</code>. 「extension」-
     * 文件扩展名
     */
    @Override
    public XAttachmentRecord setExtension(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.EXTENSION</code>. 「extension」-
     * 文件扩展名
     */
    @Override
    public String getExtension() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.MODULE</code>. 「module」- 业务标识
     */
    @Override
    public XAttachmentRecord setModule(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.MODULE</code>. 「module」- 业务标识
     */
    @Override
    public String getModule() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.MIME</code>. 「mime」- 该文件的MIME类型
     */
    @Override
    public XAttachmentRecord setMime(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.MIME</code>. 「mime」- 该文件的MIME类型
     */
    @Override
    public String getMime() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.SIZE</code>. 「size」- 该文件的尺寸
     */
    @Override
    public XAttachmentRecord setSize(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.SIZE</code>. 「size」- 该文件的尺寸
     */
    @Override
    public Integer getSize() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XAttachmentRecord setActive(Boolean value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public XAttachmentRecord setSigma(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public XAttachmentRecord setMetadata(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.METADATA</code>. 「metadata」-
     * 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public XAttachmentRecord setLanguage(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public XAttachmentRecord setCreatedAt(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public XAttachmentRecord setCreatedBy(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public XAttachmentRecord setUpdatedAt(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ATTACHMENT.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public XAttachmentRecord setUpdatedBy(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ATTACHMENT.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<String, String, String, String, String, String, String, String, String, String, String, Integer, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<String, String, String, String, String, String, String, String, String, String, String, Integer, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return XAttachment.X_ATTACHMENT.KEY;
    }

    @Override
    public Field<String> field2() {
        return XAttachment.X_ATTACHMENT.STORE_WAY;
    }

    @Override
    public Field<String> field3() {
        return XAttachment.X_ATTACHMENT.STATUS;
    }

    @Override
    public Field<String> field4() {
        return XAttachment.X_ATTACHMENT.NAME;
    }

    @Override
    public Field<String> field5() {
        return XAttachment.X_ATTACHMENT.FILE_NAME;
    }

    @Override
    public Field<String> field6() {
        return XAttachment.X_ATTACHMENT.FILE_KEY;
    }

    @Override
    public Field<String> field7() {
        return XAttachment.X_ATTACHMENT.FILE_URL;
    }

    @Override
    public Field<String> field8() {
        return XAttachment.X_ATTACHMENT.FILE_PATH;
    }

    @Override
    public Field<String> field9() {
        return XAttachment.X_ATTACHMENT.EXTENSION;
    }

    @Override
    public Field<String> field10() {
        return XAttachment.X_ATTACHMENT.MODULE;
    }

    @Override
    public Field<String> field11() {
        return XAttachment.X_ATTACHMENT.MIME;
    }

    @Override
    public Field<Integer> field12() {
        return XAttachment.X_ATTACHMENT.SIZE;
    }

    @Override
    public Field<Boolean> field13() {
        return XAttachment.X_ATTACHMENT.ACTIVE;
    }

    @Override
    public Field<String> field14() {
        return XAttachment.X_ATTACHMENT.SIGMA;
    }

    @Override
    public Field<String> field15() {
        return XAttachment.X_ATTACHMENT.METADATA;
    }

    @Override
    public Field<String> field16() {
        return XAttachment.X_ATTACHMENT.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return XAttachment.X_ATTACHMENT.CREATED_AT;
    }

    @Override
    public Field<String> field18() {
        return XAttachment.X_ATTACHMENT.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field19() {
        return XAttachment.X_ATTACHMENT.UPDATED_AT;
    }

    @Override
    public Field<String> field20() {
        return XAttachment.X_ATTACHMENT.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getStoreWay();
    }

    @Override
    public String component3() {
        return getStatus();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getFileName();
    }

    @Override
    public String component6() {
        return getFileKey();
    }

    @Override
    public String component7() {
        return getFileUrl();
    }

    @Override
    public String component8() {
        return getFilePath();
    }

    @Override
    public String component9() {
        return getExtension();
    }

    @Override
    public String component10() {
        return getModule();
    }

    @Override
    public String component11() {
        return getMime();
    }

    @Override
    public Integer component12() {
        return getSize();
    }

    @Override
    public Boolean component13() {
        return getActive();
    }

    @Override
    public String component14() {
        return getSigma();
    }

    @Override
    public String component15() {
        return getMetadata();
    }

    @Override
    public String component16() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component17() {
        return getCreatedAt();
    }

    @Override
    public String component18() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component19() {
        return getUpdatedAt();
    }

    @Override
    public String component20() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getStoreWay();
    }

    @Override
    public String value3() {
        return getStatus();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getFileName();
    }

    @Override
    public String value6() {
        return getFileKey();
    }

    @Override
    public String value7() {
        return getFileUrl();
    }

    @Override
    public String value8() {
        return getFilePath();
    }

    @Override
    public String value9() {
        return getExtension();
    }

    @Override
    public String value10() {
        return getModule();
    }

    @Override
    public String value11() {
        return getMime();
    }

    @Override
    public Integer value12() {
        return getSize();
    }

    @Override
    public Boolean value13() {
        return getActive();
    }

    @Override
    public String value14() {
        return getSigma();
    }

    @Override
    public String value15() {
        return getMetadata();
    }

    @Override
    public String value16() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value17() {
        return getCreatedAt();
    }

    @Override
    public String value18() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value19() {
        return getUpdatedAt();
    }

    @Override
    public String value20() {
        return getUpdatedBy();
    }

    @Override
    public XAttachmentRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public XAttachmentRecord value2(String value) {
        setStoreWay(value);
        return this;
    }

    @Override
    public XAttachmentRecord value3(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public XAttachmentRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public XAttachmentRecord value5(String value) {
        setFileName(value);
        return this;
    }

    @Override
    public XAttachmentRecord value6(String value) {
        setFileKey(value);
        return this;
    }

    @Override
    public XAttachmentRecord value7(String value) {
        setFileUrl(value);
        return this;
    }

    @Override
    public XAttachmentRecord value8(String value) {
        setFilePath(value);
        return this;
    }

    @Override
    public XAttachmentRecord value9(String value) {
        setExtension(value);
        return this;
    }

    @Override
    public XAttachmentRecord value10(String value) {
        setModule(value);
        return this;
    }

    @Override
    public XAttachmentRecord value11(String value) {
        setMime(value);
        return this;
    }

    @Override
    public XAttachmentRecord value12(Integer value) {
        setSize(value);
        return this;
    }

    @Override
    public XAttachmentRecord value13(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public XAttachmentRecord value14(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public XAttachmentRecord value15(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public XAttachmentRecord value16(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public XAttachmentRecord value17(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public XAttachmentRecord value18(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public XAttachmentRecord value19(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public XAttachmentRecord value20(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public XAttachmentRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, Integer value12, Boolean value13, String value14, String value15, String value16, LocalDateTime value17, String value18, LocalDateTime value19, String value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IXAttachment from) {
        setKey(from.getKey());
        setStoreWay(from.getStoreWay());
        setStatus(from.getStatus());
        setName(from.getName());
        setFileName(from.getFileName());
        setFileKey(from.getFileKey());
        setFileUrl(from.getFileUrl());
        setFilePath(from.getFilePath());
        setExtension(from.getExtension());
        setModule(from.getModule());
        setMime(from.getMime());
        setSize(from.getSize());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IXAttachment> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XAttachmentRecord
     */
    public XAttachmentRecord() {
        super(XAttachment.X_ATTACHMENT);
    }

    /**
     * Create a detached, initialised XAttachmentRecord
     */
    public XAttachmentRecord(String key, String storeWay, String status, String name, String fileName, String fileKey, String fileUrl, String filePath, String extension, String module, String mime, Integer size, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(XAttachment.X_ATTACHMENT);

        setKey(key);
        setStoreWay(storeWay);
        setStatus(status);
        setName(name);
        setFileName(fileName);
        setFileKey(fileKey);
        setFileUrl(fileUrl);
        setFilePath(filePath);
        setExtension(extension);
        setModule(module);
        setMime(mime);
        setSize(size);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised XAttachmentRecord
     */
    public XAttachmentRecord(cn.vertxup.ambient.domain.tables.pojos.XAttachment value) {
        super(XAttachment.X_ATTACHMENT);

        if (value != null) {
            setKey(value.getKey());
            setStoreWay(value.getStoreWay());
            setStatus(value.getStatus());
            setName(value.getName());
            setFileName(value.getFileName());
            setFileKey(value.getFileKey());
            setFileUrl(value.getFileUrl());
            setFilePath(value.getFilePath());
            setExtension(value.getExtension());
            setModule(value.getModule());
            setMime(value.getMime());
            setSize(value.getSize());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public XAttachmentRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
