/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ambient.domain.tables.pojos;


import cn.vertxup.ambient.domain.tables.interfaces.IXMenu;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XMenu implements VertxPojo, IXMenu {

    private static final long serialVersionUID = 1L;

    private String        key;
    private String        name;
    private String        icon;
    private String        text;
    private String        uri;
    private String        type;
    private Long          order;
    private Long          level;
    private String        parentId;
    private String        appId;
    private Boolean       active;
    private String        sigma;
    private String        metadata;
    private String        language;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public XMenu() {}

    public XMenu(IXMenu value) {
        this.key = value.getKey();
        this.name = value.getName();
        this.icon = value.getIcon();
        this.text = value.getText();
        this.uri = value.getUri();
        this.type = value.getType();
        this.order = value.getOrder();
        this.level = value.getLevel();
        this.parentId = value.getParentId();
        this.appId = value.getAppId();
        this.active = value.getActive();
        this.sigma = value.getSigma();
        this.metadata = value.getMetadata();
        this.language = value.getLanguage();
        this.createdAt = value.getCreatedAt();
        this.createdBy = value.getCreatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.updatedBy = value.getUpdatedBy();
    }

    public XMenu(
        String        key,
        String        name,
        String        icon,
        String        text,
        String        uri,
        String        type,
        Long          order,
        Long          level,
        String        parentId,
        String        appId,
        Boolean       active,
        String        sigma,
        String        metadata,
        String        language,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.name = name;
        this.icon = icon;
        this.text = text;
        this.uri = uri;
        this.type = type;
        this.order = order;
        this.level = level;
        this.parentId = parentId;
        this.appId = appId;
        this.active = active;
        this.sigma = sigma;
        this.metadata = metadata;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

        public XMenu(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.KEY</code>. 「key」- 菜单主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.KEY</code>. 「key」- 菜单主键
     */
    @Override
    public XMenu setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.NAME</code>. 「name」- 菜单名称
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.NAME</code>. 「name」- 菜单名称
     */
    @Override
    public XMenu setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.ICON</code>. 「icon」- 菜单使用的icon
     */
    @Override
    public String getIcon() {
        return this.icon;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.ICON</code>. 「icon」- 菜单使用的icon
     */
    @Override
    public XMenu setIcon(String icon) {
        this.icon = icon;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.TEXT</code>. 「text」- 菜单显示文字
     */
    @Override
    public String getText() {
        return this.text;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.TEXT</code>. 「text」- 菜单显示文字
     */
    @Override
    public XMenu setText(String text) {
        this.text = text;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.URI</code>. 「uri」- 菜单地址（不包含应用的path）
     */
    @Override
    public String getUri() {
        return this.uri;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.URI</code>. 「uri」- 菜单地址（不包含应用的path）
     */
    @Override
    public XMenu setUri(String uri) {
        this.uri = uri;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.TYPE</code>. 「type」- 菜单类型
     */
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.TYPE</code>. 「type」- 菜单类型
     */
    @Override
    public XMenu setType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.ORDER</code>. 「order」- 菜单排序
     */
    @Override
    public Long getOrder() {
        return this.order;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.ORDER</code>. 「order」- 菜单排序
     */
    @Override
    public XMenu setOrder(Long order) {
        this.order = order;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.LEVEL</code>. 「level」- 菜单层级
     */
    @Override
    public Long getLevel() {
        return this.level;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.LEVEL</code>. 「level」- 菜单层级
     */
    @Override
    public XMenu setLevel(Long level) {
        this.level = level;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.PARENT_ID</code>. 「parentId」- 菜单父ID
     */
    @Override
    public String getParentId() {
        return this.parentId;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.PARENT_ID</code>. 「parentId」- 菜单父ID
     */
    @Override
    public XMenu setParentId(String parentId) {
        this.parentId = parentId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.APP_ID</code>. 「appId」- 应用程序ID
     */
    @Override
    public String getAppId() {
        return this.appId;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.APP_ID</code>. 「appId」- 应用程序ID
     */
    @Override
    public XMenu setAppId(String appId) {
        this.appId = appId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XMenu setActive(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return this.sigma;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public XMenu setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public XMenu setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XMenu setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public XMenu setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public XMenu setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public XMenu setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public XMenu setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("XMenu (");

        sb.append(key);
        sb.append(", ").append(name);
        sb.append(", ").append(icon);
        sb.append(", ").append(text);
        sb.append(", ").append(uri);
        sb.append(", ").append(type);
        sb.append(", ").append(order);
        sb.append(", ").append(level);
        sb.append(", ").append(parentId);
        sb.append(", ").append(appId);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(metadata);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IXMenu from) {
        setKey(from.getKey());
        setName(from.getName());
        setIcon(from.getIcon());
        setText(from.getText());
        setUri(from.getUri());
        setType(from.getType());
        setOrder(from.getOrder());
        setLevel(from.getLevel());
        setParentId(from.getParentId());
        setAppId(from.getAppId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IXMenu> E into(E into) {
        into.from(this);
        return into;
    }
}
