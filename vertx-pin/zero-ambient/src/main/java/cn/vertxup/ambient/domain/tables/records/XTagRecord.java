/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ambient.domain.tables.records;


import cn.vertxup.ambient.domain.tables.XTag;
import cn.vertxup.ambient.domain.tables.interfaces.IXTag;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XTagRecord extends UpdatableRecordImpl<XTagRecord> implements VertxPojo, Record16<String, String, String, String, Long, Boolean, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IXTag {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.KEY</code>. 「key」- 标签主键
     */
    @Override
    public XTagRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.KEY</code>. 「key」- 标签主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.NAME</code>. 「name」- 标签名称
     */
    @Override
    public XTagRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.NAME</code>. 「name」- 标签名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.TYPE</code>. 「type」- 标签类型
     */
    @Override
    public XTagRecord setType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.TYPE</code>. 「type」- 标签类型
     */
    @Override
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.ICON</code>. 「icon」- 标签使用的图标
     */
    @Override
    public XTagRecord setIcon(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.ICON</code>. 「icon」- 标签使用的图标
     */
    @Override
    public String getIcon() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.SORT</code>. 「sort」- 标签排序
     */
    @Override
    public XTagRecord setSort(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.SORT</code>. 「sort」- 标签排序
     */
    @Override
    public Long getSort() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.SHOW</code>. 「show」- 是否显示在导航栏
     */
    @Override
    public XTagRecord setShow(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.SHOW</code>. 「show」- 是否显示在导航栏
     */
    @Override
    public Boolean getShow() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.DESCRIPTION</code>. 「description」- 标签描述
     */
    @Override
    public XTagRecord setDescription(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.DESCRIPTION</code>. 「description」- 标签描述
     */
    @Override
    public String getDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.APP_ID</code>. 「appId」- 关联的应用程序ID
     */
    @Override
    public XTagRecord setAppId(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.APP_ID</code>. 「appId」- 关联的应用程序ID
     */
    @Override
    public String getAppId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XTagRecord setActive(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public XTagRecord setSigma(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public XTagRecord setMetadata(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XTagRecord setLanguage(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public XTagRecord setCreatedAt(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public XTagRecord setCreatedBy(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public XTagRecord setUpdatedAt(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TAG.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public XTagRecord setUpdatedBy(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TAG.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<String, String, String, String, Long, Boolean, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<String, String, String, String, Long, Boolean, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return XTag.X_TAG.KEY;
    }

    @Override
    public Field<String> field2() {
        return XTag.X_TAG.NAME;
    }

    @Override
    public Field<String> field3() {
        return XTag.X_TAG.TYPE;
    }

    @Override
    public Field<String> field4() {
        return XTag.X_TAG.ICON;
    }

    @Override
    public Field<Long> field5() {
        return XTag.X_TAG.SORT;
    }

    @Override
    public Field<Boolean> field6() {
        return XTag.X_TAG.SHOW;
    }

    @Override
    public Field<String> field7() {
        return XTag.X_TAG.DESCRIPTION;
    }

    @Override
    public Field<String> field8() {
        return XTag.X_TAG.APP_ID;
    }

    @Override
    public Field<Boolean> field9() {
        return XTag.X_TAG.ACTIVE;
    }

    @Override
    public Field<String> field10() {
        return XTag.X_TAG.SIGMA;
    }

    @Override
    public Field<String> field11() {
        return XTag.X_TAG.METADATA;
    }

    @Override
    public Field<String> field12() {
        return XTag.X_TAG.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return XTag.X_TAG.CREATED_AT;
    }

    @Override
    public Field<String> field14() {
        return XTag.X_TAG.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return XTag.X_TAG.UPDATED_AT;
    }

    @Override
    public Field<String> field16() {
        return XTag.X_TAG.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getIcon();
    }

    @Override
    public Long component5() {
        return getSort();
    }

    @Override
    public Boolean component6() {
        return getShow();
    }

    @Override
    public String component7() {
        return getDescription();
    }

    @Override
    public String component8() {
        return getAppId();
    }

    @Override
    public Boolean component9() {
        return getActive();
    }

    @Override
    public String component10() {
        return getSigma();
    }

    @Override
    public String component11() {
        return getMetadata();
    }

    @Override
    public String component12() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component13() {
        return getCreatedAt();
    }

    @Override
    public String component14() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component15() {
        return getUpdatedAt();
    }

    @Override
    public String component16() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getIcon();
    }

    @Override
    public Long value5() {
        return getSort();
    }

    @Override
    public Boolean value6() {
        return getShow();
    }

    @Override
    public String value7() {
        return getDescription();
    }

    @Override
    public String value8() {
        return getAppId();
    }

    @Override
    public Boolean value9() {
        return getActive();
    }

    @Override
    public String value10() {
        return getSigma();
    }

    @Override
    public String value11() {
        return getMetadata();
    }

    @Override
    public String value12() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value13() {
        return getCreatedAt();
    }

    @Override
    public String value14() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value15() {
        return getUpdatedAt();
    }

    @Override
    public String value16() {
        return getUpdatedBy();
    }

    @Override
    public XTagRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public XTagRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public XTagRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public XTagRecord value4(String value) {
        setIcon(value);
        return this;
    }

    @Override
    public XTagRecord value5(Long value) {
        setSort(value);
        return this;
    }

    @Override
    public XTagRecord value6(Boolean value) {
        setShow(value);
        return this;
    }

    @Override
    public XTagRecord value7(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public XTagRecord value8(String value) {
        setAppId(value);
        return this;
    }

    @Override
    public XTagRecord value9(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public XTagRecord value10(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public XTagRecord value11(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public XTagRecord value12(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public XTagRecord value13(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public XTagRecord value14(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public XTagRecord value15(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public XTagRecord value16(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public XTagRecord values(String value1, String value2, String value3, String value4, Long value5, Boolean value6, String value7, String value8, Boolean value9, String value10, String value11, String value12, LocalDateTime value13, String value14, LocalDateTime value15, String value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IXTag from) {
        setKey(from.getKey());
        setName(from.getName());
        setType(from.getType());
        setIcon(from.getIcon());
        setSort(from.getSort());
        setShow(from.getShow());
        setDescription(from.getDescription());
        setAppId(from.getAppId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IXTag> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XTagRecord
     */
    public XTagRecord() {
        super(XTag.X_TAG);
    }

    /**
     * Create a detached, initialised XTagRecord
     */
    public XTagRecord(String key, String name, String type, String icon, Long sort, Boolean show, String description, String appId, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(XTag.X_TAG);

        setKey(key);
        setName(name);
        setType(type);
        setIcon(icon);
        setSort(sort);
        setShow(show);
        setDescription(description);
        setAppId(appId);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised XTagRecord
     */
    public XTagRecord(cn.vertxup.ambient.domain.tables.pojos.XTag value) {
        super(XTag.X_TAG);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setType(value.getType());
            setIcon(value.getIcon());
            setSort(value.getSort());
            setShow(value.getShow());
            setDescription(value.getDescription());
            setAppId(value.getAppId());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public XTagRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
