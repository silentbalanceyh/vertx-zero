/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ambient.domain.tables.pojos;


import cn.vertxup.ambient.domain.tables.interfaces.IXTodo;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XTodo implements VertxPojo, IXTodo {

    private static final long serialVersionUID = 1L;

    private String        key;
    private String        serial;
    private String        name;
    private String        code;
    private String        icon;
    private String        status;
    private String        todoUrl;
    private String        type;
    private LocalDateTime expiredAt;
    private String        modelId;
    private String        modelKey;
    private String        modelCategory;
    private String        toGroup;
    private String        toUser;
    private String        toRole;
    private String        assignedBy;
    private String        acceptedBy;
    private String        finishedBy;
    private String        traceId;
    private String        parentId;
    private Boolean       active;
    private String        sigma;
    private String        metadata;
    private String        language;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public XTodo() {}

    public XTodo(IXTodo value) {
        this.key = value.getKey();
        this.serial = value.getSerial();
        this.name = value.getName();
        this.code = value.getCode();
        this.icon = value.getIcon();
        this.status = value.getStatus();
        this.todoUrl = value.getTodoUrl();
        this.type = value.getType();
        this.expiredAt = value.getExpiredAt();
        this.modelId = value.getModelId();
        this.modelKey = value.getModelKey();
        this.modelCategory = value.getModelCategory();
        this.toGroup = value.getToGroup();
        this.toUser = value.getToUser();
        this.toRole = value.getToRole();
        this.assignedBy = value.getAssignedBy();
        this.acceptedBy = value.getAcceptedBy();
        this.finishedBy = value.getFinishedBy();
        this.traceId = value.getTraceId();
        this.parentId = value.getParentId();
        this.active = value.getActive();
        this.sigma = value.getSigma();
        this.metadata = value.getMetadata();
        this.language = value.getLanguage();
        this.createdAt = value.getCreatedAt();
        this.createdBy = value.getCreatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.updatedBy = value.getUpdatedBy();
    }

    public XTodo(
        String        key,
        String        serial,
        String        name,
        String        code,
        String        icon,
        String        status,
        String        todoUrl,
        String        type,
        LocalDateTime expiredAt,
        String        modelId,
        String        modelKey,
        String        modelCategory,
        String        toGroup,
        String        toUser,
        String        toRole,
        String        assignedBy,
        String        acceptedBy,
        String        finishedBy,
        String        traceId,
        String        parentId,
        Boolean       active,
        String        sigma,
        String        metadata,
        String        language,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.serial = serial;
        this.name = name;
        this.code = code;
        this.icon = icon;
        this.status = status;
        this.todoUrl = todoUrl;
        this.type = type;
        this.expiredAt = expiredAt;
        this.modelId = modelId;
        this.modelKey = modelKey;
        this.modelCategory = modelCategory;
        this.toGroup = toGroup;
        this.toUser = toUser;
        this.toRole = toRole;
        this.assignedBy = assignedBy;
        this.acceptedBy = acceptedBy;
        this.finishedBy = finishedBy;
        this.traceId = traceId;
        this.parentId = parentId;
        this.active = active;
        this.sigma = sigma;
        this.metadata = metadata;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

        public XTodo(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.KEY</code>. 「key」- 待办主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.KEY</code>. 「key」- 待办主键
     */
    @Override
    public XTodo setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.SERIAL</code>. 「serial」- 待办编号，使用
     * X_NUMBER 生成
     */
    @Override
    public String getSerial() {
        return this.serial;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.SERIAL</code>. 「serial」- 待办编号，使用
     * X_NUMBER 生成
     */
    @Override
    public XTodo setSerial(String serial) {
        this.serial = serial;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.NAME</code>. 「name」- 待办名称（标题）
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.NAME</code>. 「name」- 待办名称（标题）
     */
    @Override
    public XTodo setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.CODE</code>. 「code」- 待办系统码
     */
    @Override
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.CODE</code>. 「code」- 待办系统码
     */
    @Override
    public XTodo setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.ICON</code>. 「icon」- 待办显示的图标
     */
    @Override
    public String getIcon() {
        return this.icon;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.ICON</code>. 「icon」- 待办显示的图标
     */
    @Override
    public XTodo setIcon(String icon) {
        this.icon = icon;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.STATUS</code>. 「status」- 待办状态
     */
    @Override
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.STATUS</code>. 「status」- 待办状态
     */
    @Override
    public XTodo setStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TODO_URL</code>. 「todoUrl」- 待办路径
     */
    @Override
    public String getTodoUrl() {
        return this.todoUrl;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TODO_URL</code>. 「todoUrl」- 待办路径
     */
    @Override
    public XTodo setTodoUrl(String todoUrl) {
        this.todoUrl = todoUrl;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TYPE</code>. 「type」- 待办类型
     */
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TYPE</code>. 「type」- 待办类型
     */
    @Override
    public XTodo setType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.EXPIRED_AT</code>. 「expiredAt」- 超时时间
     */
    @Override
    public LocalDateTime getExpiredAt() {
        return this.expiredAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.EXPIRED_AT</code>. 「expiredAt」- 超时时间
     */
    @Override
    public XTodo setExpiredAt(LocalDateTime expiredAt) {
        this.expiredAt = expiredAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public String getModelId() {
        return this.modelId;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public XTodo setModelId(String modelId) {
        this.modelId = modelId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public String getModelKey() {
        return this.modelKey;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public XTodo setModelKey(String modelKey) {
        this.modelKey = modelKey;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.MODEL_CATEGORY</code>.
     * 「modelCategory」- 关联的category记录，只包含叶节点
     */
    @Override
    public String getModelCategory() {
        return this.modelCategory;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.MODEL_CATEGORY</code>.
     * 「modelCategory」- 关联的category记录，只包含叶节点
     */
    @Override
    public XTodo setModelCategory(String modelCategory) {
        this.modelCategory = modelCategory;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TO_GROUP</code>. 「toGroup」- 待办指定组
     */
    @Override
    public String getToGroup() {
        return this.toGroup;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TO_GROUP</code>. 「toGroup」- 待办指定组
     */
    @Override
    public XTodo setToGroup(String toGroup) {
        this.toGroup = toGroup;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TO_USER</code>. 「toUser」- 待办指定人
     */
    @Override
    public String getToUser() {
        return this.toUser;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TO_USER</code>. 「toUser」- 待办指定人
     */
    @Override
    public XTodo setToUser(String toUser) {
        this.toUser = toUser;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TO_ROLE</code>. 「toRole」- 待办角色（集体）
     */
    @Override
    public String getToRole() {
        return this.toRole;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TO_ROLE</code>. 「toRole」- 待办角色（集体）
     */
    @Override
    public XTodo setToRole(String toRole) {
        this.toRole = toRole;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.ASSIGNED_BY</code>. 「assignedBy」-
     * 待办指派人
     */
    @Override
    public String getAssignedBy() {
        return this.assignedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.ASSIGNED_BY</code>. 「assignedBy」-
     * 待办指派人
     */
    @Override
    public XTodo setAssignedBy(String assignedBy) {
        this.assignedBy = assignedBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.ACCEPTED_BY</code>. 「acceptedBy」-
     * 待办接收人
     */
    @Override
    public String getAcceptedBy() {
        return this.acceptedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.ACCEPTED_BY</code>. 「acceptedBy」-
     * 待办接收人
     */
    @Override
    public XTodo setAcceptedBy(String acceptedBy) {
        this.acceptedBy = acceptedBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.FINISHED_BY</code>. 「finishedBy」-
     * 待办完成人
     */
    @Override
    public String getFinishedBy() {
        return this.finishedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.FINISHED_BY</code>. 「finishedBy」-
     * 待办完成人
     */
    @Override
    public XTodo setFinishedBy(String finishedBy) {
        this.finishedBy = finishedBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TRACE_ID</code>. 「traceId」-
     * 同一个流程的待办执行分组
     */
    @Override
    public String getTraceId() {
        return this.traceId;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TRACE_ID</code>. 「traceId」-
     * 同一个流程的待办执行分组
     */
    @Override
    public XTodo setTraceId(String traceId) {
        this.traceId = traceId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.PARENT_ID</code>. 「parentId」-
     * 待办支持父子集结构，父待办执行时候子待办同样执行
     */
    @Override
    public String getParentId() {
        return this.parentId;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.PARENT_ID</code>. 「parentId」-
     * 待办支持父子集结构，父待办执行时候子待办同样执行
     */
    @Override
    public XTodo setParentId(String parentId) {
        this.parentId = parentId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XTodo setActive(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return this.sigma;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public XTodo setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public XTodo setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XTodo setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public XTodo setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public XTodo setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public XTodo setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public XTodo setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("XTodo (");

        sb.append(key);
        sb.append(", ").append(serial);
        sb.append(", ").append(name);
        sb.append(", ").append(code);
        sb.append(", ").append(icon);
        sb.append(", ").append(status);
        sb.append(", ").append(todoUrl);
        sb.append(", ").append(type);
        sb.append(", ").append(expiredAt);
        sb.append(", ").append(modelId);
        sb.append(", ").append(modelKey);
        sb.append(", ").append(modelCategory);
        sb.append(", ").append(toGroup);
        sb.append(", ").append(toUser);
        sb.append(", ").append(toRole);
        sb.append(", ").append(assignedBy);
        sb.append(", ").append(acceptedBy);
        sb.append(", ").append(finishedBy);
        sb.append(", ").append(traceId);
        sb.append(", ").append(parentId);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(metadata);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IXTodo from) {
        setKey(from.getKey());
        setSerial(from.getSerial());
        setName(from.getName());
        setCode(from.getCode());
        setIcon(from.getIcon());
        setStatus(from.getStatus());
        setTodoUrl(from.getTodoUrl());
        setType(from.getType());
        setExpiredAt(from.getExpiredAt());
        setModelId(from.getModelId());
        setModelKey(from.getModelKey());
        setModelCategory(from.getModelCategory());
        setToGroup(from.getToGroup());
        setToUser(from.getToUser());
        setToRole(from.getToRole());
        setAssignedBy(from.getAssignedBy());
        setAcceptedBy(from.getAcceptedBy());
        setFinishedBy(from.getFinishedBy());
        setTraceId(from.getTraceId());
        setParentId(from.getParentId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IXTodo> E into(E into) {
        into.from(this);
        return into;
    }
}
