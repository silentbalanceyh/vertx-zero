/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ambient.domain.tables.records;


import cn.vertxup.ambient.domain.tables.XActivity;
import cn.vertxup.ambient.domain.tables.interfaces.IXActivity;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XActivityRecord extends UpdatableRecordImpl<XActivityRecord> implements VertxPojo, Record16<String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IXActivity {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.KEY</code>. 「key」- 操作行为主键
     */
    @Override
    public XActivityRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.KEY</code>. 「key」- 操作行为主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.TYPE</code>. 「type」- 操作类型
     */
    @Override
    public XActivityRecord setType(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.TYPE</code>. 「type」- 操作类型
     */
    @Override
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.SERIAL</code>. 「serial」- 变更记录号
     */
    @Override
    public XActivityRecord setSerial(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.SERIAL</code>. 「serial」- 变更记录号
     */
    @Override
    public String getSerial() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.DESCRIPTION</code>. 「description」-
     * 操作描述信息
     */
    @Override
    public XActivityRecord setDescription(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.DESCRIPTION</code>. 「description」-
     * 操作描述信息
     */
    @Override
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.MODEL_ID</code>. 「modelId」-
     * 组所关联的模型identifier，用于描述
     */
    @Override
    public XActivityRecord setModelId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.MODEL_ID</code>. 「modelId」-
     * 组所关联的模型identifier，用于描述
     */
    @Override
    public String getModelId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.MODEL_KEY</code>. 「modelKey」-
     * 组所关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public XActivityRecord setModelKey(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.MODEL_KEY</code>. 「modelKey」-
     * 组所关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public String getModelKey() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.RECORD_OLD</code>. 「recordOld」-
     * 变更之前的数据（用于回滚）
     */
    @Override
    public XActivityRecord setRecordOld(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.RECORD_OLD</code>. 「recordOld」-
     * 变更之前的数据（用于回滚）
     */
    @Override
    public String getRecordOld() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.RECORD_NEW</code>. 「recordNew」-
     * 变更之后的数据（用于更新）
     */
    @Override
    public XActivityRecord setRecordNew(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.RECORD_NEW</code>. 「recordNew」-
     * 变更之后的数据（用于更新）
     */
    @Override
    public String getRecordNew() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    @Override
    public XActivityRecord setSigma(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XActivityRecord setLanguage(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XActivityRecord setActive(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    @Override
    public XActivityRecord setMetadata(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public XActivityRecord setCreatedAt(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public XActivityRecord setCreatedBy(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public XActivityRecord setUpdatedAt(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_ACTIVITY.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public XActivityRecord setUpdatedBy(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_ACTIVITY.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return XActivity.X_ACTIVITY.KEY;
    }

    @Override
    public Field<String> field2() {
        return XActivity.X_ACTIVITY.TYPE;
    }

    @Override
    public Field<String> field3() {
        return XActivity.X_ACTIVITY.SERIAL;
    }

    @Override
    public Field<String> field4() {
        return XActivity.X_ACTIVITY.DESCRIPTION;
    }

    @Override
    public Field<String> field5() {
        return XActivity.X_ACTIVITY.MODEL_ID;
    }

    @Override
    public Field<String> field6() {
        return XActivity.X_ACTIVITY.MODEL_KEY;
    }

    @Override
    public Field<String> field7() {
        return XActivity.X_ACTIVITY.RECORD_OLD;
    }

    @Override
    public Field<String> field8() {
        return XActivity.X_ACTIVITY.RECORD_NEW;
    }

    @Override
    public Field<String> field9() {
        return XActivity.X_ACTIVITY.SIGMA;
    }

    @Override
    public Field<String> field10() {
        return XActivity.X_ACTIVITY.LANGUAGE;
    }

    @Override
    public Field<Boolean> field11() {
        return XActivity.X_ACTIVITY.ACTIVE;
    }

    @Override
    public Field<String> field12() {
        return XActivity.X_ACTIVITY.METADATA;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return XActivity.X_ACTIVITY.CREATED_AT;
    }

    @Override
    public Field<String> field14() {
        return XActivity.X_ACTIVITY.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return XActivity.X_ACTIVITY.UPDATED_AT;
    }

    @Override
    public Field<String> field16() {
        return XActivity.X_ACTIVITY.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getType();
    }

    @Override
    public String component3() {
        return getSerial();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public String component5() {
        return getModelId();
    }

    @Override
    public String component6() {
        return getModelKey();
    }

    @Override
    public String component7() {
        return getRecordOld();
    }

    @Override
    public String component8() {
        return getRecordNew();
    }

    @Override
    public String component9() {
        return getSigma();
    }

    @Override
    public String component10() {
        return getLanguage();
    }

    @Override
    public Boolean component11() {
        return getActive();
    }

    @Override
    public String component12() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component13() {
        return getCreatedAt();
    }

    @Override
    public String component14() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component15() {
        return getUpdatedAt();
    }

    @Override
    public String component16() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getType();
    }

    @Override
    public String value3() {
        return getSerial();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public String value5() {
        return getModelId();
    }

    @Override
    public String value6() {
        return getModelKey();
    }

    @Override
    public String value7() {
        return getRecordOld();
    }

    @Override
    public String value8() {
        return getRecordNew();
    }

    @Override
    public String value9() {
        return getSigma();
    }

    @Override
    public String value10() {
        return getLanguage();
    }

    @Override
    public Boolean value11() {
        return getActive();
    }

    @Override
    public String value12() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value13() {
        return getCreatedAt();
    }

    @Override
    public String value14() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value15() {
        return getUpdatedAt();
    }

    @Override
    public String value16() {
        return getUpdatedBy();
    }

    @Override
    public XActivityRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public XActivityRecord value2(String value) {
        setType(value);
        return this;
    }

    @Override
    public XActivityRecord value3(String value) {
        setSerial(value);
        return this;
    }

    @Override
    public XActivityRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public XActivityRecord value5(String value) {
        setModelId(value);
        return this;
    }

    @Override
    public XActivityRecord value6(String value) {
        setModelKey(value);
        return this;
    }

    @Override
    public XActivityRecord value7(String value) {
        setRecordOld(value);
        return this;
    }

    @Override
    public XActivityRecord value8(String value) {
        setRecordNew(value);
        return this;
    }

    @Override
    public XActivityRecord value9(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public XActivityRecord value10(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public XActivityRecord value11(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public XActivityRecord value12(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public XActivityRecord value13(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public XActivityRecord value14(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public XActivityRecord value15(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public XActivityRecord value16(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public XActivityRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, Boolean value11, String value12, LocalDateTime value13, String value14, LocalDateTime value15, String value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IXActivity from) {
        setKey(from.getKey());
        setType(from.getType());
        setSerial(from.getSerial());
        setDescription(from.getDescription());
        setModelId(from.getModelId());
        setModelKey(from.getModelKey());
        setRecordOld(from.getRecordOld());
        setRecordNew(from.getRecordNew());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IXActivity> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XActivityRecord
     */
    public XActivityRecord() {
        super(XActivity.X_ACTIVITY);
    }

    /**
     * Create a detached, initialised XActivityRecord
     */
    public XActivityRecord(String key, String type, String serial, String description, String modelId, String modelKey, String recordOld, String recordNew, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(XActivity.X_ACTIVITY);

        setKey(key);
        setType(type);
        setSerial(serial);
        setDescription(description);
        setModelId(modelId);
        setModelKey(modelKey);
        setRecordOld(recordOld);
        setRecordNew(recordNew);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised XActivityRecord
     */
    public XActivityRecord(cn.vertxup.ambient.domain.tables.pojos.XActivity value) {
        super(XActivity.X_ACTIVITY);

        if (value != null) {
            setKey(value.getKey());
            setType(value.getType());
            setSerial(value.getSerial());
            setDescription(value.getDescription());
            setModelId(value.getModelId());
            setModelKey(value.getModelKey());
            setRecordOld(value.getRecordOld());
            setRecordNew(value.getRecordNew());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public XActivityRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
