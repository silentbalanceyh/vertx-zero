/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.ambient.domain.tables.records;


import cn.vertxup.ambient.domain.tables.XMenu;
import cn.vertxup.ambient.domain.tables.interfaces.IXMenu;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XMenuRecord extends UpdatableRecordImpl<XMenuRecord> implements VertxPojo, Record18<String, String, String, String, String, String, Long, Long, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IXMenu {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.KEY</code>. 「key」- 菜单主键
     */
    @Override
    public XMenuRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.KEY</code>. 「key」- 菜单主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.NAME</code>. 「name」- 菜单名称
     */
    @Override
    public XMenuRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.NAME</code>. 「name」- 菜单名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.ICON</code>. 「icon」- 菜单使用的icon
     */
    @Override
    public XMenuRecord setIcon(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.ICON</code>. 「icon」- 菜单使用的icon
     */
    @Override
    public String getIcon() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.TEXT</code>. 「text」- 菜单显示文字
     */
    @Override
    public XMenuRecord setText(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.TEXT</code>. 「text」- 菜单显示文字
     */
    @Override
    public String getText() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.URI</code>. 「uri」- 菜单地址（不包含应用的path）
     */
    @Override
    public XMenuRecord setUri(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.URI</code>. 「uri」- 菜单地址（不包含应用的path）
     */
    @Override
    public String getUri() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.TYPE</code>. 「type」- 菜单类型
     */
    @Override
    public XMenuRecord setType(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.TYPE</code>. 「type」- 菜单类型
     */
    @Override
    public String getType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.ORDER</code>. 「order」- 菜单排序
     */
    @Override
    public XMenuRecord setOrder(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.ORDER</code>. 「order」- 菜单排序
     */
    @Override
    public Long getOrder() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.LEVEL</code>. 「level」- 菜单层级
     */
    @Override
    public XMenuRecord setLevel(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.LEVEL</code>. 「level」- 菜单层级
     */
    @Override
    public Long getLevel() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.PARENT_ID</code>. 「parentId」- 菜单父ID
     */
    @Override
    public XMenuRecord setParentId(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.PARENT_ID</code>. 「parentId」- 菜单父ID
     */
    @Override
    public String getParentId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.APP_ID</code>. 「appId」- 应用程序ID
     */
    @Override
    public XMenuRecord setAppId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.APP_ID</code>. 「appId」- 应用程序ID
     */
    @Override
    public String getAppId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XMenuRecord setActive(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public XMenuRecord setSigma(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public XMenuRecord setMetadata(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XMenuRecord setLanguage(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public XMenuRecord setCreatedAt(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public XMenuRecord setCreatedBy(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public XMenuRecord setUpdatedAt(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_MENU.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public XMenuRecord setUpdatedBy(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_MENU.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<String, String, String, String, String, String, Long, Long, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<String, String, String, String, String, String, Long, Long, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return XMenu.X_MENU.KEY;
    }

    @Override
    public Field<String> field2() {
        return XMenu.X_MENU.NAME;
    }

    @Override
    public Field<String> field3() {
        return XMenu.X_MENU.ICON;
    }

    @Override
    public Field<String> field4() {
        return XMenu.X_MENU.TEXT;
    }

    @Override
    public Field<String> field5() {
        return XMenu.X_MENU.URI;
    }

    @Override
    public Field<String> field6() {
        return XMenu.X_MENU.TYPE;
    }

    @Override
    public Field<Long> field7() {
        return XMenu.X_MENU.ORDER;
    }

    @Override
    public Field<Long> field8() {
        return XMenu.X_MENU.LEVEL;
    }

    @Override
    public Field<String> field9() {
        return XMenu.X_MENU.PARENT_ID;
    }

    @Override
    public Field<String> field10() {
        return XMenu.X_MENU.APP_ID;
    }

    @Override
    public Field<Boolean> field11() {
        return XMenu.X_MENU.ACTIVE;
    }

    @Override
    public Field<String> field12() {
        return XMenu.X_MENU.SIGMA;
    }

    @Override
    public Field<String> field13() {
        return XMenu.X_MENU.METADATA;
    }

    @Override
    public Field<String> field14() {
        return XMenu.X_MENU.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return XMenu.X_MENU.CREATED_AT;
    }

    @Override
    public Field<String> field16() {
        return XMenu.X_MENU.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return XMenu.X_MENU.UPDATED_AT;
    }

    @Override
    public Field<String> field18() {
        return XMenu.X_MENU.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getIcon();
    }

    @Override
    public String component4() {
        return getText();
    }

    @Override
    public String component5() {
        return getUri();
    }

    @Override
    public String component6() {
        return getType();
    }

    @Override
    public Long component7() {
        return getOrder();
    }

    @Override
    public Long component8() {
        return getLevel();
    }

    @Override
    public String component9() {
        return getParentId();
    }

    @Override
    public String component10() {
        return getAppId();
    }

    @Override
    public Boolean component11() {
        return getActive();
    }

    @Override
    public String component12() {
        return getSigma();
    }

    @Override
    public String component13() {
        return getMetadata();
    }

    @Override
    public String component14() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component15() {
        return getCreatedAt();
    }

    @Override
    public String component16() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component17() {
        return getUpdatedAt();
    }

    @Override
    public String component18() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getIcon();
    }

    @Override
    public String value4() {
        return getText();
    }

    @Override
    public String value5() {
        return getUri();
    }

    @Override
    public String value6() {
        return getType();
    }

    @Override
    public Long value7() {
        return getOrder();
    }

    @Override
    public Long value8() {
        return getLevel();
    }

    @Override
    public String value9() {
        return getParentId();
    }

    @Override
    public String value10() {
        return getAppId();
    }

    @Override
    public Boolean value11() {
        return getActive();
    }

    @Override
    public String value12() {
        return getSigma();
    }

    @Override
    public String value13() {
        return getMetadata();
    }

    @Override
    public String value14() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value15() {
        return getCreatedAt();
    }

    @Override
    public String value16() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value17() {
        return getUpdatedAt();
    }

    @Override
    public String value18() {
        return getUpdatedBy();
    }

    @Override
    public XMenuRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public XMenuRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public XMenuRecord value3(String value) {
        setIcon(value);
        return this;
    }

    @Override
    public XMenuRecord value4(String value) {
        setText(value);
        return this;
    }

    @Override
    public XMenuRecord value5(String value) {
        setUri(value);
        return this;
    }

    @Override
    public XMenuRecord value6(String value) {
        setType(value);
        return this;
    }

    @Override
    public XMenuRecord value7(Long value) {
        setOrder(value);
        return this;
    }

    @Override
    public XMenuRecord value8(Long value) {
        setLevel(value);
        return this;
    }

    @Override
    public XMenuRecord value9(String value) {
        setParentId(value);
        return this;
    }

    @Override
    public XMenuRecord value10(String value) {
        setAppId(value);
        return this;
    }

    @Override
    public XMenuRecord value11(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public XMenuRecord value12(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public XMenuRecord value13(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public XMenuRecord value14(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public XMenuRecord value15(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public XMenuRecord value16(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public XMenuRecord value17(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public XMenuRecord value18(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public XMenuRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Long value7, Long value8, String value9, String value10, Boolean value11, String value12, String value13, String value14, LocalDateTime value15, String value16, LocalDateTime value17, String value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IXMenu from) {
        setKey(from.getKey());
        setName(from.getName());
        setIcon(from.getIcon());
        setText(from.getText());
        setUri(from.getUri());
        setType(from.getType());
        setOrder(from.getOrder());
        setLevel(from.getLevel());
        setParentId(from.getParentId());
        setAppId(from.getAppId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IXMenu> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XMenuRecord
     */
    public XMenuRecord() {
        super(XMenu.X_MENU);
    }

    /**
     * Create a detached, initialised XMenuRecord
     */
    public XMenuRecord(String key, String name, String icon, String text, String uri, String type, Long order, Long level, String parentId, String appId, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(XMenu.X_MENU);

        setKey(key);
        setName(name);
        setIcon(icon);
        setText(text);
        setUri(uri);
        setType(type);
        setOrder(order);
        setLevel(level);
        setParentId(parentId);
        setAppId(appId);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised XMenuRecord
     */
    public XMenuRecord(cn.vertxup.ambient.domain.tables.pojos.XMenu value) {
        super(XMenu.X_MENU);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setIcon(value.getIcon());
            setText(value.getText());
            setUri(value.getUri());
            setType(value.getType());
            setOrder(value.getOrder());
            setLevel(value.getLevel());
            setParentId(value.getParentId());
            setAppId(value.getAppId());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public XMenuRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
