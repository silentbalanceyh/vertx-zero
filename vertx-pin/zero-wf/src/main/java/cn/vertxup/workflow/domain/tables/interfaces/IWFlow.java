/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.workflow.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IWFlow extends VertxPojo, Serializable {

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.KEY</code>. 「key」- 流程定义主键
     */
    public IWFlow setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.KEY</code>. 「key」- 流程定义主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.NAME</code>. 「name」- 流程定义名称
     */
    public IWFlow setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.NAME</code>. 「name」- 流程定义名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.CODE</code>. 「code」- 流程定义编号（系统可用）
     */
    public IWFlow setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.CODE</code>. 「code」- 流程定义编号（系统可用）
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.TYPE</code>. 「type」- 流程类型，对接
     * zero.workflow.cat的X_TABULAR
     */
    public IWFlow setType(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.TYPE</code>. 「type」- 流程类型，对接
     * zero.workflow.cat的X_TABULAR
     */
    public String getType();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.DEFINITION_KEY</code>.
     * 「definitionKey」- 定义ID（读取流程图所需）, getProcessDefinitionId
     */
    public IWFlow setDefinitionKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.DEFINITION_KEY</code>.
     * 「definitionKey」- 定义ID（读取流程图所需）, getProcessDefinitionId
     */
    public String getDefinitionKey();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.AUTHORIZED_COMPONENT</code>.
     * 「authorizedComponent」- 流程授权组件
     */
    public IWFlow setAuthorizedComponent(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.AUTHORIZED_COMPONENT</code>.
     * 「authorizedComponent」- 流程授权组件
     */
    public String getAuthorizedComponent();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.AUTHORIZED_CONFIG</code>.
     * 「authorizedConfig」- 流程授权配置
     */
    public IWFlow setAuthorizedConfig(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.AUTHORIZED_CONFIG</code>.
     * 「authorizedConfig」- 流程授权配置
     */
    public String getAuthorizedConfig();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.GENERATE_COMPONENT</code>.
     * 「generateComponent」- Todo生成组件
     */
    public IWFlow setGenerateComponent(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.GENERATE_COMPONENT</code>.
     * 「generateComponent」- Todo生成组件
     */
    public String getGenerateComponent();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.GENERATE_CONFIG</code>.
     * 「generateConfig」- Todo生成配置
     */
    public IWFlow setGenerateConfig(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.GENERATE_CONFIG</code>.
     * 「generateConfig」- Todo生成配置
     */
    public String getGenerateConfig();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.RUN_COMPONENT</code>. 「runComponent」-
     * 执行组件
     */
    public IWFlow setRunComponent(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.RUN_COMPONENT</code>. 「runComponent」-
     * 执行组件
     */
    public String getRunComponent();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.RUN_CONFIG</code>. 「runConfig」- 执行配置
     */
    public IWFlow setRunConfig(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.RUN_CONFIG</code>. 「runConfig」- 执行配置
     */
    public String getRunConfig();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.START_COMPONENT</code>.
     * 「startComponent」- 启动组件
     */
    public IWFlow setStartComponent(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.START_COMPONENT</code>.
     * 「startComponent」- 启动组件
     */
    public String getStartComponent();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.START_CONFIG</code>. 「startConfig」-
     * 启动配置
     */
    public IWFlow setStartConfig(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.START_CONFIG</code>. 「startConfig」-
     * 启动配置
     */
    public String getStartConfig();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.END_COMPONENT</code>. 「endComponent」-
     * 完成组件
     */
    public IWFlow setEndComponent(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.END_COMPONENT</code>. 「endComponent」-
     * 完成组件
     */
    public String getEndComponent();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.END_CONFIG</code>. 「endConfig」- 完成配置
     */
    public IWFlow setEndConfig(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.END_CONFIG</code>. 「endConfig」- 完成配置
     */
    public String getEndConfig();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.UI_COMPONENT</code>. 「uiComponent」-
     * 界面组件
     */
    public IWFlow setUiComponent(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.UI_COMPONENT</code>. 「uiComponent」-
     * 界面组件
     */
    public String getUiComponent();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.UI_CONFIG</code>. 「uiConfig」- 界面配置
     */
    public IWFlow setUiConfig(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.UI_CONFIG</code>. 「uiConfig」- 界面配置
     */
    public String getUiConfig();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.UI_ASSIST</code>. 「uiAssist」-
     * 界面辅助数据专用配置
     */
    public IWFlow setUiAssist(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.UI_ASSIST</code>. 「uiAssist」-
     * 界面辅助数据专用配置
     */
    public String getUiAssist();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.UI_LINKAGE</code>. 「uiLinkage」-
     * 关联部分专用配置：关联工单、关联资产、关联附件
     */
    public IWFlow setUiLinkage(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.UI_LINKAGE</code>. 「uiLinkage」-
     * 关联部分专用配置：关联工单、关联资产、关联附件
     */
    public String getUiLinkage();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.COMMENT</code>. 「comment」 - 流程定义备注
     */
    public IWFlow setComment(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.COMMENT</code>. 「comment」 - 流程定义备注
     */
    public String getComment();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.ACTIVE</code>. 「active」- 是否启用
     */
    public IWFlow setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.SIGMA</code>. 「sigma」- 统一标识
     */
    public IWFlow setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.METADATA</code>. 「metadata」- 附加配置
     */
    public IWFlow setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IWFlow setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IWFlow setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IWFlow setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IWFlow setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.W_FLOW.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IWFlow setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.W_FLOW.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IWFlow
     */
    public void from(IWFlow from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IWFlow
     */
    public <E extends IWFlow> E into(E into);

        @Override
        public default IWFlow fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setType,json::getString,"TYPE","java.lang.String");
                setOrThrow(this::setDefinitionKey,json::getString,"DEFINITION_KEY","java.lang.String");
                setOrThrow(this::setAuthorizedComponent,json::getString,"AUTHORIZED_COMPONENT","java.lang.String");
                setOrThrow(this::setAuthorizedConfig,json::getString,"AUTHORIZED_CONFIG","java.lang.String");
                setOrThrow(this::setGenerateComponent,json::getString,"GENERATE_COMPONENT","java.lang.String");
                setOrThrow(this::setGenerateConfig,json::getString,"GENERATE_CONFIG","java.lang.String");
                setOrThrow(this::setRunComponent,json::getString,"RUN_COMPONENT","java.lang.String");
                setOrThrow(this::setRunConfig,json::getString,"RUN_CONFIG","java.lang.String");
                setOrThrow(this::setStartComponent,json::getString,"START_COMPONENT","java.lang.String");
                setOrThrow(this::setStartConfig,json::getString,"START_CONFIG","java.lang.String");
                setOrThrow(this::setEndComponent,json::getString,"END_COMPONENT","java.lang.String");
                setOrThrow(this::setEndConfig,json::getString,"END_CONFIG","java.lang.String");
                setOrThrow(this::setUiComponent,json::getString,"UI_COMPONENT","java.lang.String");
                setOrThrow(this::setUiConfig,json::getString,"UI_CONFIG","java.lang.String");
                setOrThrow(this::setUiAssist,json::getString,"UI_ASSIST","java.lang.String");
                setOrThrow(this::setUiLinkage,json::getString,"UI_LINKAGE","java.lang.String");
                setOrThrow(this::setComment,json::getString,"COMMENT","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("TYPE",getType());
                json.put("DEFINITION_KEY",getDefinitionKey());
                json.put("AUTHORIZED_COMPONENT",getAuthorizedComponent());
                json.put("AUTHORIZED_CONFIG",getAuthorizedConfig());
                json.put("GENERATE_COMPONENT",getGenerateComponent());
                json.put("GENERATE_CONFIG",getGenerateConfig());
                json.put("RUN_COMPONENT",getRunComponent());
                json.put("RUN_CONFIG",getRunConfig());
                json.put("START_COMPONENT",getStartComponent());
                json.put("START_CONFIG",getStartConfig());
                json.put("END_COMPONENT",getEndComponent());
                json.put("END_CONFIG",getEndConfig());
                json.put("UI_COMPONENT",getUiComponent());
                json.put("UI_CONFIG",getUiConfig());
                json.put("UI_ASSIST",getUiAssist());
                json.put("UI_LINKAGE",getUiLinkage());
                json.put("COMMENT",getComment());
                json.put("ACTIVE",getActive());
                json.put("SIGMA",getSigma());
                json.put("METADATA",getMetadata());
                json.put("LANGUAGE",getLanguage());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
