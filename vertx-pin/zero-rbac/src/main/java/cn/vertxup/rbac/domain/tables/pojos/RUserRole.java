/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.rbac.domain.tables.pojos;


import cn.vertxup.rbac.domain.tables.interfaces.IRUserRole;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RUserRole implements VertxPojo, IRUserRole {

    private static final long serialVersionUID = 1L;

    private String userId;
    private String roleId;
    private Integer priority;

    public RUserRole() {}

    public RUserRole(IRUserRole value) {
        this.userId = value.getUserId();
        this.roleId = value.getRoleId();
        this.priority = value.getPriority();
    }

    public RUserRole(
        String userId,
        String roleId,
        Integer priority
    ) {
        this.userId = userId;
        this.roleId = roleId;
        this.priority = priority;
    }

        public RUserRole(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_ETERNAL.R_USER_ROLE.USER_ID</code>. 「userId」- 关联用户ID
     */
    @Override
    public String getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>DB_ETERNAL.R_USER_ROLE.USER_ID</code>. 「userId」- 关联用户ID
     */
    @Override
    public RUserRole setUserId(String userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.R_USER_ROLE.ROLE_ID</code>. 「roleId」- 关联角色ID
     */
    @Override
    public String getRoleId() {
        return this.roleId;
    }

    /**
     * Setter for <code>DB_ETERNAL.R_USER_ROLE.ROLE_ID</code>. 「roleId」- 关联角色ID
     */
    @Override
    public RUserRole setRoleId(String roleId) {
        this.roleId = roleId;
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.R_USER_ROLE.PRIORITY</code>. 「priority」-
     * 角色优先级
     */
    @Override
    public Integer getPriority() {
        return this.priority;
    }

    /**
     * Setter for <code>DB_ETERNAL.R_USER_ROLE.PRIORITY</code>. 「priority」-
     * 角色优先级
     */
    @Override
    public RUserRole setPriority(Integer priority) {
        this.priority = priority;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RUserRole other = (RUserRole) obj;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.roleId == null) {
            if (other.roleId != null)
                return false;
        }
        else if (!this.roleId.equals(other.roleId))
            return false;
        if (this.priority == null) {
            if (other.priority != null)
                return false;
        }
        else if (!this.priority.equals(other.priority))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.roleId == null) ? 0 : this.roleId.hashCode());
        result = prime * result + ((this.priority == null) ? 0 : this.priority.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RUserRole (");

        sb.append(userId);
        sb.append(", ").append(roleId);
        sb.append(", ").append(priority);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRUserRole from) {
        setUserId(from.getUserId());
        setRoleId(from.getRoleId());
        setPriority(from.getPriority());
    }

    @Override
    public <E extends IRUserRole> E into(E into) {
        into.from(this);
        return into;
    }
}
