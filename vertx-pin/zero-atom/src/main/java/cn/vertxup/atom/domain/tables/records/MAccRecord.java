/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.atom.domain.tables.records;


import cn.vertxup.atom.domain.tables.MAcc;
import cn.vertxup.atom.domain.tables.interfaces.IMAcc;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MAccRecord extends UpdatableRecordImpl<MAccRecord> implements VertxPojo, Record14<String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IMAcc {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.KEY</code>. 「key」- 增量记录ID
     */
    @Override
    public MAccRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.KEY</code>. 「key」- 增量记录ID
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public MAccRecord setModelId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public String getModelId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public MAccRecord setModelKey(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public String getModelKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.RECORD_JSON</code>. 「recordJson」-
     * 上一次的记录内容（Json格式）
     */
    @Override
    public MAccRecord setRecordJson(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.RECORD_JSON</code>. 「recordJson」-
     * 上一次的记录内容（Json格式）
     */
    @Override
    public String getRecordJson() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.RECORD_RAW</code>. 「recordRaw」-
     * 上一次的记录的原始内容
     */
    @Override
    public MAccRecord setRecordRaw(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.RECORD_RAW</code>. 「recordRaw」-
     * 上一次的记录的原始内容
     */
    @Override
    public String getRecordRaw() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.RECORD_UNIQUE</code>. 「recordUnique」-
     * 业务标识规则专用Key，可计算获取
     */
    @Override
    public MAccRecord setRecordUnique(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.RECORD_UNIQUE</code>. 「recordUnique」-
     * 业务标识规则专用Key，可计算获取
     */
    @Override
    public String getRecordUnique() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public MAccRecord setSigma(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public MAccRecord setLanguage(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public MAccRecord setActive(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public MAccRecord setMetadata(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public MAccRecord setCreatedAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public MAccRecord setCreatedBy(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public MAccRecord setUpdatedAt(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_ACC.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public MAccRecord setUpdatedBy(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_ACC.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MAcc.M_ACC.KEY;
    }

    @Override
    public Field<String> field2() {
        return MAcc.M_ACC.MODEL_ID;
    }

    @Override
    public Field<String> field3() {
        return MAcc.M_ACC.MODEL_KEY;
    }

    @Override
    public Field<String> field4() {
        return MAcc.M_ACC.RECORD_JSON;
    }

    @Override
    public Field<String> field5() {
        return MAcc.M_ACC.RECORD_RAW;
    }

    @Override
    public Field<String> field6() {
        return MAcc.M_ACC.RECORD_UNIQUE;
    }

    @Override
    public Field<String> field7() {
        return MAcc.M_ACC.SIGMA;
    }

    @Override
    public Field<String> field8() {
        return MAcc.M_ACC.LANGUAGE;
    }

    @Override
    public Field<Boolean> field9() {
        return MAcc.M_ACC.ACTIVE;
    }

    @Override
    public Field<String> field10() {
        return MAcc.M_ACC.METADATA;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return MAcc.M_ACC.CREATED_AT;
    }

    @Override
    public Field<String> field12() {
        return MAcc.M_ACC.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return MAcc.M_ACC.UPDATED_AT;
    }

    @Override
    public Field<String> field14() {
        return MAcc.M_ACC.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getModelId();
    }

    @Override
    public String component3() {
        return getModelKey();
    }

    @Override
    public String component4() {
        return getRecordJson();
    }

    @Override
    public String component5() {
        return getRecordRaw();
    }

    @Override
    public String component6() {
        return getRecordUnique();
    }

    @Override
    public String component7() {
        return getSigma();
    }

    @Override
    public String component8() {
        return getLanguage();
    }

    @Override
    public Boolean component9() {
        return getActive();
    }

    @Override
    public String component10() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component11() {
        return getCreatedAt();
    }

    @Override
    public String component12() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component13() {
        return getUpdatedAt();
    }

    @Override
    public String component14() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getModelId();
    }

    @Override
    public String value3() {
        return getModelKey();
    }

    @Override
    public String value4() {
        return getRecordJson();
    }

    @Override
    public String value5() {
        return getRecordRaw();
    }

    @Override
    public String value6() {
        return getRecordUnique();
    }

    @Override
    public String value7() {
        return getSigma();
    }

    @Override
    public String value8() {
        return getLanguage();
    }

    @Override
    public Boolean value9() {
        return getActive();
    }

    @Override
    public String value10() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value11() {
        return getCreatedAt();
    }

    @Override
    public String value12() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value13() {
        return getUpdatedAt();
    }

    @Override
    public String value14() {
        return getUpdatedBy();
    }

    @Override
    public MAccRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public MAccRecord value2(String value) {
        setModelId(value);
        return this;
    }

    @Override
    public MAccRecord value3(String value) {
        setModelKey(value);
        return this;
    }

    @Override
    public MAccRecord value4(String value) {
        setRecordJson(value);
        return this;
    }

    @Override
    public MAccRecord value5(String value) {
        setRecordRaw(value);
        return this;
    }

    @Override
    public MAccRecord value6(String value) {
        setRecordUnique(value);
        return this;
    }

    @Override
    public MAccRecord value7(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public MAccRecord value8(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public MAccRecord value9(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public MAccRecord value10(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public MAccRecord value11(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public MAccRecord value12(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public MAccRecord value13(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public MAccRecord value14(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public MAccRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, Boolean value9, String value10, LocalDateTime value11, String value12, LocalDateTime value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IMAcc from) {
        setKey(from.getKey());
        setModelId(from.getModelId());
        setModelKey(from.getModelKey());
        setRecordJson(from.getRecordJson());
        setRecordRaw(from.getRecordRaw());
        setRecordUnique(from.getRecordUnique());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IMAcc> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MAccRecord
     */
    public MAccRecord() {
        super(MAcc.M_ACC);
    }

    /**
     * Create a detached, initialised MAccRecord
     */
    public MAccRecord(String key, String modelId, String modelKey, String recordJson, String recordRaw, String recordUnique, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(MAcc.M_ACC);

        setKey(key);
        setModelId(modelId);
        setModelKey(modelKey);
        setRecordJson(recordJson);
        setRecordRaw(recordRaw);
        setRecordUnique(recordUnique);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised MAccRecord
     */
    public MAccRecord(cn.vertxup.atom.domain.tables.pojos.MAcc value) {
        super(MAcc.M_ACC);

        if (value != null) {
            setKey(value.getKey());
            setModelId(value.getModelId());
            setModelKey(value.getModelKey());
            setRecordJson(value.getRecordJson());
            setRecordRaw(value.getRecordRaw());
            setRecordUnique(value.getRecordUnique());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public MAccRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
