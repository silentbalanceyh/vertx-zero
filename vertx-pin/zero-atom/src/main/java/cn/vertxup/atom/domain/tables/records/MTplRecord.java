/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.atom.domain.tables.records;


import cn.vertxup.atom.domain.tables.MTpl;
import cn.vertxup.atom.domain.tables.interfaces.IMTpl;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MTplRecord extends UpdatableRecordImpl<MTplRecord> implements VertxPojo, IMTpl {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.KEY</code>. 「key」- 模板ID
     */
    @Override
    public MTplRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.KEY</code>. 「key」- 模板ID
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.NAME</code>. 「name」- 模板名称
     */
    @Override
    public MTplRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.NAME</code>. 「name」- 模板名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.CODE</code>. 「code」- 模板编码
     */
    @Override
    public MTplRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.CODE</code>. 「code」- 模板编码
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TYPE</code>. 「type」- 模板类型
     */
    @Override
    public MTplRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TYPE</code>. 「type」- 模板类型
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_CATEGORY</code>. 「tplCategory」-
     * 分类配置
     */
    @Override
    public MTplRecord setTplCategory(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_CATEGORY</code>. 「tplCategory」-
     * 分类配置
     */
    @Override
    public String getTplCategory() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_INTEGRATION</code>.
     * 「tplIntegration」- 集成配置
     */
    @Override
    public MTplRecord setTplIntegration(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_INTEGRATION</code>.
     * 「tplIntegration」- 集成配置
     */
    @Override
    public String getTplIntegration() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_ACL</code>. 「tplAcl」- 安全配置
     */
    @Override
    public MTplRecord setTplAcl(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_ACL</code>. 「tplAcl」- 安全配置
     */
    @Override
    public String getTplAcl() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_ACL_VISIT</code>. 「tplAclVisit」-
     * 资源访问者配置
     */
    @Override
    public MTplRecord setTplAclVisit(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_ACL_VISIT</code>. 「tplAclVisit」-
     * 资源访问者配置
     */
    @Override
    public String getTplAclVisit() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_MODEL</code>. 「tplModel」- 模型配置
     */
    @Override
    public MTplRecord setTplModel(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_MODEL</code>. 「tplModel」- 模型配置
     */
    @Override
    public String getTplModel() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_ENTITY</code>. 「tplEntity」- 实体配置
     */
    @Override
    public MTplRecord setTplEntity(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_ENTITY</code>. 「tplEntity」- 实体配置
     */
    @Override
    public String getTplEntity() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_API</code>. 「tplApi」- 接口配置
     */
    @Override
    public MTplRecord setTplApi(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_API</code>. 「tplApi」- 接口配置
     */
    @Override
    public String getTplApi() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_JOB</code>. 「tplJob」- 任务配置
     */
    @Override
    public MTplRecord setTplJob(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_JOB</code>. 「tplJob」- 任务配置
     */
    @Override
    public String getTplJob() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_UI</code>. 「tplUi」- 界面配置
     */
    @Override
    public MTplRecord setTplUi(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_UI</code>. 「tplUi」- 界面配置
     */
    @Override
    public String getTplUi() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_UI_LIST</code>. 「tplUiList」- 界面列表配置
     */
    @Override
    public MTplRecord setTplUiList(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_UI_LIST</code>. 「tplUiList」- 界面列表配置
     */
    @Override
    public String getTplUiList() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_UI_FORM</code>. 「tplUiForm」- 界面表单配置
     */
    @Override
    public MTplRecord setTplUiForm(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_UI_FORM</code>. 「tplUiForm」- 界面表单配置
     */
    @Override
    public String getTplUiForm() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public MTplRecord setSigma(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public MTplRecord setLanguage(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public MTplRecord setActive(Boolean value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public MTplRecord setMetadata(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public MTplRecord setCreatedAt(LocalDateTime value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(19);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public MTplRecord setCreatedBy(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(20);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public MTplRecord setUpdatedAt(LocalDateTime value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(21);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public MTplRecord setUpdatedBy(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(22);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IMTpl from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setType(from.getType());
        setTplCategory(from.getTplCategory());
        setTplIntegration(from.getTplIntegration());
        setTplAcl(from.getTplAcl());
        setTplAclVisit(from.getTplAclVisit());
        setTplModel(from.getTplModel());
        setTplEntity(from.getTplEntity());
        setTplApi(from.getTplApi());
        setTplJob(from.getTplJob());
        setTplUi(from.getTplUi());
        setTplUiList(from.getTplUiList());
        setTplUiForm(from.getTplUiForm());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IMTpl> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MTplRecord
     */
    public MTplRecord() {
        super(MTpl.M_TPL);
    }

    /**
     * Create a detached, initialised MTplRecord
     */
    public MTplRecord(String key, String name, String code, String type, String tplCategory, String tplIntegration, String tplAcl, String tplAclVisit, String tplModel, String tplEntity, String tplApi, String tplJob, String tplUi, String tplUiList, String tplUiForm, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(MTpl.M_TPL);

        setKey(key);
        setName(name);
        setCode(code);
        setType(type);
        setTplCategory(tplCategory);
        setTplIntegration(tplIntegration);
        setTplAcl(tplAcl);
        setTplAclVisit(tplAclVisit);
        setTplModel(tplModel);
        setTplEntity(tplEntity);
        setTplApi(tplApi);
        setTplJob(tplJob);
        setTplUi(tplUi);
        setTplUiList(tplUiList);
        setTplUiForm(tplUiForm);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
    }

    /**
     * Create a detached, initialised MTplRecord
     */
    public MTplRecord(cn.vertxup.atom.domain.tables.pojos.MTpl value) {
        super(MTpl.M_TPL);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setType(value.getType());
            setTplCategory(value.getTplCategory());
            setTplIntegration(value.getTplIntegration());
            setTplAcl(value.getTplAcl());
            setTplAclVisit(value.getTplAclVisit());
            setTplModel(value.getTplModel());
            setTplEntity(value.getTplEntity());
            setTplApi(value.getTplApi());
            setTplJob(value.getTplJob());
            setTplUi(value.getTplUi());
            setTplUiList(value.getTplUiList());
            setTplUiForm(value.getTplUiForm());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
        }
    }

        public MTplRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
